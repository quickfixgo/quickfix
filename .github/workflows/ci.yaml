name: CI
on:
  push:
    tags:
      - v*
    branches:
      - master
      - main
  pull_request:
    branches:
      - master
      - main
permissions:
  contents: read

jobs:
  golangci:
    permissions:
      contents: read  # for actions/checkout to fetch code
      pull-requests: read  # for golangci/golangci-lint-action to fetch pull requests
    name: Linter
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3
      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.19'
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          # Optional: version of golangci-lint to use in form of v1.2 or v1.2.3 or `latest` to use the latest version
          version: latest
      - name: Test style
        run: make test-style

  build:
    name: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go: [1.19]
        fix-version:
          - FIX_TEST=
          - FIX_TEST=fix40
          - FIX_TEST=fix41
          - FIX_TEST=fix42
          - FIX_TEST=fix43
          - FIX_TEST=fix44
          - FIX_TEST=fix50
          - FIX_TEST=fix50sp1
          - FIX_TEST=fix50sp2
    steps:
      - name: Setup
        uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go }}
      - name: Check out source
        uses: actions/checkout@v3
      - name: Run Mongo
        run: docker run -d -p 27017:27017 mongo
      - name: Test
        env:
          GO111MODULE: "on"
          MONGODB_TEST_CXN: "localhost"
        run: make generate; if [ -z "$FIX_TEST" ]; then make build; make; else make build_accept; make $FIX_TEST; fi
