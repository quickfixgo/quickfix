// Code generated by "stringer -type AccountType,AcctIDSource,Adjustment,AdjustmentType,AdvSide,AdvTransType,AffirmStatus,AggregatedBook,AggressorIndicator,AllocAccountType,AllocCancReplaceReason,AllocHandlInst,AllocIntermedReqType,AllocLinkType,AllocMethod,AllocNoOrdersType,AllocPositionEffect,AllocRejCode,AllocReportType,AllocSettlInstType,AllocStatus,AllocTransType,AllocType,ApplQueueAction,ApplQueueResolution,ApplReportType,ApplReqType,ApplResponseError,ApplResponseType,ApplVerID,AsOfIndicator,AssignmentMethod,AvgPxIndicator,BasisPxType,Benchmark,BenchmarkCurveName,BidDescriptorType,BidRequestTransType,BidTradeType,BidType,BookingType,BookingUnit,BusinessRejectReason,CPProgram,CancellationRights,CashMargin,ClearingFeeIndicator,ClearingInstruction,CollAction,CollApplType,CollAsgnReason,CollAsgnRejectReason,CollAsgnRespType,CollAsgnTransType,CollInquiryQualifier,CollInquiryResult,CollInquiryStatus,CollStatus,CommType,ComplexEventCondition,ComplexEventPriceBoundaryMethod,ComplexEventPriceTimeType,ComplexEventType,ConfirmRejReason,ConfirmStatus,ConfirmTransType,ConfirmType,ContAmtType,ContingencyType,ContractMultiplierUnit,CorporateAction,CoveredOrUncovered,CrossPrioritization,CrossType,CustOrderCapacity,CustOrderHandlingInst,CustomerOrFirm,CxlRejReason,CxlRejResponseTo,CxlType,DKReason,DayBookingInst,DealingCapacity,DeleteReason,DeliveryForm,DeliveryType,DerivativeSecurityListRequestType,DeskOrderHandlingInst,DeskType,DeskTypeSource,DiscretionInst,DiscretionLimitType,DiscretionMoveType,DiscretionOffsetType,DiscretionRoundDirection,DiscretionScope,DisplayMethod,DisplayWhen,DistribPaymentMethod,DlvyInstType,DueToRelated,EmailType,EncryptMethod,EventType,ExDestination,ExDestinationIDSource,ExchangeForPhysical,ExecAckStatus,ExecInst,ExecPriceType,ExecRestatementReason,ExecTransType,ExecType,ExerciseMethod,ExerciseStyle,ExpType,ExpirationCycle,ExpirationQtyType,FinancialStatus,FlowScheduleType,ForexReq,FundRenewWaiv,FuturesValuationMethod,GTBookingInst,GapFillFlag,HaltReasonChar,HaltReasonInt,HandlInst,IDSource,IOINaturalFlag,IOIOthSvc,IOIQltyInd,IOIQty,IOIQualifier,IOIShares,IOITransType,ImpliedMarketIndicator,InViewOfCommon,IncTaxInd,IndividualAllocType,InstrAttribType,InstrRegistry,LastCapacity,LastFragment,LastLiquidityInd,LastRptRequested,LegSwapType,LegalConfirm,LiquidityIndType,ListExecInstType,ListMethod,ListOrderStatus,ListRejectReason,ListStatusType,LocateReqd,LotType,MDBookType,MDEntryType,MDImplicitDelete,MDOriginType,MDQuoteType,MDReqRejReason,MDSecSizeType,MDUpdateAction,MDUpdateType,MarketUpdateAction,MassActionRejectReason,MassActionResponse,MassActionScope,MassActionType,MassCancelRejectReason,MassCancelRequestType,MassCancelResponse,MassStatusReqType,MatchStatus,MatchType,MaturityMonthYearFormat,MaturityMonthYearIncrementUnits,MessageEncoding,MiscFeeBasis,MiscFeeType,ModelType,MoneyLaunderingStatus,MsgDirection,MsgType,MultiLegReportingType,MultiLegRptTypeReq,MultilegModel,MultilegPriceMethod,NetGrossInd,NetworkRequestType,NetworkStatusResponseType,NewsCategory,NewsRefType,NoSides,NotifyBrokerOfCredit,OddLot,OpenClose,OpenCloseSettlFlag,OpenCloseSettleFlag,OptPayoutType,OrdRejReason,OrdStatus,OrdType,OrderCapacity,OrderCategory,OrderDelayUnit,OrderHandlingInstSource,OrderRestrictions,OrigCustOrderCapacity,OwnerType,OwnershipType,PartyDetailsRequestResult,PartyIDSource,PartyListResponseType,PartyRelationship,PartyRole,PartySubIDType,PaymentMethod,PegLimitType,PegMoveType,PegOffsetType,PegPriceType,PegRoundDirection,PegScope,PosAmtType,PosMaintAction,PosMaintResult,PosMaintStatus,PosQtyStatus,PosReqResult,PosReqStatus,PosReqType,PosTransType,PosType,PositionEffect,PossDupFlag,PossResend,PreallocMethod,PreviouslyReported,PriceLimitType,PriceProtectionScope,PriceQuoteMethod,PriceType,PriorityIndicator,ProcessCode,Product,ProgRptReqs,PublishTrdIndicator,PutOrCall,QtyType,QuantityType,QuoteAckStatus,QuoteCancelType,QuoteCondition,QuoteEntryRejectReason,QuoteEntryStatus,QuotePriceType,QuoteRejectReason,QuoteRequestRejectReason,QuoteRequestType,QuoteRespType,QuoteResponseLevel,QuoteStatus,QuoteType,RateSource,RateSourceType,RefOrdIDReason,RefOrderIDSource,RegistRejReasonCode,RegistStatus,RegistTransType,ReportToExch,ResetSeqNumFlag,RespondentType,ResponseTransportType,RestructuringType,RiskInstrumentOperator,RiskLimitType,RoundingDirection,RoutingType,Rule80A,Scope,SecDefStatus,SecurityIDSource,SecurityListRequestType,SecurityListType,SecurityListTypeSource,SecurityRequestResult,SecurityRequestType,SecurityResponseType,SecurityStatus,SecurityTradingEvent,SecurityTradingStatus,SecurityType,SecurityUpdateAction,Seniority,SessionRejectReason,SessionStatus,SettlCurrFxRateCalc,SettlDeliveryType,SettlInstMode,SettlInstReqRejCode,SettlInstSource,SettlInstTransType,SettlLocation,SettlMethod,SettlObligMode,SettlObligSource,SettlObligTransType,SettlPriceType,SettlSessID,SettlType,SettlmntTyp,ShortSaleReason,Side,SideMultiLegReportingType,SideTrdSubTyp,SideValueInd,SolicitedFlag,StandInstDbType,StatsType,StatusValue,StipulationType,StrategyParameterType,StreamAsgnAckType,StreamAsgnRejReason,StreamAsgnReqType,StreamAsgnType,StrikePriceBoundaryMethod,StrikePriceDeterminationMethod,SubscriptionRequestType,SymbolSfx,TargetStrategy,TaxAdvantageType,TerminationType,TestMessageIndicator,TickDirection,TickRuleType,TimeInForce,TimeUnit,TradSesEvent,TradSesMethod,TradSesMode,TradSesStatus,TradSesStatusRejReason,TradeAllocIndicator,TradeCondition,TradeHandlingInstr,TradePublishIndicator,TradeReportRejectReason,TradeReportTransType,TradeReportType,TradeRequestResult,TradeRequestStatus,TradeRequestType,TradeType,TradedFlatSwitch,TradingSessionID,TradingSessionSubID,TrdRegTimestampType,TrdRptStatus,TrdSubType,TrdType,TriggerAction,TriggerOrderType,TriggerPriceDirection,TriggerPriceType,TriggerPriceTypeScope,TriggerType,UnderlyingCashType,UnderlyingFXRateCalc,UnderlyingPriceDeterminationMethod,UnderlyingSettlementType,UnitOfMeasure,UnsolicitedIndicator,Urgency,UserRequestType,UserStatus,ValuationMethod,VenueType,WorkingIndicator,YieldType -output enums.generated-reverse.go enums.generated.go"; DO NOT EDIT.

package enum

const _AccountType_name = "AccountType_ACCOUNT_IS_CARRIED_ON_CUSTOMER_SIDE_OF_THE_BOOKSAccountType_ACCOUNT_IS_CARRIED_ON_NON_CUSTOMER_SIDE_OF_BOOKSAccountType_HOUSE_TRADERAccountType_FLOOR_TRADERAccountType_ACCOUNT_IS_CARRIED_ON_NON_CUSTOMER_SIDE_OF_BOOKS_AND_IS_CROSS_MARGINEDAccountType_ACCOUNT_IS_HOUSE_TRADER_AND_IS_CROSS_MARGINEDAccountType_JOINT_BACK_OFFICE_ACCOUNT"

var _AccountType_map = map[AccountType]string{
	"1": _AccountType_name[0:60],
	"2": _AccountType_name[60:120],
	"3": _AccountType_name[120:144],
	"4": _AccountType_name[144:168],
	"6": _AccountType_name[168:250],
	"7": _AccountType_name[250:307],
	"8": _AccountType_name[307:344],
}

func (i AccountType) String() string {
	if str, ok := _AccountType_map[i]; ok {
		return str
	}
	return "AccountType(" + i.String() + ")"
}

const _AcctIDSource_name = "AcctIDSource_BICAcctIDSource_SID_CODEAcctIDSource_TFMAcctIDSource_OMGEOAcctIDSource_DTCC_CODEAcctIDSource_OTHER"

var _AcctIDSource_map = map[AcctIDSource]string{
	"1":  _AcctIDSource_name[0:16],
	"2":  _AcctIDSource_name[16:37],
	"3":  _AcctIDSource_name[37:53],
	"4":  _AcctIDSource_name[53:71],
	"5":  _AcctIDSource_name[71:93],
	"99": _AcctIDSource_name[93:111],
}

func (i AcctIDSource) String() string {
	if str, ok := _AcctIDSource_map[i]; ok {
		return str
	}
	return "AcctIDSource(" + i.String() + ")"
}

const _Adjustment_name = "Adjustment_CANCELAdjustment_ERRORAdjustment_CORRECTION"

var _Adjustment_map = map[Adjustment]string{
	"1": _Adjustment_name[0:17],
	"2": _Adjustment_name[17:33],
	"3": _Adjustment_name[33:54],
}

func (i Adjustment) String() string {
	if str, ok := _Adjustment_map[i]; ok {
		return str
	}
	return "Adjustment(" + i.String() + ")"
}

const _AdjustmentType_name = "AdjustmentType_PROCESS_REQUEST_AS_MARGIN_DISPOSITIONAdjustmentType_DELTA_PLUSAdjustmentType_DELTA_MINUSAdjustmentType_FINAL"

var _AdjustmentType_map = map[AdjustmentType]string{
	"0": _AdjustmentType_name[0:52],
	"1": _AdjustmentType_name[52:77],
	"2": _AdjustmentType_name[77:103],
	"3": _AdjustmentType_name[103:123],
}

func (i AdjustmentType) String() string {
	if str, ok := _AdjustmentType_map[i]; ok {
		return str
	}
	return "AdjustmentType(" + i.String() + ")"
}

const _AdvSide_name = "AdvSide_BUYAdvSide_SELLAdvSide_TRADEAdvSide_CROSS"

var _AdvSide_map = map[AdvSide]string{
	"B": _AdvSide_name[0:11],
	"S": _AdvSide_name[11:23],
	"T": _AdvSide_name[23:36],
	"X": _AdvSide_name[36:49],
}

func (i AdvSide) String() string {
	if str, ok := _AdvSide_map[i]; ok {
		return str
	}
	return "AdvSide(" + i.String() + ")"
}

const _AdvTransType_name = "AdvTransType_CANCELAdvTransType_NEWAdvTransType_REPLACE"

var _AdvTransType_map = map[AdvTransType]string{
	"C": _AdvTransType_name[0:19],
	"N": _AdvTransType_name[19:35],
	"R": _AdvTransType_name[35:55],
}

func (i AdvTransType) String() string {
	if str, ok := _AdvTransType_map[i]; ok {
		return str
	}
	return "AdvTransType(" + i.String() + ")"
}

const _AffirmStatus_name = "AffirmStatus_RECEIVEDAffirmStatus_CONFIRM_REJECTED_IE_NOT_AFFIRMEDAffirmStatus_AFFIRMED"

var _AffirmStatus_map = map[AffirmStatus]string{
	"1": _AffirmStatus_name[0:21],
	"2": _AffirmStatus_name[21:66],
	"3": _AffirmStatus_name[66:87],
}

func (i AffirmStatus) String() string {
	if str, ok := _AffirmStatus_map[i]; ok {
		return str
	}
	return "AffirmStatus(" + i.String() + ")"
}

const _AggregatedBook_name = "AggregatedBook_NOAggregatedBook_YES"

var _AggregatedBook_map = map[AggregatedBook]string{
	"N": _AggregatedBook_name[0:17],
	"Y": _AggregatedBook_name[17:35],
}

func (i AggregatedBook) String() string {
	if str, ok := _AggregatedBook_map[i]; ok {
		return str
	}
	return "AggregatedBook(" + i.String() + ")"
}

const _AggressorIndicator_name = "AggressorIndicator_NOAggressorIndicator_YES"

var _AggressorIndicator_map = map[AggressorIndicator]string{
	"N": _AggressorIndicator_name[0:21],
	"Y": _AggressorIndicator_name[21:43],
}

func (i AggressorIndicator) String() string {
	if str, ok := _AggressorIndicator_map[i]; ok {
		return str
	}
	return "AggressorIndicator(" + i.String() + ")"
}

const _AllocAccountType_name = "AllocAccountType_ACCOUNT_IS_CARRIED_PN_CUSTOMER_SIDE_OF_BOOKSAllocAccountType_ACCOUNT_IS_CARRIED_ON_NON_CUSTOMER_SIDE_OF_BOOKSAllocAccountType_HOUSE_TRADERAllocAccountType_FLOOR_TRADERAllocAccountType_ACCOUNT_IS_CARRIED_ON_NON_CUSTOMER_SIDE_OF_BOOKS_AND_IS_CROSS_MARGINEDAllocAccountType_ACCOUNT_IS_HOUSE_TRADER_AND_IS_CROSS_MARGINEDAllocAccountType_JOINT_BACK_OFFICE_ACCOUNT"

var _AllocAccountType_map = map[AllocAccountType]string{
	"1": _AllocAccountType_name[0:61],
	"2": _AllocAccountType_name[61:126],
	"3": _AllocAccountType_name[126:155],
	"4": _AllocAccountType_name[155:184],
	"6": _AllocAccountType_name[184:271],
	"7": _AllocAccountType_name[271:333],
	"8": _AllocAccountType_name[333:375],
}

func (i AllocAccountType) String() string {
	if str, ok := _AllocAccountType_map[i]; ok {
		return str
	}
	return "AllocAccountType(" + i.String() + ")"
}

const _AllocCancReplaceReason_name = "AllocCancReplaceReason_ORIGINAL_DETAILS_INCOMPLETE_INCORRECTAllocCancReplaceReason_CHANGE_IN_UNDERLYING_ORDER_DETAILSAllocCancReplaceReason_OTHER"

var _AllocCancReplaceReason_map = map[AllocCancReplaceReason]string{
	"1":  _AllocCancReplaceReason_name[0:60],
	"2":  _AllocCancReplaceReason_name[60:117],
	"99": _AllocCancReplaceReason_name[117:145],
}

func (i AllocCancReplaceReason) String() string {
	if str, ok := _AllocCancReplaceReason_map[i]; ok {
		return str
	}
	return "AllocCancReplaceReason(" + i.String() + ")"
}

const _AllocHandlInst_name = "AllocHandlInst_MATCHAllocHandlInst_FORWARDAllocHandlInst_FORWARD_AND_MATCH"

var _AllocHandlInst_map = map[AllocHandlInst]string{
	"1": _AllocHandlInst_name[0:20],
	"2": _AllocHandlInst_name[20:42],
	"3": _AllocHandlInst_name[42:74],
}

func (i AllocHandlInst) String() string {
	if str, ok := _AllocHandlInst_map[i]; ok {
		return str
	}
	return "AllocHandlInst(" + i.String() + ")"
}

const _AllocIntermedReqType_name = "AllocIntermedReqType_PENDING_ACCEPTAllocIntermedReqType_PENDING_RELEASEAllocIntermedReqType_PENDING_REVERSALAllocIntermedReqType_ACCEPTAllocIntermedReqType_BLOCK_LEVEL_REJECTAllocIntermedReqType_ACCOUNT_LEVEL_REJECT"

var _AllocIntermedReqType_map = map[AllocIntermedReqType]string{
	"1": _AllocIntermedReqType_name[0:35],
	"2": _AllocIntermedReqType_name[35:71],
	"3": _AllocIntermedReqType_name[71:108],
	"4": _AllocIntermedReqType_name[108:135],
	"5": _AllocIntermedReqType_name[135:174],
	"6": _AllocIntermedReqType_name[174:215],
}

func (i AllocIntermedReqType) String() string {
	if str, ok := _AllocIntermedReqType_map[i]; ok {
		return str
	}
	return "AllocIntermedReqType(" + i.String() + ")"
}

const _AllocLinkType_name = "AllocLinkType_FX_NETTINGAllocLinkType_FX_SWAP"

var _AllocLinkType_map = map[AllocLinkType]string{
	"0": _AllocLinkType_name[0:24],
	"1": _AllocLinkType_name[24:45],
}

func (i AllocLinkType) String() string {
	if str, ok := _AllocLinkType_map[i]; ok {
		return str
	}
	return "AllocLinkType(" + i.String() + ")"
}

const _AllocMethod_name = "AllocMethod_AUTOMATICAllocMethod_GUARANTORAllocMethod_MANUAL"

var _AllocMethod_map = map[AllocMethod]string{
	"1": _AllocMethod_name[0:21],
	"2": _AllocMethod_name[21:42],
	"3": _AllocMethod_name[42:60],
}

func (i AllocMethod) String() string {
	if str, ok := _AllocMethod_map[i]; ok {
		return str
	}
	return "AllocMethod(" + i.String() + ")"
}

const _AllocNoOrdersType_name = "AllocNoOrdersType_NOT_SPECIFIEDAllocNoOrdersType_EXPLICIT_LIST_PROVIDED"

var _AllocNoOrdersType_map = map[AllocNoOrdersType]string{
	"0": _AllocNoOrdersType_name[0:31],
	"1": _AllocNoOrdersType_name[31:71],
}

func (i AllocNoOrdersType) String() string {
	if str, ok := _AllocNoOrdersType_map[i]; ok {
		return str
	}
	return "AllocNoOrdersType(" + i.String() + ")"
}

const _AllocPositionEffect_name = "AllocPositionEffect_CLOSEAllocPositionEffect_FIFOAllocPositionEffect_OPENAllocPositionEffect_ROLLED"

var _AllocPositionEffect_map = map[AllocPositionEffect]string{
	"C": _AllocPositionEffect_name[0:25],
	"F": _AllocPositionEffect_name[25:49],
	"O": _AllocPositionEffect_name[49:73],
	"R": _AllocPositionEffect_name[73:99],
}

func (i AllocPositionEffect) String() string {
	if str, ok := _AllocPositionEffect_map[i]; ok {
		return str
	}
	return "AllocPositionEffect(" + i.String() + ")"
}

const _AllocRejCode_name = "AllocRejCode_UNKNOWN_ACCOUNTAllocRejCode_INCORRECT_QUANTITYAllocRejCode_UNKNOWN_OR_STALE_EXECIDAllocRejCode_MISMATCHED_DATAAllocRejCode_UNKNOWN_CLORDIDAllocRejCode_WAREHOUSE_REQUEST_REJECTEDAllocRejCode_INCORRECT_AVERAGEG_PRICEAllocRejCode_UNKNOWN_EXECUTING_BROKER_MNEMONICAllocRejCode_COMMISSION_DIFFERENCEAllocRejCode_UNKNOWN_ORDERIDAllocRejCode_UNKNOWN_LISTIDAllocRejCode_OTHER_7AllocRejCode_INCORRECT_ALLOCATED_QUANTITYAllocRejCode_CALCULATION_DIFFERENCEAllocRejCode_OTHER_99"

var _AllocRejCode_map = map[AllocRejCode]string{
	"0":  _AllocRejCode_name[0:28],
	"1":  _AllocRejCode_name[28:59],
	"10": _AllocRejCode_name[59:95],
	"11": _AllocRejCode_name[95:123],
	"12": _AllocRejCode_name[123:151],
	"13": _AllocRejCode_name[151:190],
	"2":  _AllocRejCode_name[190:227],
	"3":  _AllocRejCode_name[227:273],
	"4":  _AllocRejCode_name[273:307],
	"5":  _AllocRejCode_name[307:335],
	"6":  _AllocRejCode_name[335:362],
	"7":  _AllocRejCode_name[362:382],
	"8":  _AllocRejCode_name[382:423],
	"9":  _AllocRejCode_name[423:458],
	"99": _AllocRejCode_name[458:479],
}

func (i AllocRejCode) String() string {
	if str, ok := _AllocRejCode_map[i]; ok {
		return str
	}
	return "AllocRejCode(" + i.String() + ")"
}

const _AllocReportType_name = "AllocReportType_REJECTAllocReportType_ACCEPT_PENDINGAllocReportType_COMPLETEAllocReportType_REVERSE_PENDINGAllocReportType_PRELIMINARY_REQUEST_TO_INTERMEDIARYAllocReportType_SELLSIDE_CALCULATED_USING_PRELIMINARYAllocReportType_SELLSIDE_CALCULATED_WITHOUT_PRELIMINARYAllocReportType_WAREHOUSE_RECAPAllocReportType_REQUEST_TO_INTERMEDIARYAllocReportType_ACCEPT"

var _AllocReportType_map = map[AllocReportType]string{
	"10": _AllocReportType_name[0:22],
	"11": _AllocReportType_name[22:52],
	"12": _AllocReportType_name[52:76],
	"14": _AllocReportType_name[76:107],
	"2":  _AllocReportType_name[107:158],
	"3":  _AllocReportType_name[158:211],
	"4":  _AllocReportType_name[211:266],
	"5":  _AllocReportType_name[266:297],
	"8":  _AllocReportType_name[297:336],
	"9":  _AllocReportType_name[336:358],
}

func (i AllocReportType) String() string {
	if str, ok := _AllocReportType_map[i]; ok {
		return str
	}
	return "AllocReportType(" + i.String() + ")"
}

const _AllocSettlInstType_name = "AllocSettlInstType_USE_DEFAULT_INSTRUCTIONSAllocSettlInstType_DERIVE_FROM_PARAMETERS_PROVIDEDAllocSettlInstType_FULL_DETAILS_PROVIDEDAllocSettlInstType_SSI_DB_IDS_PROVIDEDAllocSettlInstType_PHONE_FOR_INSTRUCTIONS"

var _AllocSettlInstType_map = map[AllocSettlInstType]string{
	"0": _AllocSettlInstType_name[0:43],
	"1": _AllocSettlInstType_name[43:93],
	"2": _AllocSettlInstType_name[93:133],
	"3": _AllocSettlInstType_name[133:171],
	"4": _AllocSettlInstType_name[171:212],
}

func (i AllocSettlInstType) String() string {
	if str, ok := _AllocSettlInstType_map[i]; ok {
		return str
	}
	return "AllocSettlInstType(" + i.String() + ")"
}

const _AllocStatus_name = "AllocStatus_ACCEPTEDAllocStatus_BLOCK_LEVEL_REJECTAllocStatus_ACCOUNT_LEVEL_REJECTAllocStatus_RECEIVEDAllocStatus_INCOMPLETEAllocStatus_REJECTED_BY_INTERMEDIARYAllocStatus_ALLOCATION_PENDINGAllocStatus_REVERSED"

var _AllocStatus_map = map[AllocStatus]string{
	"0": _AllocStatus_name[0:20],
	"1": _AllocStatus_name[20:50],
	"2": _AllocStatus_name[50:82],
	"3": _AllocStatus_name[82:102],
	"4": _AllocStatus_name[102:124],
	"5": _AllocStatus_name[124:160],
	"6": _AllocStatus_name[160:190],
	"7": _AllocStatus_name[190:210],
}

func (i AllocStatus) String() string {
	if str, ok := _AllocStatus_map[i]; ok {
		return str
	}
	return "AllocStatus(" + i.String() + ")"
}

const _AllocTransType_name = "AllocTransType_NEWAllocTransType_REPLACEAllocTransType_CANCELAllocTransType_PRELIMINARYAllocTransType_CALCULATEDAllocTransType_CALCULATED_WITHOUT_PRELIMINARYAllocTransType_REVERSAL"

var _AllocTransType_map = map[AllocTransType]string{
	"0": _AllocTransType_name[0:18],
	"1": _AllocTransType_name[18:40],
	"2": _AllocTransType_name[40:61],
	"3": _AllocTransType_name[61:87],
	"4": _AllocTransType_name[87:112],
	"5": _AllocTransType_name[112:157],
	"6": _AllocTransType_name[157:180],
}

func (i AllocTransType) String() string {
	if str, ok := _AllocTransType_map[i]; ok {
		return str
	}
	return "AllocTransType(" + i.String() + ")"
}

const _AllocType_name = "AllocType_CALCULATEDAllocType_REJECTAllocType_ACCEPT_PENDINGAllocType_INCOMPLETE_GROUPAllocType_COMPLETE_GROUPAllocType_REVERSAL_PENDINGAllocType_PRELIMINARYAllocType_SELLSIDE_CALCULATED_USING_PRELIMINARYAllocType_SELLSIDE_CALCULATED_WITHOUT_PRELIMINARYAllocType_READY_TO_BOOKAllocType_BUYSIDE_READY_TO_BOOKAllocType_WAREHOUSE_INSTRUCTIONAllocType_REQUEST_TO_INTERMEDIARYAllocType_ACCEPT"

var _AllocType_map = map[AllocType]string{
	"1":  _AllocType_name[0:20],
	"10": _AllocType_name[20:36],
	"11": _AllocType_name[36:60],
	"12": _AllocType_name[60:86],
	"13": _AllocType_name[86:110],
	"14": _AllocType_name[110:136],
	"2":  _AllocType_name[136:157],
	"3":  _AllocType_name[157:204],
	"4":  _AllocType_name[204:253],
	"5":  _AllocType_name[253:276],
	"6":  _AllocType_name[276:307],
	"7":  _AllocType_name[307:338],
	"8":  _AllocType_name[338:371],
	"9":  _AllocType_name[371:387],
}

func (i AllocType) String() string {
	if str, ok := _AllocType_map[i]; ok {
		return str
	}
	return "AllocType(" + i.String() + ")"
}

const _ApplQueueAction_name = "ApplQueueAction_NO_ACTION_TAKENApplQueueAction_QUEUE_FLUSHEDApplQueueAction_OVERLAY_LASTApplQueueAction_END_SESSION"

var _ApplQueueAction_map = map[ApplQueueAction]string{
	"0": _ApplQueueAction_name[0:31],
	"1": _ApplQueueAction_name[31:60],
	"2": _ApplQueueAction_name[60:88],
	"3": _ApplQueueAction_name[88:115],
}

func (i ApplQueueAction) String() string {
	if str, ok := _ApplQueueAction_map[i]; ok {
		return str
	}
	return "ApplQueueAction(" + i.String() + ")"
}

const _ApplQueueResolution_name = "ApplQueueResolution_NO_ACTION_TAKENApplQueueResolution_QUEUE_FLUSHEDApplQueueResolution_OVERLAY_LASTApplQueueResolution_END_SESSION"

var _ApplQueueResolution_map = map[ApplQueueResolution]string{
	"0": _ApplQueueResolution_name[0:35],
	"1": _ApplQueueResolution_name[35:68],
	"2": _ApplQueueResolution_name[68:100],
	"3": _ApplQueueResolution_name[100:131],
}

func (i ApplQueueResolution) String() string {
	if str, ok := _ApplQueueResolution_map[i]; ok {
		return str
	}
	return "ApplQueueResolution(" + i.String() + ")"
}

const _ApplReportType_name = "ApplReportType_RESET_APPLSEQNUM_TO_NEW_VALUE_SPECIFIED_IN_APPLNEWSEQNUMApplReportType_REPORTS_THAT_THE_LAST_MESSAGE_HAS_BEEN_SENT_FOR_THE_APPLIDS_REFER_TO_REFAPPLLASTSEQNUMApplReportType_HEARTBEAT_MESSAGE_INDICATING_THAT_APPLICATION_IDENTIFIED_BY_REFAPPLIDApplReportType_APPLICATION_MESSAGE_RE_SEND_COMPLETED"

var _ApplReportType_map = map[ApplReportType]string{
	"0": _ApplReportType_name[0:71],
	"1": _ApplReportType_name[71:172],
	"2": _ApplReportType_name[172:256],
	"3": _ApplReportType_name[256:308],
}

func (i ApplReportType) String() string {
	if str, ok := _ApplReportType_map[i]; ok {
		return str
	}
	return "ApplReportType(" + i.String() + ")"
}

const _ApplReqType_name = "ApplReqType_RETRANSMISSION_OF_APPLICATION_MESSAGES_FOR_THE_SPECIFIED_APPLICATIONSApplReqType_SUBSCRIPTION_TO_THE_SPECIFIED_APPLICATIONSApplReqType_REQUEST_FOR_THE_LAST_APPLLASTSEQNUM_PUBLISHED_FOR_THE_SPECIFIED_APPLICATIONSApplReqType_REQUEST_VALID_SET_OF_APPLICATIONSApplReqType_UNSUBSCRIBE_TO_THE_SPECIFIED_APPLICATIONSApplReqType_CANCEL_RETRANSMISSIONApplReqType_CANCEL_RETRANSMISSION_AND_UNSUBSCRIBE_TO_THE_SPECIFIED_APPLICATIONS"

var _ApplReqType_map = map[ApplReqType]string{
	"0": _ApplReqType_name[0:81],
	"1": _ApplReqType_name[81:135],
	"2": _ApplReqType_name[135:223],
	"3": _ApplReqType_name[223:268],
	"4": _ApplReqType_name[268:321],
	"5": _ApplReqType_name[321:354],
	"6": _ApplReqType_name[354:433],
}

func (i ApplReqType) String() string {
	if str, ok := _ApplReqType_map[i]; ok {
		return str
	}
	return "ApplReqType(" + i.String() + ")"
}

const _ApplResponseError_name = "ApplResponseError_APPLICATION_DOES_NOT_EXISTApplResponseError_MESSAGES_REQUESTED_ARE_NOT_AVAILABLEApplResponseError_USER_NOT_AUTHORIZED_FOR_APPLICATION"

var _ApplResponseError_map = map[ApplResponseError]string{
	"0": _ApplResponseError_name[0:44],
	"1": _ApplResponseError_name[44:98],
	"2": _ApplResponseError_name[98:151],
}

func (i ApplResponseError) String() string {
	if str, ok := _ApplResponseError_map[i]; ok {
		return str
	}
	return "ApplResponseError(" + i.String() + ")"
}

const _ApplResponseType_name = "ApplResponseType_REQUEST_SUCCESSFULLY_PROCESSEDApplResponseType_APPLICATION_DOES_NOT_EXISTApplResponseType_MESSAGES_NOT_AVAILABLE"

var _ApplResponseType_map = map[ApplResponseType]string{
	"0": _ApplResponseType_name[0:47],
	"1": _ApplResponseType_name[47:90],
	"2": _ApplResponseType_name[90:129],
}

func (i ApplResponseType) String() string {
	if str, ok := _ApplResponseType_map[i]; ok {
		return str
	}
	return "ApplResponseType(" + i.String() + ")"
}

const _ApplVerID_name = "ApplVerID_FIX27ApplVerID_FIX30ApplVerID_FIX40ApplVerID_FIX41ApplVerID_FIX42ApplVerID_FIX43ApplVerID_FIX44ApplVerID_FIX50ApplVerID_FIX50SP1ApplVerID_FIX50SP2"

var _ApplVerID_map = map[ApplVerID]string{
	"0": _ApplVerID_name[0:15],
	"1": _ApplVerID_name[15:30],
	"2": _ApplVerID_name[30:45],
	"3": _ApplVerID_name[45:60],
	"4": _ApplVerID_name[60:75],
	"5": _ApplVerID_name[75:90],
	"6": _ApplVerID_name[90:105],
	"7": _ApplVerID_name[105:120],
	"8": _ApplVerID_name[120:138],
	"9": _ApplVerID_name[138:156],
}

func (i ApplVerID) String() string {
	if str, ok := _ApplVerID_map[i]; ok {
		return str
	}
	return "ApplVerID(" + i.String() + ")"
}

const _AsOfIndicator_name = "AsOfIndicator_FALSEAsOfIndicator_TRUE"

var _AsOfIndicator_map = map[AsOfIndicator]string{
	"0": _AsOfIndicator_name[0:19],
	"1": _AsOfIndicator_name[19:37],
}

func (i AsOfIndicator) String() string {
	if str, ok := _AsOfIndicator_map[i]; ok {
		return str
	}
	return "AsOfIndicator(" + i.String() + ")"
}

const _AssignmentMethod_name = "AssignmentMethod_PRO_RATAAssignmentMethod_RANDOM"

var _AssignmentMethod_map = map[AssignmentMethod]string{
	"P": _AssignmentMethod_name[0:25],
	"R": _AssignmentMethod_name[25:48],
}

func (i AssignmentMethod) String() string {
	if str, ok := _AssignmentMethod_map[i]; ok {
		return str
	}
	return "AssignmentMethod(" + i.String() + ")"
}

const _AvgPxIndicator_name = "AvgPxIndicator_NO_AVERAGE_PRICINGAvgPxIndicator_TRADE_IS_PART_OF_AN_AVERAGE_PRICE_GROUP_IDENTIFIED_BY_THE_TRADELINKIDAvgPxIndicator_LAST_TRADE_IS_THE_AVERAGE_PRICE_GROUP_IDENTIFIED_BY_THE_TRADELINKID"

var _AvgPxIndicator_map = map[AvgPxIndicator]string{
	"0": _AvgPxIndicator_name[0:33],
	"1": _AvgPxIndicator_name[33:117],
	"2": _AvgPxIndicator_name[117:199],
}

func (i AvgPxIndicator) String() string {
	if str, ok := _AvgPxIndicator_map[i]; ok {
		return str
	}
	return "AvgPxIndicator(" + i.String() + ")"
}

const _BasisPxType_name = "BasisPxType_CLOSING_PRICE_AT_MORNINGN_SESSIONBasisPxType_CLOSING_PRICEBasisPxType_CURRENT_PRICEBasisPxType_SQBasisPxType_VWAP_THROUGH_A_DAYBasisPxType_VWAP_THROUGH_A_MORNING_SESSIONBasisPxType_VWAP_THROUGH_AN_AFTERNOON_SESSIONBasisPxType_VWAP_THROUGH_A_DAY_EXCEPT_YORIBasisPxType_VWAP_THROUGH_A_MORNING_SESSION_EXCEPT_YORIBasisPxType_VWAP_THROUGH_AN_AFTERNOON_SESSION_EXCEPT_YORIBasisPxType_STRIKEBasisPxType_OPENBasisPxType_OTHERS"

var _BasisPxType_map = map[BasisPxType]string{
	"2": _BasisPxType_name[0:45],
	"3": _BasisPxType_name[45:70],
	"4": _BasisPxType_name[70:95],
	"5": _BasisPxType_name[95:109],
	"6": _BasisPxType_name[109:139],
	"7": _BasisPxType_name[139:181],
	"8": _BasisPxType_name[181:226],
	"9": _BasisPxType_name[226:268],
	"A": _BasisPxType_name[268:322],
	"B": _BasisPxType_name[322:379],
	"C": _BasisPxType_name[379:397],
	"D": _BasisPxType_name[397:413],
	"Z": _BasisPxType_name[413:431],
}

func (i BasisPxType) String() string {
	if str, ok := _BasisPxType_map[i]; ok {
		return str
	}
	return "BasisPxType(" + i.String() + ")"
}

const _Benchmark_name = "Benchmark_CURVEBenchmark_5YRBenchmark_OLD5Benchmark_10YRBenchmark_OLD10Benchmark_30YRBenchmark_OLD30Benchmark_3MOLIBORBenchmark_6MOLIBOR"

var _Benchmark_map = map[Benchmark]string{
	"1": _Benchmark_name[0:15],
	"2": _Benchmark_name[15:28],
	"3": _Benchmark_name[28:42],
	"4": _Benchmark_name[42:56],
	"5": _Benchmark_name[56:71],
	"6": _Benchmark_name[71:85],
	"7": _Benchmark_name[85:100],
	"8": _Benchmark_name[100:118],
	"9": _Benchmark_name[118:136],
}

func (i Benchmark) String() string {
	if str, ok := _Benchmark_map[i]; ok {
		return str
	}
	return "Benchmark(" + i.String() + ")"
}

const _BenchmarkCurveName_name = "BenchmarkCurveName_EONIABenchmarkCurveName_EUREPOBenchmarkCurveName_EURIBORBenchmarkCurveName_FUTURESWAPBenchmarkCurveName_LIBIDBenchmarkCurveName_LIBORBenchmarkCurveName_MUNIAAABenchmarkCurveName_OTHERBenchmarkCurveName_PFANDBRIEFEBenchmarkCurveName_SONIABenchmarkCurveName_SWAPBenchmarkCurveName_TREASURY"

var _BenchmarkCurveName_map = map[BenchmarkCurveName]string{
	"EONIA":       _BenchmarkCurveName_name[0:24],
	"EUREPO":      _BenchmarkCurveName_name[24:49],
	"Euribor":     _BenchmarkCurveName_name[49:75],
	"FutureSWAP":  _BenchmarkCurveName_name[75:104],
	"LIBID":       _BenchmarkCurveName_name[104:128],
	"LIBOR":       _BenchmarkCurveName_name[128:152],
	"MuniAAA":     _BenchmarkCurveName_name[152:178],
	"OTHER":       _BenchmarkCurveName_name[178:202],
	"Pfandbriefe": _BenchmarkCurveName_name[202:232],
	"SONIA":       _BenchmarkCurveName_name[232:256],
	"SWAP":        _BenchmarkCurveName_name[256:279],
	"Treasury":    _BenchmarkCurveName_name[279:306],
}

func (i BenchmarkCurveName) String() string {
	if str, ok := _BenchmarkCurveName_map[i]; ok {
		return str
	}
	return "BenchmarkCurveName(" + i.String() + ")"
}

const _BidDescriptorType_name = "BidDescriptorType_SECTORBidDescriptorType_COUNTRYBidDescriptorType_INDEX"

var _BidDescriptorType_map = map[BidDescriptorType]string{
	"1": _BidDescriptorType_name[0:24],
	"2": _BidDescriptorType_name[24:49],
	"3": _BidDescriptorType_name[49:72],
}

func (i BidDescriptorType) String() string {
	if str, ok := _BidDescriptorType_map[i]; ok {
		return str
	}
	return "BidDescriptorType(" + i.String() + ")"
}

const _BidRequestTransType_name = "BidRequestTransType_CANCELBidRequestTransType_NO"

var _BidRequestTransType_map = map[BidRequestTransType]string{
	"C": _BidRequestTransType_name[0:26],
	"N": _BidRequestTransType_name[26:48],
}

func (i BidRequestTransType) String() string {
	if str, ok := _BidRequestTransType_map[i]; ok {
		return str
	}
	return "BidRequestTransType(" + i.String() + ")"
}

const _BidTradeType_name = "BidTradeType_AGENCYBidTradeType_VWAP_GUARANTEEBidTradeType_GUARANTEED_CLOSEBidTradeType_RISK_TRADE"

var _BidTradeType_map = map[BidTradeType]string{
	"A": _BidTradeType_name[0:19],
	"G": _BidTradeType_name[19:46],
	"J": _BidTradeType_name[46:75],
	"R": _BidTradeType_name[75:98],
}

func (i BidTradeType) String() string {
	if str, ok := _BidTradeType_map[i]; ok {
		return str
	}
	return "BidTradeType(" + i.String() + ")"
}

const _BidType_name = "BidType_NON_DISCLOSED_STYLEBidType_DISCLOSED_SYTLEBidType_NO_BIDDING_PROCESS"

var _BidType_map = map[BidType]string{
	"1": _BidType_name[0:27],
	"2": _BidType_name[27:50],
	"3": _BidType_name[50:76],
}

func (i BidType) String() string {
	if str, ok := _BidType_map[i]; ok {
		return str
	}
	return "BidType(" + i.String() + ")"
}

const _BookingType_name = "BookingType_REGULAR_BOOKINGBookingType_CFDBookingType_TOTAL_RETURN_SWAP"

var _BookingType_map = map[BookingType]string{
	"0": _BookingType_name[0:27],
	"1": _BookingType_name[27:42],
	"2": _BookingType_name[42:71],
}

func (i BookingType) String() string {
	if str, ok := _BookingType_map[i]; ok {
		return str
	}
	return "BookingType(" + i.String() + ")"
}

const _BookingUnit_name = "BookingUnit_EACH_PARTIAL_EXECUTION_IS_A_BOOKABLE_UNITBookingUnit_AGGREGATE_PARTIAL_EXECUTIONS_ON_THIS_ORDER_AND_BOOK_ONE_TRADE_PER_ORDERBookingUnit_AGGREGATE_EXECUTIONS_FOR_THIS_SYMBOL_SIDE_AND_SETTLEMENT_DATE"

var _BookingUnit_map = map[BookingUnit]string{
	"0": _BookingUnit_name[0:53],
	"1": _BookingUnit_name[53:136],
	"2": _BookingUnit_name[136:209],
}

func (i BookingUnit) String() string {
	if str, ok := _BookingUnit_map[i]; ok {
		return str
	}
	return "BookingUnit(" + i.String() + ")"
}

const _BusinessRejectReason_name = "BusinessRejectReason_OTHERBusinessRejectReason_UNKNOWN_IDBusinessRejectReason_INVALID_PRICE_INCREMENTBusinessRejectReason_UNKNOWN_SECURITYBusinessRejectReason_UNSUPPORTED_MESSAGE_TYPEBusinessRejectReason_APPLICATION_NOT_AVAILABLEBusinessRejectReason_CONDITIONALLY_REQUIRED_FIELD_MISSINGBusinessRejectReason_NOT_AUTHORIZEDBusinessRejectReason_DELIVERTO_FIRM_NOT_AVAILABLE_AT_THIS_TIME"

var _BusinessRejectReason_map = map[BusinessRejectReason]string{
	"0":  _BusinessRejectReason_name[0:26],
	"1":  _BusinessRejectReason_name[26:57],
	"18": _BusinessRejectReason_name[57:101],
	"2":  _BusinessRejectReason_name[101:138],
	"3":  _BusinessRejectReason_name[138:183],
	"4":  _BusinessRejectReason_name[183:229],
	"5":  _BusinessRejectReason_name[229:286],
	"6":  _BusinessRejectReason_name[286:321],
	"7":  _BusinessRejectReason_name[321:383],
}

func (i BusinessRejectReason) String() string {
	if str, ok := _BusinessRejectReason_map[i]; ok {
		return str
	}
	return "BusinessRejectReason(" + i.String() + ")"
}

const _CPProgram_name = "CPProgram_3CPProgram_4CPProgram_OTHER"

var _CPProgram_map = map[CPProgram]string{
	"1":  _CPProgram_name[0:11],
	"2":  _CPProgram_name[11:22],
	"99": _CPProgram_name[22:37],
}

func (i CPProgram) String() string {
	if str, ok := _CPProgram_map[i]; ok {
		return str
	}
	return "CPProgram(" + i.String() + ")"
}

const _CancellationRights_name = "CancellationRights_NO_MCancellationRights_NO_NCancellationRights_NO_OCancellationRights_YES"

var _CancellationRights_map = map[CancellationRights]string{
	"M": _CancellationRights_name[0:23],
	"N": _CancellationRights_name[23:46],
	"O": _CancellationRights_name[46:69],
	"Y": _CancellationRights_name[69:91],
}

func (i CancellationRights) String() string {
	if str, ok := _CancellationRights_map[i]; ok {
		return str
	}
	return "CancellationRights(" + i.String() + ")"
}

const _CashMargin_name = "CashMargin_CASHCashMargin_MARGIN_OPENCashMargin_MARGIN_CLOSE"

var _CashMargin_map = map[CashMargin]string{
	"1": _CashMargin_name[0:15],
	"2": _CashMargin_name[15:37],
	"3": _CashMargin_name[37:60],
}

func (i CashMargin) String() string {
	if str, ok := _CashMargin_map[i]; ok {
		return str
	}
	return "CashMargin(" + i.String() + ")"
}

const _ClearingFeeIndicator_name = "ClearingFeeIndicator_1ST_YEAR_DELEGATE_TRADING_FOR_OWN_ACCOUNTClearingFeeIndicator_2ND_YEAR_DELEGATE_TRADING_FOR_OWN_ACCOUNTClearingFeeIndicator_3RD_YEAR_DELEGATE_TRADING_FOR_OWN_ACCOUNTClearingFeeIndicator_4TH_YEAR_DELEGATE_TRADING_FOR_OWN_ACCOUNTClearingFeeIndicator_5TH_YEAR_DELEGATE_TRADING_FOR_OWN_ACCOUNTClearingFeeIndicator_6TH_YEAR_DELEGATE_TRADING_FOR_OWN_ACCOUNTClearingFeeIndicator_CBOE_MEMBERClearingFeeIndicator_NON_MEMBER_AND_CUSTOMERClearingFeeIndicator_EQUITY_MEMBER_AND_CLEARING_MEMBERClearingFeeIndicator_FULL_AND_ASSOCIATE_MEMBER_TRADING_FOR_OWN_ACCOUNT_AND_AS_FLOOR_BROKERSClearingFeeIndicator_106H_AND_106J_FIRMSClearingFeeIndicator_GIM_IDEM_AND_COM_MEMBERSHIP_INTEREST_HOLDERSClearingFeeIndicator_LESSEE_106F_EMPLOYEESClearingFeeIndicator_ALL_OTHER_OWNERSHIP_TYPES"

var _ClearingFeeIndicator_map = map[ClearingFeeIndicator]string{
	"1": _ClearingFeeIndicator_name[0:62],
	"2": _ClearingFeeIndicator_name[62:124],
	"3": _ClearingFeeIndicator_name[124:186],
	"4": _ClearingFeeIndicator_name[186:248],
	"5": _ClearingFeeIndicator_name[248:310],
	"9": _ClearingFeeIndicator_name[310:372],
	"B": _ClearingFeeIndicator_name[372:404],
	"C": _ClearingFeeIndicator_name[404:448],
	"E": _ClearingFeeIndicator_name[448:502],
	"F": _ClearingFeeIndicator_name[502:593],
	"H": _ClearingFeeIndicator_name[593:633],
	"I": _ClearingFeeIndicator_name[633:698],
	"L": _ClearingFeeIndicator_name[698:740],
	"M": _ClearingFeeIndicator_name[740:786],
}

func (i ClearingFeeIndicator) String() string {
	if str, ok := _ClearingFeeIndicator_map[i]; ok {
		return str
	}
	return "ClearingFeeIndicator(" + i.String() + ")"
}

const _ClearingInstruction_name = "ClearingInstruction_PROCESS_NORMALLYClearingInstruction_EXCLUDE_FROM_ALL_NETTINGClearingInstruction_AUTOMATIC_GIVE_UP_MODEClearingInstruction_QUALIFIED_SERVICE_REPRESENTATIVE_QSRClearingInstruction_CUSTOMER_TRADEClearingInstruction_SELF_CLEARINGClearingInstruction_BILATERAL_NETTING_ONLYClearingInstruction_EX_CLEARINGClearingInstruction_SPECIAL_TRADEClearingInstruction_MULTILATERAL_NETTINGClearingInstruction_CLEAR_AGAINST_CENTRAL_COUNTERPARTYClearingInstruction_EXCLUDE_FROM_CENTRAL_COUNTERPARTYClearingInstruction_MANUAL_MODEClearingInstruction_AUTOMATIC_POSTING_MODE"

var _ClearingInstruction_map = map[ClearingInstruction]string{
	"0":  _ClearingInstruction_name[0:36],
	"1":  _ClearingInstruction_name[36:80],
	"10": _ClearingInstruction_name[80:122],
	"11": _ClearingInstruction_name[122:178],
	"12": _ClearingInstruction_name[178:212],
	"13": _ClearingInstruction_name[212:245],
	"2":  _ClearingInstruction_name[245:287],
	"3":  _ClearingInstruction_name[287:318],
	"4":  _ClearingInstruction_name[318:351],
	"5":  _ClearingInstruction_name[351:391],
	"6":  _ClearingInstruction_name[391:445],
	"7":  _ClearingInstruction_name[445:498],
	"8":  _ClearingInstruction_name[498:529],
	"9":  _ClearingInstruction_name[529:571],
}

func (i ClearingInstruction) String() string {
	if str, ok := _ClearingInstruction_map[i]; ok {
		return str
	}
	return "ClearingInstruction(" + i.String() + ")"
}

const _CollAction_name = "CollAction_RETAINCollAction_ADDCollAction_REMOVE"

var _CollAction_map = map[CollAction]string{
	"0": _CollAction_name[0:17],
	"1": _CollAction_name[17:31],
	"2": _CollAction_name[31:48],
}

func (i CollAction) String() string {
	if str, ok := _CollAction_map[i]; ok {
		return str
	}
	return "CollAction(" + i.String() + ")"
}

const _CollApplType_name = "CollApplType_SPECIFIC_DEPOSITCollApplType_GENERAL"

var _CollApplType_map = map[CollApplType]string{
	"0": _CollApplType_name[0:29],
	"1": _CollApplType_name[29:49],
}

func (i CollApplType) String() string {
	if str, ok := _CollApplType_map[i]; ok {
		return str
	}
	return "CollApplType(" + i.String() + ")"
}

const _CollAsgnReason_name = "CollAsgnReason_INITIALCollAsgnReason_SCHEDULEDCollAsgnReason_TIME_WARNINGCollAsgnReason_MARGIN_DEFICIENCYCollAsgnReason_MARGIN_EXCESSCollAsgnReason_FORWARD_COLLATERAL_DEMANDCollAsgnReason_EVENT_OF_DEFAULTCollAsgnReason_ADVERSE_TAX_EVENT"

var _CollAsgnReason_map = map[CollAsgnReason]string{
	"0": _CollAsgnReason_name[0:22],
	"1": _CollAsgnReason_name[22:46],
	"2": _CollAsgnReason_name[46:73],
	"3": _CollAsgnReason_name[73:105],
	"4": _CollAsgnReason_name[105:133],
	"5": _CollAsgnReason_name[133:173],
	"6": _CollAsgnReason_name[173:204],
	"7": _CollAsgnReason_name[204:236],
}

func (i CollAsgnReason) String() string {
	if str, ok := _CollAsgnReason_map[i]; ok {
		return str
	}
	return "CollAsgnReason(" + i.String() + ")"
}

const _CollAsgnRejectReason_name = "CollAsgnRejectReason_UNKNOWN_DEALCollAsgnRejectReason_UNKNOWN_OR_INVALID_INSTRUMENTCollAsgnRejectReason_UNAUTHORIZED_TRANSACTIONCollAsgnRejectReason_INSUFFICIENT_COLLATERALCollAsgnRejectReason_INVALID_TYPE_OF_COLLATERALCollAsgnRejectReason_EXCESSIVE_SUBSTITUTIONCollAsgnRejectReason_OTHER"

var _CollAsgnRejectReason_map = map[CollAsgnRejectReason]string{
	"0":  _CollAsgnRejectReason_name[0:33],
	"1":  _CollAsgnRejectReason_name[33:83],
	"2":  _CollAsgnRejectReason_name[83:128],
	"3":  _CollAsgnRejectReason_name[128:172],
	"4":  _CollAsgnRejectReason_name[172:219],
	"5":  _CollAsgnRejectReason_name[219:262],
	"99": _CollAsgnRejectReason_name[262:288],
}

func (i CollAsgnRejectReason) String() string {
	if str, ok := _CollAsgnRejectReason_map[i]; ok {
		return str
	}
	return "CollAsgnRejectReason(" + i.String() + ")"
}

const _CollAsgnRespType_name = "CollAsgnRespType_RECEIVEDCollAsgnRespType_ACCEPTEDCollAsgnRespType_DECLINEDCollAsgnRespType_REJECTED"

var _CollAsgnRespType_map = map[CollAsgnRespType]string{
	"0": _CollAsgnRespType_name[0:25],
	"1": _CollAsgnRespType_name[25:50],
	"2": _CollAsgnRespType_name[50:75],
	"3": _CollAsgnRespType_name[75:100],
}

func (i CollAsgnRespType) String() string {
	if str, ok := _CollAsgnRespType_map[i]; ok {
		return str
	}
	return "CollAsgnRespType(" + i.String() + ")"
}

const _CollAsgnTransType_name = "CollAsgnTransType_NEWCollAsgnTransType_REPLACECollAsgnTransType_CANCELCollAsgnTransType_RELEASECollAsgnTransType_REVERSE"

var _CollAsgnTransType_map = map[CollAsgnTransType]string{
	"0": _CollAsgnTransType_name[0:21],
	"1": _CollAsgnTransType_name[21:46],
	"2": _CollAsgnTransType_name[46:70],
	"3": _CollAsgnTransType_name[70:95],
	"4": _CollAsgnTransType_name[95:120],
}

func (i CollAsgnTransType) String() string {
	if str, ok := _CollAsgnTransType_map[i]; ok {
		return str
	}
	return "CollAsgnTransType(" + i.String() + ")"
}

const _CollInquiryQualifier_name = "CollInquiryQualifier_TRADE_DATECollInquiryQualifier_GC_INSTRUMENTCollInquiryQualifier_COLLATERAL_INSTRUMENTCollInquiryQualifier_SUBSTITUTION_ELIGIBLECollInquiryQualifier_NOT_ASSIGNEDCollInquiryQualifier_PARTIALLY_ASSIGNEDCollInquiryQualifier_FULLY_ASSIGNEDCollInquiryQualifier_OUTSTANDING_TRADES"

var _CollInquiryQualifier_map = map[CollInquiryQualifier]string{
	"0": _CollInquiryQualifier_name[0:31],
	"1": _CollInquiryQualifier_name[31:65],
	"2": _CollInquiryQualifier_name[65:107],
	"3": _CollInquiryQualifier_name[107:149],
	"4": _CollInquiryQualifier_name[149:182],
	"5": _CollInquiryQualifier_name[182:221],
	"6": _CollInquiryQualifier_name[221:256],
	"7": _CollInquiryQualifier_name[256:295],
}

func (i CollInquiryQualifier) String() string {
	if str, ok := _CollInquiryQualifier_map[i]; ok {
		return str
	}
	return "CollInquiryQualifier(" + i.String() + ")"
}

const _CollInquiryResult_name = "CollInquiryResult_SUCCESSFULCollInquiryResult_INVALID_OR_UNKNOWN_INSTRUMENTCollInquiryResult_INVALID_OR_UNKNOWN_COLLATERAL_TYPECollInquiryResult_INVALID_PARTIESCollInquiryResult_INVALID_TRANSPORT_TYPE_REQUESTEDCollInquiryResult_INVALID_DESTINATION_REQUESTEDCollInquiryResult_NO_COLLATERAL_FOUND_FOR_THE_TRADE_SPECIFIEDCollInquiryResult_NO_COLLATERAL_FOUND_FOR_THE_ORDER_SPECIFIEDCollInquiryResult_COLLATERAL_INQUIRY_TYPE_NOT_SUPPORTEDCollInquiryResult_UNAUTHORIZED_FOR_COLLATERAL_INQUIRYCollInquiryResult_OTHER"

var _CollInquiryResult_map = map[CollInquiryResult]string{
	"0":  _CollInquiryResult_name[0:28],
	"1":  _CollInquiryResult_name[28:75],
	"2":  _CollInquiryResult_name[75:127],
	"3":  _CollInquiryResult_name[127:160],
	"4":  _CollInquiryResult_name[160:210],
	"5":  _CollInquiryResult_name[210:257],
	"6":  _CollInquiryResult_name[257:318],
	"7":  _CollInquiryResult_name[318:379],
	"8":  _CollInquiryResult_name[379:434],
	"9":  _CollInquiryResult_name[434:487],
	"99": _CollInquiryResult_name[487:510],
}

func (i CollInquiryResult) String() string {
	if str, ok := _CollInquiryResult_map[i]; ok {
		return str
	}
	return "CollInquiryResult(" + i.String() + ")"
}

const _CollInquiryStatus_name = "CollInquiryStatus_ACCEPTEDCollInquiryStatus_ACCEPTED_WITH_WARNINGSCollInquiryStatus_COMPLETEDCollInquiryStatus_COMPLETED_WITH_WARNINGSCollInquiryStatus_REJECTED"

var _CollInquiryStatus_map = map[CollInquiryStatus]string{
	"0": _CollInquiryStatus_name[0:26],
	"1": _CollInquiryStatus_name[26:66],
	"2": _CollInquiryStatus_name[66:93],
	"3": _CollInquiryStatus_name[93:134],
	"4": _CollInquiryStatus_name[134:160],
}

func (i CollInquiryStatus) String() string {
	if str, ok := _CollInquiryStatus_map[i]; ok {
		return str
	}
	return "CollInquiryStatus(" + i.String() + ")"
}

const _CollStatus_name = "CollStatus_UNASSIGNEDCollStatus_PARTIALLY_ASSIGNEDCollStatus_ASSIGNMENT_PROPOSEDCollStatus_ASSIGNEDCollStatus_CHALLENGED"

var _CollStatus_map = map[CollStatus]string{
	"0": _CollStatus_name[0:21],
	"1": _CollStatus_name[21:50],
	"2": _CollStatus_name[50:80],
	"3": _CollStatus_name[80:99],
	"4": _CollStatus_name[99:120],
}

func (i CollStatus) String() string {
	if str, ok := _CollStatus_map[i]; ok {
		return str
	}
	return "CollStatus(" + i.String() + ")"
}

const _CommType_name = "CommType_PER_UNITCommType_PERCENTCommType_ABSOLUTECommType_PERCENTAGE_WAIVED_4CommType_PERCENTAGE_WAIVED_5CommType_POINTS_PER_BOND_OR_CONTRACT"

var _CommType_map = map[CommType]string{
	"1": _CommType_name[0:17],
	"2": _CommType_name[17:33],
	"3": _CommType_name[33:50],
	"4": _CommType_name[50:78],
	"5": _CommType_name[78:106],
	"6": _CommType_name[106:142],
}

func (i CommType) String() string {
	if str, ok := _CommType_map[i]; ok {
		return str
	}
	return "CommType(" + i.String() + ")"
}

const _ComplexEventCondition_name = "ComplexEventCondition_ANDComplexEventCondition_OR"

var _ComplexEventCondition_map = map[ComplexEventCondition]string{
	"1": _ComplexEventCondition_name[0:25],
	"2": _ComplexEventCondition_name[25:49],
}

func (i ComplexEventCondition) String() string {
	if str, ok := _ComplexEventCondition_map[i]; ok {
		return str
	}
	return "ComplexEventCondition(" + i.String() + ")"
}

const _ComplexEventPriceBoundaryMethod_name = "ComplexEventPriceBoundaryMethod_LESS_THAN_COMPLEXEVENTPRICEComplexEventPriceBoundaryMethod_LESS_THAN_OR_EQUAL_TO_COMPLEXEVENTPRICEComplexEventPriceBoundaryMethod_EQUAL_TO_COMPLEXEVENTPRICEComplexEventPriceBoundaryMethod_GREATER_THAN_OR_EQUAL_TO_COMPLEXEVENTPRICEComplexEventPriceBoundaryMethod_GREATER_THAN_COMPLEXEVENTPRICE"

var _ComplexEventPriceBoundaryMethod_map = map[ComplexEventPriceBoundaryMethod]string{
	"1": _ComplexEventPriceBoundaryMethod_name[0:59],
	"2": _ComplexEventPriceBoundaryMethod_name[59:130],
	"3": _ComplexEventPriceBoundaryMethod_name[130:188],
	"4": _ComplexEventPriceBoundaryMethod_name[188:262],
	"5": _ComplexEventPriceBoundaryMethod_name[262:324],
}

func (i ComplexEventPriceBoundaryMethod) String() string {
	if str, ok := _ComplexEventPriceBoundaryMethod_map[i]; ok {
		return str
	}
	return "ComplexEventPriceBoundaryMethod(" + i.String() + ")"
}

const _ComplexEventPriceTimeType_name = "ComplexEventPriceTimeType_EXPIRATIONComplexEventPriceTimeType_IMMEDIATEComplexEventPriceTimeType_SPECIFIED_DATE_TIME"

var _ComplexEventPriceTimeType_map = map[ComplexEventPriceTimeType]string{
	"1": _ComplexEventPriceTimeType_name[0:36],
	"2": _ComplexEventPriceTimeType_name[36:71],
	"3": _ComplexEventPriceTimeType_name[71:116],
}

func (i ComplexEventPriceTimeType) String() string {
	if str, ok := _ComplexEventPriceTimeType_map[i]; ok {
		return str
	}
	return "ComplexEventPriceTimeType(" + i.String() + ")"
}

const _ComplexEventType_name = "ComplexEventType_CAPPEDComplexEventType_TRIGGERComplexEventType_KNOCK_IN_UPComplexEventType_KOCK_IN_DOWNComplexEventType_KNOCK_OUT_UPComplexEventType_KNOCK_OUT_DOWNComplexEventType_UNDERLYINGComplexEventType_RESET_BARRIERComplexEventType_ROLLING_BARRIER"

var _ComplexEventType_map = map[ComplexEventType]string{
	"1": _ComplexEventType_name[0:23],
	"2": _ComplexEventType_name[23:47],
	"3": _ComplexEventType_name[47:75],
	"4": _ComplexEventType_name[75:104],
	"5": _ComplexEventType_name[104:133],
	"6": _ComplexEventType_name[133:164],
	"7": _ComplexEventType_name[164:191],
	"8": _ComplexEventType_name[191:221],
	"9": _ComplexEventType_name[221:253],
}

func (i ComplexEventType) String() string {
	if str, ok := _ComplexEventType_map[i]; ok {
		return str
	}
	return "ComplexEventType(" + i.String() + ")"
}

const _ConfirmRejReason_name = "ConfirmRejReason_MISMATCHED_ACCOUNTConfirmRejReason_MISSING_SETTLEMENT_INSTRUCTIONSConfirmRejReason_OTHER"

var _ConfirmRejReason_map = map[ConfirmRejReason]string{
	"1":  _ConfirmRejReason_name[0:35],
	"2":  _ConfirmRejReason_name[35:83],
	"99": _ConfirmRejReason_name[83:105],
}

func (i ConfirmRejReason) String() string {
	if str, ok := _ConfirmRejReason_map[i]; ok {
		return str
	}
	return "ConfirmRejReason(" + i.String() + ")"
}

const _ConfirmStatus_name = "ConfirmStatus_RECEIVEDConfirmStatus_MISMATCHED_ACCOUNTConfirmStatus_MISSING_SETTLEMENT_INSTRUCTIONSConfirmStatus_CONFIRMEDConfirmStatus_REQUEST_REJECTED"

var _ConfirmStatus_map = map[ConfirmStatus]string{
	"1": _ConfirmStatus_name[0:22],
	"2": _ConfirmStatus_name[22:54],
	"3": _ConfirmStatus_name[54:99],
	"4": _ConfirmStatus_name[99:122],
	"5": _ConfirmStatus_name[122:152],
}

func (i ConfirmStatus) String() string {
	if str, ok := _ConfirmStatus_map[i]; ok {
		return str
	}
	return "ConfirmStatus(" + i.String() + ")"
}

const _ConfirmTransType_name = "ConfirmTransType_NEWConfirmTransType_REPLACEConfirmTransType_CANCEL"

var _ConfirmTransType_map = map[ConfirmTransType]string{
	"0": _ConfirmTransType_name[0:20],
	"1": _ConfirmTransType_name[20:44],
	"2": _ConfirmTransType_name[44:67],
}

func (i ConfirmTransType) String() string {
	if str, ok := _ConfirmTransType_map[i]; ok {
		return str
	}
	return "ConfirmTransType(" + i.String() + ")"
}

const _ConfirmType_name = "ConfirmType_STATUSConfirmType_CONFIRMATIONConfirmType_CONFIRMATION_REQUEST_REJECTED"

var _ConfirmType_map = map[ConfirmType]string{
	"1": _ConfirmType_name[0:18],
	"2": _ConfirmType_name[18:42],
	"3": _ConfirmType_name[42:83],
}

func (i ConfirmType) String() string {
	if str, ok := _ConfirmType_map[i]; ok {
		return str
	}
	return "ConfirmType(" + i.String() + ")"
}

const _ContAmtType_name = "ContAmtType_COMMISSION_AMOUNTContAmtType_EXIT_CHARGE_PERCENTContAmtType_FUND_BASED_RENEWAL_COMMISSION_PERCENTContAmtType_PROJECTED_FUND_VALUEContAmtType_FUND_BASED_RENEWAL_COMMISSION_AMOUNT_13ContAmtType_FUND_BASED_RENEWAL_COMMISSION_AMOUNT_14ContAmtType_NET_SETTLEMENT_AMOUNTContAmtType_COMMISSION_PERCENTContAmtType_INITIAL_CHARGE_AMOUNTContAmtType_INITIAL_CHARGE_PERCENTContAmtType_DISCOUNT_AMOUNTContAmtType_DISCOUNT_PERCENTContAmtType_DILUTION_LEVY_AMOUNTContAmtType_DILUTION_LEVY_PERCENTContAmtType_EXIT_CHARGE_AMOUNT"

var _ContAmtType_map = map[ContAmtType]string{
	"1":  _ContAmtType_name[0:29],
	"10": _ContAmtType_name[29:60],
	"11": _ContAmtType_name[60:109],
	"12": _ContAmtType_name[109:141],
	"13": _ContAmtType_name[141:192],
	"14": _ContAmtType_name[192:243],
	"15": _ContAmtType_name[243:276],
	"2":  _ContAmtType_name[276:306],
	"3":  _ContAmtType_name[306:339],
	"4":  _ContAmtType_name[339:373],
	"5":  _ContAmtType_name[373:400],
	"6":  _ContAmtType_name[400:428],
	"7":  _ContAmtType_name[428:460],
	"8":  _ContAmtType_name[460:493],
	"9":  _ContAmtType_name[493:523],
}

func (i ContAmtType) String() string {
	if str, ok := _ContAmtType_map[i]; ok {
		return str
	}
	return "ContAmtType(" + i.String() + ")"
}

const _ContingencyType_name = "ContingencyType_ONE_CANCELS_THE_OTHERContingencyType_ONE_TRIGGERS_THE_OTHERContingencyType_ONE_UPDATES_THE_OTHER_3ContingencyType_ONE_UPDATES_THE_OTHER_4"

var _ContingencyType_map = map[ContingencyType]string{
	"1": _ContingencyType_name[0:37],
	"2": _ContingencyType_name[37:75],
	"3": _ContingencyType_name[75:114],
	"4": _ContingencyType_name[114:153],
}

func (i ContingencyType) String() string {
	if str, ok := _ContingencyType_map[i]; ok {
		return str
	}
	return "ContingencyType(" + i.String() + ")"
}

const _ContractMultiplierUnit_name = "ContractMultiplierUnit_SHARESContractMultiplierUnit_HOURSContractMultiplierUnit_DAYS"

var _ContractMultiplierUnit_map = map[ContractMultiplierUnit]string{
	"0": _ContractMultiplierUnit_name[0:29],
	"1": _ContractMultiplierUnit_name[29:57],
	"2": _ContractMultiplierUnit_name[57:84],
}

func (i ContractMultiplierUnit) String() string {
	if str, ok := _ContractMultiplierUnit_map[i]; ok {
		return str
	}
	return "ContractMultiplierUnit(" + i.String() + ")"
}

const _CorporateAction_name = "CorporateAction_EX_DIVIDENDCorporateAction_EX_DISTRIBUTIONCorporateAction_EX_RIGHTSCorporateAction_NEWCorporateAction_EX_INTERESTCorporateAction_CASH_DIVIDENDCorporateAction_STOCK_DIVIDENDCorporateAction_NON_INTEGER_STOCK_SPLITCorporateAction_REVERSE_STOCK_SPLITCorporateAction_STANDARD_INTEGER_STOCK_SPLITCorporateAction_POSITION_CONSOLIDATIONCorporateAction_LIQUIDATION_REORGANIZATIONCorporateAction_MERGER_REORGANIZATIONCorporateAction_RIGHTS_OFFERINGCorporateAction_SHAREHOLDER_MEETINGCorporateAction_SPINOFFCorporateAction_TENDER_OFFERCorporateAction_WARRANTCorporateAction_SPECIAL_ACTIONCorporateAction_SYMBOL_CONVERSIONCorporateAction_CUSIPCorporateAction_LEAP_ROLLOVERCorporateAction_SUCCESSION_EVENT"

var _CorporateAction_map = map[CorporateAction]string{
	"A": _CorporateAction_name[0:27],
	"B": _CorporateAction_name[27:58],
	"C": _CorporateAction_name[58:83],
	"D": _CorporateAction_name[83:102],
	"E": _CorporateAction_name[102:129],
	"F": _CorporateAction_name[129:158],
	"G": _CorporateAction_name[158:188],
	"H": _CorporateAction_name[188:227],
	"I": _CorporateAction_name[227:262],
	"J": _CorporateAction_name[262:306],
	"K": _CorporateAction_name[306:344],
	"L": _CorporateAction_name[344:386],
	"M": _CorporateAction_name[386:423],
	"N": _CorporateAction_name[423:454],
	"O": _CorporateAction_name[454:489],
	"P": _CorporateAction_name[489:512],
	"Q": _CorporateAction_name[512:540],
	"R": _CorporateAction_name[540:563],
	"S": _CorporateAction_name[563:593],
	"T": _CorporateAction_name[593:626],
	"U": _CorporateAction_name[626:647],
	"V": _CorporateAction_name[647:676],
	"W": _CorporateAction_name[676:708],
}

func (i CorporateAction) String() string {
	if str, ok := _CorporateAction_map[i]; ok {
		return str
	}
	return "CorporateAction(" + i.String() + ")"
}

const _CoveredOrUncovered_name = "CoveredOrUncovered_COVEREDCoveredOrUncovered_UNCOVERED"

var _CoveredOrUncovered_map = map[CoveredOrUncovered]string{
	"0": _CoveredOrUncovered_name[0:26],
	"1": _CoveredOrUncovered_name[26:54],
}

func (i CoveredOrUncovered) String() string {
	if str, ok := _CoveredOrUncovered_map[i]; ok {
		return str
	}
	return "CoveredOrUncovered(" + i.String() + ")"
}

const _CrossPrioritization_name = "CrossPrioritization_NONECrossPrioritization_BUY_SIDE_IS_PRIORITIZEDCrossPrioritization_SELL_SIDE_IS_PRIORITIZED"

var _CrossPrioritization_map = map[CrossPrioritization]string{
	"0": _CrossPrioritization_name[0:24],
	"1": _CrossPrioritization_name[24:67],
	"2": _CrossPrioritization_name[67:111],
}

func (i CrossPrioritization) String() string {
	if str, ok := _CrossPrioritization_map[i]; ok {
		return str
	}
	return "CrossPrioritization(" + i.String() + ")"
}

const _CrossType_name = "CrossType_CROSS_AONCrossType_CROSS_IOCCrossType_CROSS_ONE_SIDECrossType_CROSS_SAME_PRICE"

var _CrossType_map = map[CrossType]string{
	"1": _CrossType_name[0:19],
	"2": _CrossType_name[19:38],
	"3": _CrossType_name[38:62],
	"4": _CrossType_name[62:88],
}

func (i CrossType) String() string {
	if str, ok := _CrossType_map[i]; ok {
		return str
	}
	return "CrossType(" + i.String() + ")"
}

const _CustOrderCapacity_name = "CustOrderCapacity_MEMBER_TRADING_FOR_THEIR_OWN_ACCOUNTCustOrderCapacity_CLEARING_FIRM_TRADING_FOR_ITS_PROPRIETARY_ACCOUNTCustOrderCapacity_MEMBER_TRADING_FOR_ANOTHER_MEMBERCustOrderCapacity_ALL_OTHER"

var _CustOrderCapacity_map = map[CustOrderCapacity]string{
	"1": _CustOrderCapacity_name[0:54],
	"2": _CustOrderCapacity_name[54:121],
	"3": _CustOrderCapacity_name[121:172],
	"4": _CustOrderCapacity_name[172:199],
}

func (i CustOrderCapacity) String() string {
	if str, ok := _CustOrderCapacity_map[i]; ok {
		return str
	}
	return "CustOrderCapacity(" + i.String() + ")"
}

const _CustOrderHandlingInst_name = "CustOrderHandlingInst_ADD_ON_ORDERCustOrderHandlingInst_ALL_OR_NONECustOrderHandlingInst_CASH_NOT_HELDCustOrderHandlingInst_DIRECTED_ORDERCustOrderHandlingInst_EXCHANGE_FOR_PHYSICAL_TRANSACTIONCustOrderHandlingInst_FILL_OR_KILLCustOrderHandlingInst_IMBALANCE_ONLYCustOrderHandlingInst_IMMEDIATE_OR_CANCELCustOrderHandlingInst_LIMIT_ON_CLOSECustOrderHandlingInst_LIMIT_ON_OPENCustOrderHandlingInst_MARKET_AT_CLOSECustOrderHandlingInst_MARKET_AT_OPENCustOrderHandlingInst_MARKET_ON_CLOSECustOrderHandlingInst_MARKET_ON_OPENCustOrderHandlingInst_MINIMUM_QUANTITYCustOrderHandlingInst_NOT_HELDCustOrderHandlingInst_OVER_THE_DAYCustOrderHandlingInst_PEGGEDCustOrderHandlingInst_RESERVE_SIZE_ORDERCustOrderHandlingInst_STOP_STOCK_TRANSACTIONCustOrderHandlingInst_SCALECustOrderHandlingInst_TIME_ORDERCustOrderHandlingInst_TRAILING_STOPCustOrderHandlingInst_WORK"

var _CustOrderHandlingInst_map = map[CustOrderHandlingInst]string{
	"ADD": _CustOrderHandlingInst_name[0:34],
	"AON": _CustOrderHandlingInst_name[34:67],
	"CNH": _CustOrderHandlingInst_name[67:102],
	"DIR": _CustOrderHandlingInst_name[102:138],
	"E.W": _CustOrderHandlingInst_name[138:193],
	"FOK": _CustOrderHandlingInst_name[193:227],
	"IO":  _CustOrderHandlingInst_name[227:263],
	"IOC": _CustOrderHandlingInst_name[263:304],
	"LOC": _CustOrderHandlingInst_name[304:340],
	"LOO": _CustOrderHandlingInst_name[340:375],
	"MAC": _CustOrderHandlingInst_name[375:412],
	"MAO": _CustOrderHandlingInst_name[412:448],
	"MOC": _CustOrderHandlingInst_name[448:485],
	"MOO": _CustOrderHandlingInst_name[485:521],
	"MQT": _CustOrderHandlingInst_name[521:559],
	"NH":  _CustOrderHandlingInst_name[559:589],
	"OVD": _CustOrderHandlingInst_name[589:623],
	"PEG": _CustOrderHandlingInst_name[623:651],
	"RSV": _CustOrderHandlingInst_name[651:691],
	"S.W": _CustOrderHandlingInst_name[691:735],
	"SCL": _CustOrderHandlingInst_name[735:762],
	"TMO": _CustOrderHandlingInst_name[762:794],
	"TS":  _CustOrderHandlingInst_name[794:829],
	"WRK": _CustOrderHandlingInst_name[829:855],
}

func (i CustOrderHandlingInst) String() string {
	if str, ok := _CustOrderHandlingInst_map[i]; ok {
		return str
	}
	return "CustOrderHandlingInst(" + i.String() + ")"
}

const _CustomerOrFirm_name = "CustomerOrFirm_CUSTOMERCustomerOrFirm_FIRM"

var _CustomerOrFirm_map = map[CustomerOrFirm]string{
	"0": _CustomerOrFirm_name[0:23],
	"1": _CustomerOrFirm_name[23:42],
}

func (i CustomerOrFirm) String() string {
	if str, ok := _CustomerOrFirm_map[i]; ok {
		return str
	}
	return "CustomerOrFirm(" + i.String() + ")"
}

const _CxlRejReason_name = "CxlRejReason_TOO_LATE_TO_CANCELCxlRejReason_UNKNOWN_ORDERCxlRejReason_INVALID_PRICE_INCREMENTCxlRejReason_BROKERCxlRejReason_ORDER_ALREADY_IN_PENDING_CANCEL_OR_PENDING_REPLACE_STATUSCxlRejReason_UNABLE_TO_PROCESS_ORDER_MASS_CANCEL_REQUESTCxlRejReason_ORIGORDMODTIMECxlRejReason_DUPLICATE_CLORDIDCxlRejReason_PRICE_EXCEEDS_CURRENT_PRICECxlRejReason_PRICE_EXCEEDS_CURRENT_PRICE_BANDCxlRejReason_OTHER"

var _CxlRejReason_map = map[CxlRejReason]string{
	"0":  _CxlRejReason_name[0:31],
	"1":  _CxlRejReason_name[31:57],
	"18": _CxlRejReason_name[57:93],
	"2":  _CxlRejReason_name[93:112],
	"3":  _CxlRejReason_name[112:182],
	"4":  _CxlRejReason_name[182:238],
	"5":  _CxlRejReason_name[238:265],
	"6":  _CxlRejReason_name[265:295],
	"7":  _CxlRejReason_name[295:335],
	"8":  _CxlRejReason_name[335:380],
	"99": _CxlRejReason_name[380:398],
}

func (i CxlRejReason) String() string {
	if str, ok := _CxlRejReason_map[i]; ok {
		return str
	}
	return "CxlRejReason(" + i.String() + ")"
}

const _CxlRejResponseTo_name = "CxlRejResponseTo_ORDER_CANCEL_REQUESTCxlRejResponseTo_ORDER_CANCEL_REPLACE_REQUEST"

var _CxlRejResponseTo_map = map[CxlRejResponseTo]string{
	"1": _CxlRejResponseTo_name[0:37],
	"2": _CxlRejResponseTo_name[37:82],
}

func (i CxlRejResponseTo) String() string {
	if str, ok := _CxlRejResponseTo_map[i]; ok {
		return str
	}
	return "CxlRejResponseTo(" + i.String() + ")"
}

const _CxlType_name = "CxlType_FULL_REMAINING_QUANTITYCxlType_PARTIAL_CANCEL"

var _CxlType_map = map[CxlType]string{
	"F": _CxlType_name[0:31],
	"P": _CxlType_name[31:53],
}

func (i CxlType) String() string {
	if str, ok := _CxlType_map[i]; ok {
		return str
	}
	return "CxlType(" + i.String() + ")"
}

const _DKReason_name = "DKReason_UNKNOWN_SYMBOLDKReason_WRONG_SIDEDKReason_QUANTITY_EXCEEDS_ORDERDKReason_NO_MATCHING_ORDERDKReason_PRICE_EXCEEDS_LIMITDKReason_CALCULATION_DIFFERENCEDKReason_OTHER"

var _DKReason_map = map[DKReason]string{
	"A": _DKReason_name[0:23],
	"B": _DKReason_name[23:42],
	"C": _DKReason_name[42:73],
	"D": _DKReason_name[73:99],
	"E": _DKReason_name[99:127],
	"F": _DKReason_name[127:158],
	"Z": _DKReason_name[158:172],
}

func (i DKReason) String() string {
	if str, ok := _DKReason_map[i]; ok {
		return str
	}
	return "DKReason(" + i.String() + ")"
}

const _DayBookingInst_name = "DayBookingInst_CAN_TRIGGER_BOOKING_WITHOUT_REFERENCE_TO_THE_ORDER_INITIATORDayBookingInst_SPEAK_WITH_ORDER_INITIATOR_BEFORE_BOOKINGDayBookingInst_ACCUMULATE"

var _DayBookingInst_map = map[DayBookingInst]string{
	"0": _DayBookingInst_name[0:75],
	"1": _DayBookingInst_name[75:131],
	"2": _DayBookingInst_name[131:156],
}

func (i DayBookingInst) String() string {
	if str, ok := _DayBookingInst_map[i]; ok {
		return str
	}
	return "DayBookingInst(" + i.String() + ")"
}

const _DealingCapacity_name = "DealingCapacity_AGENTDealingCapacity_PRINCIPALDealingCapacity_RISKLESS_PRINCIPAL"

var _DealingCapacity_map = map[DealingCapacity]string{
	"A": _DealingCapacity_name[0:21],
	"P": _DealingCapacity_name[21:46],
	"R": _DealingCapacity_name[46:80],
}

func (i DealingCapacity) String() string {
	if str, ok := _DealingCapacity_map[i]; ok {
		return str
	}
	return "DealingCapacity(" + i.String() + ")"
}

const _DeleteReason_name = "DeleteReason_CANCELLATIONDeleteReason_ERROR"

var _DeleteReason_map = map[DeleteReason]string{
	"0": _DeleteReason_name[0:25],
	"1": _DeleteReason_name[25:43],
}

func (i DeleteReason) String() string {
	if str, ok := _DeleteReason_map[i]; ok {
		return str
	}
	return "DeleteReason(" + i.String() + ")"
}

const _DeliveryForm_name = "DeliveryForm_BOOK_ENTRYDeliveryForm_BEARER"

var _DeliveryForm_map = map[DeliveryForm]string{
	"1": _DeliveryForm_name[0:23],
	"2": _DeliveryForm_name[23:42],
}

func (i DeliveryForm) String() string {
	if str, ok := _DeliveryForm_map[i]; ok {
		return str
	}
	return "DeliveryForm(" + i.String() + ")"
}

const _DeliveryType_name = "DeliveryType_VERSUS_PAYMENT_DELIVERDeliveryType_FREE_DELIVERDeliveryType_TRI_PARTYDeliveryType_HOLD_IN_CUSTODY"

var _DeliveryType_map = map[DeliveryType]string{
	"0": _DeliveryType_name[0:35],
	"1": _DeliveryType_name[35:60],
	"2": _DeliveryType_name[60:82],
	"3": _DeliveryType_name[82:110],
}

func (i DeliveryType) String() string {
	if str, ok := _DeliveryType_map[i]; ok {
		return str
	}
	return "DeliveryType(" + i.String() + ")"
}

const _DerivativeSecurityListRequestType_name = "DerivativeSecurityListRequestType_SYMBOLDerivativeSecurityListRequestType_SECURITYTYPE_AND_OR_CFICODEDerivativeSecurityListRequestType_PRODUCTDerivativeSecurityListRequestType_TRADINGSESSIONIDDerivativeSecurityListRequestType_ALL_SECURITIESDerivativeSecurityListRequestType_UNDELYINGSYMBOLDerivativeSecurityListRequestType_UNDERLYING_SECURITYTYPE_AND_OR_CFICODEDerivativeSecurityListRequestType_UNDERLYING_PRODUCTDerivativeSecurityListRequestType_MARKETID_OR_MARKETID_PLUS_MARKETSEGMENTID"

var _DerivativeSecurityListRequestType_map = map[DerivativeSecurityListRequestType]string{
	"0": _DerivativeSecurityListRequestType_name[0:40],
	"1": _DerivativeSecurityListRequestType_name[40:101],
	"2": _DerivativeSecurityListRequestType_name[101:142],
	"3": _DerivativeSecurityListRequestType_name[142:192],
	"4": _DerivativeSecurityListRequestType_name[192:240],
	"5": _DerivativeSecurityListRequestType_name[240:289],
	"6": _DerivativeSecurityListRequestType_name[289:361],
	"7": _DerivativeSecurityListRequestType_name[361:413],
	"8": _DerivativeSecurityListRequestType_name[413:488],
}

func (i DerivativeSecurityListRequestType) String() string {
	if str, ok := _DerivativeSecurityListRequestType_map[i]; ok {
		return str
	}
	return "DerivativeSecurityListRequestType(" + i.String() + ")"
}

const _DeskOrderHandlingInst_name = "DeskOrderHandlingInst_ADD_ON_ORDERDeskOrderHandlingInst_ALL_OR_NONEDeskOrderHandlingInst_CASH_NOT_HELDDeskOrderHandlingInst_DIRECTED_ORDERDeskOrderHandlingInst_EXCHANGE_FOR_PHYSICAL_TRANSACTIONDeskOrderHandlingInst_FILL_OR_KILLDeskOrderHandlingInst_IMBALANCE_ONLYDeskOrderHandlingInst_IMMEDIATE_OR_CANCELDeskOrderHandlingInst_LIMIT_ON_CLOSEDeskOrderHandlingInst_LIMIT_ON_OPENDeskOrderHandlingInst_MARKET_AT_CLOSEDeskOrderHandlingInst_MARKET_AT_OPENDeskOrderHandlingInst_MARKET_ON_CLOSEDeskOrderHandlingInst_MARKET_ON_OPENDeskOrderHandlingInst_MINIMUM_QUANTITYDeskOrderHandlingInst_NOT_HELDDeskOrderHandlingInst_OVER_THE_DAYDeskOrderHandlingInst_PEGGEDDeskOrderHandlingInst_RESERVE_SIZE_ORDERDeskOrderHandlingInst_STOP_STOCK_TRANSACTIONDeskOrderHandlingInst_SCALEDeskOrderHandlingInst_TIME_ORDERDeskOrderHandlingInst_TRAILING_STOPDeskOrderHandlingInst_WORK"

var _DeskOrderHandlingInst_map = map[DeskOrderHandlingInst]string{
	"ADD": _DeskOrderHandlingInst_name[0:34],
	"AON": _DeskOrderHandlingInst_name[34:67],
	"CNH": _DeskOrderHandlingInst_name[67:102],
	"DIR": _DeskOrderHandlingInst_name[102:138],
	"E.W": _DeskOrderHandlingInst_name[138:193],
	"FOK": _DeskOrderHandlingInst_name[193:227],
	"IO":  _DeskOrderHandlingInst_name[227:263],
	"IOC": _DeskOrderHandlingInst_name[263:304],
	"LOC": _DeskOrderHandlingInst_name[304:340],
	"LOO": _DeskOrderHandlingInst_name[340:375],
	"MAC": _DeskOrderHandlingInst_name[375:412],
	"MAO": _DeskOrderHandlingInst_name[412:448],
	"MOC": _DeskOrderHandlingInst_name[448:485],
	"MOO": _DeskOrderHandlingInst_name[485:521],
	"MQT": _DeskOrderHandlingInst_name[521:559],
	"NH":  _DeskOrderHandlingInst_name[559:589],
	"OVD": _DeskOrderHandlingInst_name[589:623],
	"PEG": _DeskOrderHandlingInst_name[623:651],
	"RSV": _DeskOrderHandlingInst_name[651:691],
	"S.W": _DeskOrderHandlingInst_name[691:735],
	"SCL": _DeskOrderHandlingInst_name[735:762],
	"TMO": _DeskOrderHandlingInst_name[762:794],
	"TS":  _DeskOrderHandlingInst_name[794:829],
	"WRK": _DeskOrderHandlingInst_name[829:855],
}

func (i DeskOrderHandlingInst) String() string {
	if str, ok := _DeskOrderHandlingInst_map[i]; ok {
		return str
	}
	return "DeskOrderHandlingInst(" + i.String() + ")"
}

const _DeskType_name = "DeskType_AGENCYDeskType_ARBITRAGEDeskType_DERIVATIVESDeskType_INTERNATIONALDeskType_INSTITUTIONALDeskType_OTHERDeskType_PREFERRED_TRADINGDeskType_PROPRIETARYDeskType_PROGRAM_TRADINGDeskType_SALESDeskType_TRADING"

var _DeskType_map = map[DeskType]string{
	"A":  _DeskType_name[0:15],
	"AR": _DeskType_name[15:33],
	"D":  _DeskType_name[33:53],
	"IN": _DeskType_name[53:75],
	"IS": _DeskType_name[75:97],
	"O":  _DeskType_name[97:111],
	"PF": _DeskType_name[111:137],
	"PR": _DeskType_name[137:157],
	"PT": _DeskType_name[157:181],
	"S":  _DeskType_name[181:195],
	"T":  _DeskType_name[195:211],
}

func (i DeskType) String() string {
	if str, ok := _DeskType_map[i]; ok {
		return str
	}
	return "DeskType(" + i.String() + ")"
}

const _DeskTypeSource_name = "DeskTypeSource_NASD_OATS"

var _DeskTypeSource_map = map[DeskTypeSource]string{
	"1": _DeskTypeSource_name[0:24],
}

func (i DeskTypeSource) String() string {
	if str, ok := _DeskTypeSource_map[i]; ok {
		return str
	}
	return "DeskTypeSource(" + i.String() + ")"
}

const _DiscretionInst_name = "DiscretionInst_RELATED_TO_DISPLAYED_PRICEDiscretionInst_RELATED_TO_MARKET_PRICEDiscretionInst_RELATED_TO_PRIMARY_PRICEDiscretionInst_RELATED_TO_LOCAL_PRIMARY_PRICEDiscretionInst_RELATED_TO_MIDPOINT_PRICEDiscretionInst_RELATED_TO_LAST_TRADE_PRICEDiscretionInst_RELATED_TO_VWAPDiscretionInst_AVERAGE_PRICE_GUARANTEE"

var _DiscretionInst_map = map[DiscretionInst]string{
	"0": _DiscretionInst_name[0:41],
	"1": _DiscretionInst_name[41:79],
	"2": _DiscretionInst_name[79:118],
	"3": _DiscretionInst_name[118:163],
	"4": _DiscretionInst_name[163:203],
	"5": _DiscretionInst_name[203:245],
	"6": _DiscretionInst_name[245:275],
	"7": _DiscretionInst_name[275:313],
}

func (i DiscretionInst) String() string {
	if str, ok := _DiscretionInst_map[i]; ok {
		return str
	}
	return "DiscretionInst(" + i.String() + ")"
}

const _DiscretionLimitType_name = "DiscretionLimitType_OR_BETTERDiscretionLimitType_STRICTDiscretionLimitType_OR_WORSE"

var _DiscretionLimitType_map = map[DiscretionLimitType]string{
	"0": _DiscretionLimitType_name[0:29],
	"1": _DiscretionLimitType_name[29:55],
	"2": _DiscretionLimitType_name[55:83],
}

func (i DiscretionLimitType) String() string {
	if str, ok := _DiscretionLimitType_map[i]; ok {
		return str
	}
	return "DiscretionLimitType(" + i.String() + ")"
}

const _DiscretionMoveType_name = "DiscretionMoveType_FLOATINGDiscretionMoveType_FIXED"

var _DiscretionMoveType_map = map[DiscretionMoveType]string{
	"0": _DiscretionMoveType_name[0:27],
	"1": _DiscretionMoveType_name[27:51],
}

func (i DiscretionMoveType) String() string {
	if str, ok := _DiscretionMoveType_map[i]; ok {
		return str
	}
	return "DiscretionMoveType(" + i.String() + ")"
}

const _DiscretionOffsetType_name = "DiscretionOffsetType_PRICEDiscretionOffsetType_BASIS_POINTSDiscretionOffsetType_TICKSDiscretionOffsetType_PRICE_TIER"

var _DiscretionOffsetType_map = map[DiscretionOffsetType]string{
	"0": _DiscretionOffsetType_name[0:26],
	"1": _DiscretionOffsetType_name[26:59],
	"2": _DiscretionOffsetType_name[59:85],
	"3": _DiscretionOffsetType_name[85:116],
}

func (i DiscretionOffsetType) String() string {
	if str, ok := _DiscretionOffsetType_map[i]; ok {
		return str
	}
	return "DiscretionOffsetType(" + i.String() + ")"
}

const _DiscretionRoundDirection_name = "DiscretionRoundDirection_MORE_AGGRESSIVEDiscretionRoundDirection_MORE_PASSIVE"

var _DiscretionRoundDirection_map = map[DiscretionRoundDirection]string{
	"1": _DiscretionRoundDirection_name[0:40],
	"2": _DiscretionRoundDirection_name[40:77],
}

func (i DiscretionRoundDirection) String() string {
	if str, ok := _DiscretionRoundDirection_map[i]; ok {
		return str
	}
	return "DiscretionRoundDirection(" + i.String() + ")"
}

const _DiscretionScope_name = "DiscretionScope_LOCALDiscretionScope_NATIONALDiscretionScope_GLOBALDiscretionScope_NATIONAL_EXCLUDING_LOCAL"

var _DiscretionScope_map = map[DiscretionScope]string{
	"1": _DiscretionScope_name[0:21],
	"2": _DiscretionScope_name[21:45],
	"3": _DiscretionScope_name[45:67],
	"4": _DiscretionScope_name[67:107],
}

func (i DiscretionScope) String() string {
	if str, ok := _DiscretionScope_map[i]; ok {
		return str
	}
	return "DiscretionScope(" + i.String() + ")"
}

const _DisplayMethod_name = "DisplayMethod_INITIALDisplayMethod_NEWDisplayMethod_RANDOMDisplayMethod_UNDISCLOSED"

var _DisplayMethod_map = map[DisplayMethod]string{
	"1": _DisplayMethod_name[0:21],
	"2": _DisplayMethod_name[21:38],
	"3": _DisplayMethod_name[38:58],
	"4": _DisplayMethod_name[58:83],
}

func (i DisplayMethod) String() string {
	if str, ok := _DisplayMethod_map[i]; ok {
		return str
	}
	return "DisplayMethod(" + i.String() + ")"
}

const _DisplayWhen_name = "DisplayWhen_IMMEDIATEDisplayWhen_EXHAUST"

var _DisplayWhen_map = map[DisplayWhen]string{
	"1": _DisplayWhen_name[0:21],
	"2": _DisplayWhen_name[21:40],
}

func (i DisplayWhen) String() string {
	if str, ok := _DisplayWhen_map[i]; ok {
		return str
	}
	return "DisplayWhen(" + i.String() + ")"
}

const _DistribPaymentMethod_name = "DistribPaymentMethod_CRESTDistribPaymentMethod_BPAYDistribPaymentMethod_HIGH_VALUE_CLEARING_SYSTEM_HVACSDistribPaymentMethod_REINVEST_IN_FUNDDistribPaymentMethod_NSCCDistribPaymentMethod_EUROCLEARDistribPaymentMethod_CLEARSTREAMDistribPaymentMethod_CHEQUEDistribPaymentMethod_TELEGRAPHIC_TRANSFERDistribPaymentMethod_FED_WIREDistribPaymentMethod_DIRECT_CREDITDistribPaymentMethod_ACH_CREDIT"

var _DistribPaymentMethod_map = map[DistribPaymentMethod]string{
	"1":  _DistribPaymentMethod_name[0:26],
	"10": _DistribPaymentMethod_name[26:51],
	"11": _DistribPaymentMethod_name[51:104],
	"12": _DistribPaymentMethod_name[104:141],
	"2":  _DistribPaymentMethod_name[141:166],
	"3":  _DistribPaymentMethod_name[166:196],
	"4":  _DistribPaymentMethod_name[196:228],
	"5":  _DistribPaymentMethod_name[228:255],
	"6":  _DistribPaymentMethod_name[255:296],
	"7":  _DistribPaymentMethod_name[296:325],
	"8":  _DistribPaymentMethod_name[325:359],
	"9":  _DistribPaymentMethod_name[359:390],
}

func (i DistribPaymentMethod) String() string {
	if str, ok := _DistribPaymentMethod_map[i]; ok {
		return str
	}
	return "DistribPaymentMethod(" + i.String() + ")"
}

const _DlvyInstType_name = "DlvyInstType_CASHDlvyInstType_SECURITIES"

var _DlvyInstType_map = map[DlvyInstType]string{
	"C": _DlvyInstType_name[0:17],
	"S": _DlvyInstType_name[17:40],
}

func (i DlvyInstType) String() string {
	if str, ok := _DlvyInstType_map[i]; ok {
		return str
	}
	return "DlvyInstType(" + i.String() + ")"
}

const _DueToRelated_name = "DueToRelated_NODueToRelated_YES"

var _DueToRelated_map = map[DueToRelated]string{
	"N": _DueToRelated_name[0:15],
	"Y": _DueToRelated_name[15:31],
}

func (i DueToRelated) String() string {
	if str, ok := _DueToRelated_map[i]; ok {
		return str
	}
	return "DueToRelated(" + i.String() + ")"
}

const _EmailType_name = "EmailType_NEWEmailType_REPLYEmailType_ADMIN_REPLY"

var _EmailType_map = map[EmailType]string{
	"0": _EmailType_name[0:13],
	"1": _EmailType_name[13:28],
	"2": _EmailType_name[28:49],
}

func (i EmailType) String() string {
	if str, ok := _EmailType_map[i]; ok {
		return str
	}
	return "EmailType(" + i.String() + ")"
}

const _EncryptMethod_name = "EncryptMethod_NONE_OTHEREncryptMethod_PKCSEncryptMethod_DESEncryptMethod_PKCS_DESEncryptMethod_PGP_DESEncryptMethod_PGP_DES_MD5EncryptMethod_PEM_DES_MD5"

var _EncryptMethod_map = map[EncryptMethod]string{
	"0": _EncryptMethod_name[0:24],
	"1": _EncryptMethod_name[24:42],
	"2": _EncryptMethod_name[42:59],
	"3": _EncryptMethod_name[59:81],
	"4": _EncryptMethod_name[81:102],
	"5": _EncryptMethod_name[102:127],
	"6": _EncryptMethod_name[127:152],
}

func (i EncryptMethod) String() string {
	if str, ok := _EncryptMethod_map[i]; ok {
		return str
	}
	return "EncryptMethod(" + i.String() + ")"
}

const _EventType_name = "EventType_PUTEventType_SWAP_ROLL_DATEEventType_SWAP_NEXT_START_DATEEventType_SWAP_NEXT_ROLL_DATEEventType_FIRST_DELIVERY_DATEEventType_LAST_DELIVERY_DATEEventType_INITIAL_INVENTORY_DUE_DATEEventType_FINAL_INVENTORY_DUE_DATEEventType_FIRST_INTENT_DATEEventType_LAST_INTENT_DATEEventType_POSITION_REMOVAL_DATEEventType_CALLEventType_TENDEREventType_SINKING_FUND_CALLEventType_ACTIVATIONEventType_INACTIVIATIONEventType_LAST_ELIGIBLE_TRADE_DATEEventType_SWAP_START_DATEEventType_SWAP_END_DATEEventType_OTHER"

var _EventType_map = map[EventType]string{
	"1":  _EventType_name[0:13],
	"10": _EventType_name[13:37],
	"11": _EventType_name[37:67],
	"12": _EventType_name[67:96],
	"13": _EventType_name[96:125],
	"14": _EventType_name[125:153],
	"15": _EventType_name[153:189],
	"16": _EventType_name[189:223],
	"17": _EventType_name[223:250],
	"18": _EventType_name[250:276],
	"19": _EventType_name[276:307],
	"2":  _EventType_name[307:321],
	"3":  _EventType_name[321:337],
	"4":  _EventType_name[337:364],
	"5":  _EventType_name[364:384],
	"6":  _EventType_name[384:407],
	"7":  _EventType_name[407:441],
	"8":  _EventType_name[441:466],
	"9":  _EventType_name[466:489],
	"99": _EventType_name[489:504],
}

func (i EventType) String() string {
	if str, ok := _EventType_map[i]; ok {
		return str
	}
	return "EventType(" + i.String() + ")"
}

const _ExDestination_name = "ExDestination_NONEExDestination_POSIT"

var _ExDestination_map = map[ExDestination]string{
	"0": _ExDestination_name[0:18],
	"4": _ExDestination_name[18:37],
}

func (i ExDestination) String() string {
	if str, ok := _ExDestination_map[i]; ok {
		return str
	}
	return "ExDestination(" + i.String() + ")"
}

const _ExDestinationIDSource_name = "ExDestinationIDSource_BICExDestinationIDSource_GENERALLY_ACCEPTED_MARKET_PARTICIPANT_IDENTIFIERExDestinationIDSource_PROPRIETARYExDestinationIDSource_ISO_COUNTRY_CODEExDestinationIDSource_MIC"

var _ExDestinationIDSource_map = map[ExDestinationIDSource]string{
	"B": _ExDestinationIDSource_name[0:25],
	"C": _ExDestinationIDSource_name[25:95],
	"D": _ExDestinationIDSource_name[95:128],
	"E": _ExDestinationIDSource_name[128:166],
	"G": _ExDestinationIDSource_name[166:191],
}

func (i ExDestinationIDSource) String() string {
	if str, ok := _ExDestinationIDSource_map[i]; ok {
		return str
	}
	return "ExDestinationIDSource(" + i.String() + ")"
}

const _ExchangeForPhysical_name = "ExchangeForPhysical_NOExchangeForPhysical_YES"

var _ExchangeForPhysical_map = map[ExchangeForPhysical]string{
	"N": _ExchangeForPhysical_name[0:22],
	"Y": _ExchangeForPhysical_name[22:45],
}

func (i ExchangeForPhysical) String() string {
	if str, ok := _ExchangeForPhysical_map[i]; ok {
		return str
	}
	return "ExchangeForPhysical(" + i.String() + ")"
}

const _ExecAckStatus_name = "ExecAckStatus_RECEIVED_NOT_YET_PROCESSEDExecAckStatus_ACCEPTEDExecAckStatus_DONT_KNOW"

var _ExecAckStatus_map = map[ExecAckStatus]string{
	"0": _ExecAckStatus_name[0:40],
	"1": _ExecAckStatus_name[40:62],
	"2": _ExecAckStatus_name[62:85],
}

func (i ExecAckStatus) String() string {
	if str, ok := _ExecAckStatus_map[i]; ok {
		return str
	}
	return "ExecAckStatus(" + i.String() + ")"
}

const _ExecInst_name = "ExecInst_STAY_ON_OFFER_SIDEExecInst_NOT_HELDExecInst_WORKExecInst_GO_ALONGExecInst_OVER_THE_DAYExecInst_HELDExecInst_PARTICIPANT_DONT_INITIATEExecInst_STRICT_SCALEExecInst_TRY_TO_SCALEExecInst_STAY_ON_BID_SIDEExecInst_NO_CROSSExecInst_OK_TO_CROSSExecInst_CALL_FIRSTExecInst_PERCENT_OF_VOLUMEExecInst_DO_NOT_INCREASEExecInst_DO_NOT_REDUCEExecInst_ALL_OR_NONEExecInst_REINSTATE_ON_SYSTEM_FAILUREExecInst_INSTITUTIONS_ONLYExecInst_REINSTATE_ON_TRADING_HALTExecInst_CANCEL_ON_TRADING_HALTExecInst_LAST_PEGExecInst_MID_PRICE_PEGExecInst_NON_NEGOTIABLEExecInst_OPENING_PEGExecInst_MARKET_PEGExecInst_CANCEL_ON_SYSTEM_FAILUREExecInst_PRIMARY_PEGExecInst_SUSPENDExecInst_FIXED_PEG_TO_LOCAL_BEST_BID_OR_OFFER_AT_TIME_OF_ORDERExecInst_CUSTOMER_DISPLAY_INSTRUCTIONExecInst_NETTINGExecInst_PEG_TO_VWAPExecInst_TRADE_ALONGExecInst_TRY_TO_STOPExecInst_CANCEL_IF_NOT_BESTExecInst_TRAILING_STOP_PEGExecInst_STRICT_LIMITExecInst_IGNORE_PRICE_VALIDITY_CHECKSExecInst_PEG_TO_LIMIT_PRICEExecInst_WORK_TO_TARGET_STRATEGYExecInst_INTERMARKET_SWEEPExecInst_EXTERNAL_ROUTING_ALLOWEDExecInst_EXTERNAL_ROUTING_NOT_ALLOWEDExecInst_IMBALANCE_ONLYExecInst_SINGLE_EXECUTION_REQUESTED_FOR_BLOCK_TRADEExecInst_BEST_EXECUTIONExecInst_SUSPEND_ON_SYSTEM_FAILUREExecInst_SUSPEND_ON_TRADING_HALTExecInst_REINSTATE_ON_CONNECTION_LOSSExecInst_CANCEL_ON_CONNECTION_LOSSExecInst_SUSPEND_ON_CONNECTION_LOSSExecInst_RELEASE_FROM_SUSPENSIONExecInst_EXECUTE_AS_DELTA_NEUTRAL_USING_VOLATILITY_PROVIDEDExecInst_EXECUTE_AS_DURATION_NEUTRALExecInst_EXECUTE_AS_FX_NEUTRAL"

var _ExecInst_map = map[ExecInst]string{
	"0": _ExecInst_name[0:27],
	"1": _ExecInst_name[27:44],
	"2": _ExecInst_name[44:57],
	"3": _ExecInst_name[57:74],
	"4": _ExecInst_name[74:95],
	"5": _ExecInst_name[95:108],
	"6": _ExecInst_name[108:142],
	"7": _ExecInst_name[142:163],
	"8": _ExecInst_name[163:184],
	"9": _ExecInst_name[184:209],
	"A": _ExecInst_name[209:226],
	"B": _ExecInst_name[226:246],
	"C": _ExecInst_name[246:265],
	"D": _ExecInst_name[265:291],
	"E": _ExecInst_name[291:315],
	"F": _ExecInst_name[315:337],
	"G": _ExecInst_name[337:357],
	"H": _ExecInst_name[357:393],
	"I": _ExecInst_name[393:419],
	"J": _ExecInst_name[419:453],
	"K": _ExecInst_name[453:484],
	"L": _ExecInst_name[484:501],
	"M": _ExecInst_name[501:523],
	"N": _ExecInst_name[523:546],
	"O": _ExecInst_name[546:566],
	"P": _ExecInst_name[566:585],
	"Q": _ExecInst_name[585:618],
	"R": _ExecInst_name[618:638],
	"S": _ExecInst_name[638:654],
	"T": _ExecInst_name[654:716],
	"U": _ExecInst_name[716:753],
	"V": _ExecInst_name[753:769],
	"W": _ExecInst_name[769:789],
	"X": _ExecInst_name[789:809],
	"Y": _ExecInst_name[809:829],
	"Z": _ExecInst_name[829:856],
	"a": _ExecInst_name[856:882],
	"b": _ExecInst_name[882:903],
	"c": _ExecInst_name[903:940],
	"d": _ExecInst_name[940:967],
	"e": _ExecInst_name[967:999],
	"f": _ExecInst_name[999:1025],
	"g": _ExecInst_name[1025:1058],
	"h": _ExecInst_name[1058:1095],
	"i": _ExecInst_name[1095:1118],
	"j": _ExecInst_name[1118:1169],
	"k": _ExecInst_name[1169:1192],
	"l": _ExecInst_name[1192:1226],
	"m": _ExecInst_name[1226:1258],
	"n": _ExecInst_name[1258:1295],
	"o": _ExecInst_name[1295:1329],
	"p": _ExecInst_name[1329:1364],
	"q": _ExecInst_name[1364:1396],
	"r": _ExecInst_name[1396:1455],
	"s": _ExecInst_name[1455:1491],
	"t": _ExecInst_name[1491:1521],
}

func (i ExecInst) String() string {
	if str, ok := _ExecInst_map[i]; ok {
		return str
	}
	return "ExecInst(" + i.String() + ")"
}

const _ExecPriceType_name = "ExecPriceType_BID_PRICEExecPriceType_CREATION_PRICEExecPriceType_CREATION_PRICE_PLUS_ADJUSTMENT_PERCENTExecPriceType_CREATION_PRICE_PLUS_ADJUSTMENT_AMOUNTExecPriceType_OFFER_PRICEExecPriceType_OFFER_PRICE_MINUS_ADJUSTMENT_PERCENTExecPriceType_OFFER_PRICE_MINUS_ADJUSTMENT_AMOUNTExecPriceType_SINGLE_PRICE"

var _ExecPriceType_map = map[ExecPriceType]string{
	"B": _ExecPriceType_name[0:23],
	"C": _ExecPriceType_name[23:51],
	"D": _ExecPriceType_name[51:103],
	"E": _ExecPriceType_name[103:154],
	"O": _ExecPriceType_name[154:179],
	"P": _ExecPriceType_name[179:229],
	"Q": _ExecPriceType_name[229:278],
	"S": _ExecPriceType_name[278:304],
}

func (i ExecPriceType) String() string {
	if str, ok := _ExecPriceType_map[i]; ok {
		return str
	}
	return "ExecPriceType(" + i.String() + ")"
}

const _ExecRestatementReason_name = "ExecRestatementReason_GT_CORPORATE_ACTIONExecRestatementReason_GT_RENEWALExecRestatementReason_WAREHOUSE_RECAPExecRestatementReason_PEG_REFRESHExecRestatementReason_VERBAL_CHANGEExecRestatementReason_REPRICING_OF_ORDERExecRestatementReason_BROKER_OPTIONExecRestatementReason_PARTIAL_DECLINE_OF_ORDERQTYExecRestatementReason_CANCEL_ON_TRADING_HALTExecRestatementReason_CANCEL_ON_SYSTEM_FAILUREExecRestatementReason_MARKETExecRestatementReason_CANCELED_NOT_BESTExecRestatementReason_OTHER"

var _ExecRestatementReason_map = map[ExecRestatementReason]string{
	"0":  _ExecRestatementReason_name[0:41],
	"1":  _ExecRestatementReason_name[41:73],
	"10": _ExecRestatementReason_name[73:110],
	"11": _ExecRestatementReason_name[110:143],
	"2":  _ExecRestatementReason_name[143:178],
	"3":  _ExecRestatementReason_name[178:218],
	"4":  _ExecRestatementReason_name[218:253],
	"5":  _ExecRestatementReason_name[253:302],
	"6":  _ExecRestatementReason_name[302:346],
	"7":  _ExecRestatementReason_name[346:392],
	"8":  _ExecRestatementReason_name[392:420],
	"9":  _ExecRestatementReason_name[420:459],
	"99": _ExecRestatementReason_name[459:486],
}

func (i ExecRestatementReason) String() string {
	if str, ok := _ExecRestatementReason_map[i]; ok {
		return str
	}
	return "ExecRestatementReason(" + i.String() + ")"
}

const _ExecTransType_name = "ExecTransType_NEWExecTransType_CANCELExecTransType_CORRECTExecTransType_STATUS"

var _ExecTransType_map = map[ExecTransType]string{
	"0": _ExecTransType_name[0:17],
	"1": _ExecTransType_name[17:37],
	"2": _ExecTransType_name[37:58],
	"3": _ExecTransType_name[58:78],
}

func (i ExecTransType) String() string {
	if str, ok := _ExecTransType_map[i]; ok {
		return str
	}
	return "ExecTransType(" + i.String() + ")"
}

const _ExecType_name = "ExecType_NEWExecType_PARTIAL_FILLExecType_FILLExecType_DONE_FOR_DAYExecType_CANCELEDExecType_REPLACEDExecType_PENDING_CANCELExecType_STOPPEDExecType_REJECTEDExecType_SUSPENDEDExecType_PENDING_NEWExecType_CALCULATEDExecType_EXPIREDExecType_RESTATEDExecType_PENDING_REPLACEExecType_TRADEExecType_TRADE_CORRECTExecType_TRADE_CANCELExecType_ORDER_STATUSExecType_TRADE_IN_A_CLEARING_HOLDExecType_TRADE_HAS_BEEN_RELEASED_TO_CLEARINGExecType_TRIGGERED_OR_ACTIVATED_BY_SYSTEM"

var _ExecType_map = map[ExecType]string{
	"0": _ExecType_name[0:12],
	"1": _ExecType_name[12:33],
	"2": _ExecType_name[33:46],
	"3": _ExecType_name[46:67],
	"4": _ExecType_name[67:84],
	"5": _ExecType_name[84:101],
	"6": _ExecType_name[101:124],
	"7": _ExecType_name[124:140],
	"8": _ExecType_name[140:157],
	"9": _ExecType_name[157:175],
	"A": _ExecType_name[175:195],
	"B": _ExecType_name[195:214],
	"C": _ExecType_name[214:230],
	"D": _ExecType_name[230:247],
	"E": _ExecType_name[247:271],
	"F": _ExecType_name[271:285],
	"G": _ExecType_name[285:307],
	"H": _ExecType_name[307:328],
	"I": _ExecType_name[328:349],
	"J": _ExecType_name[349:382],
	"K": _ExecType_name[382:426],
	"L": _ExecType_name[426:467],
}

func (i ExecType) String() string {
	if str, ok := _ExecType_map[i]; ok {
		return str
	}
	return "ExecType(" + i.String() + ")"
}

const _ExerciseMethod_name = "ExerciseMethod_AUTOMATICExerciseMethod_MANUAL"

var _ExerciseMethod_map = map[ExerciseMethod]string{
	"A": _ExerciseMethod_name[0:24],
	"M": _ExerciseMethod_name[24:45],
}

func (i ExerciseMethod) String() string {
	if str, ok := _ExerciseMethod_map[i]; ok {
		return str
	}
	return "ExerciseMethod(" + i.String() + ")"
}

const _ExerciseStyle_name = "ExerciseStyle_EUROPEANExerciseStyle_AMERICANExerciseStyle_BERMUDA"

var _ExerciseStyle_map = map[ExerciseStyle]string{
	"0": _ExerciseStyle_name[0:22],
	"1": _ExerciseStyle_name[22:44],
	"2": _ExerciseStyle_name[44:65],
}

func (i ExerciseStyle) String() string {
	if str, ok := _ExerciseStyle_map[i]; ok {
		return str
	}
	return "ExerciseStyle(" + i.String() + ")"
}

const _ExpType_name = "ExpType_AUTO_EXERCISEExpType_NON_AUTO_EXERCISEExpType_FINAL_WILL_BE_EXERCISEDExpType_CONTRARY_INTENTIONExpType_DIFFERENCE"

var _ExpType_map = map[ExpType]string{
	"1": _ExpType_name[0:21],
	"2": _ExpType_name[21:46],
	"3": _ExpType_name[46:77],
	"4": _ExpType_name[77:103],
	"5": _ExpType_name[103:121],
}

func (i ExpType) String() string {
	if str, ok := _ExpType_map[i]; ok {
		return str
	}
	return "ExpType(" + i.String() + ")"
}

const _ExpirationCycle_name = "ExpirationCycle_EXPIRE_ON_TRADING_SESSION_CLOSEExpirationCycle_EXPIRE_ON_TRADING_SESSION_OPENExpirationCycle_TRADING_ELIGIBILITY_EXPIRATION_SPECIFIED_IN_THE_DATE_AND_TIME_FIELDS_EVENTDATE"

var _ExpirationCycle_map = map[ExpirationCycle]string{
	"0": _ExpirationCycle_name[0:47],
	"1": _ExpirationCycle_name[47:93],
	"2": _ExpirationCycle_name[93:187],
}

func (i ExpirationCycle) String() string {
	if str, ok := _ExpirationCycle_map[i]; ok {
		return str
	}
	return "ExpirationCycle(" + i.String() + ")"
}

const _ExpirationQtyType_name = "ExpirationQtyType_AUTO_EXERCISEExpirationQtyType_NON_AUTO_EXERCISEExpirationQtyType_FINAL_WILL_BE_EXERCISEDExpirationQtyType_CONTRARY_INTENTIONExpirationQtyType_DIFFERENCE"

var _ExpirationQtyType_map = map[ExpirationQtyType]string{
	"1": _ExpirationQtyType_name[0:31],
	"2": _ExpirationQtyType_name[31:66],
	"3": _ExpirationQtyType_name[66:107],
	"4": _ExpirationQtyType_name[107:143],
	"5": _ExpirationQtyType_name[143:171],
}

func (i ExpirationQtyType) String() string {
	if str, ok := _ExpirationQtyType_map[i]; ok {
		return str
	}
	return "ExpirationQtyType(" + i.String() + ")"
}

const _FinancialStatus_name = "FinancialStatus_BANKRUPTFinancialStatus_PENDING_DELISTINGFinancialStatus_RESTRICTED"

var _FinancialStatus_map = map[FinancialStatus]string{
	"1": _FinancialStatus_name[0:24],
	"2": _FinancialStatus_name[24:57],
	"3": _FinancialStatus_name[57:83],
}

func (i FinancialStatus) String() string {
	if str, ok := _FinancialStatus_map[i]; ok {
		return str
	}
	return "FinancialStatus(" + i.String() + ")"
}

const _FlowScheduleType_name = "FlowScheduleType_NERC_EASTERN_OFF_PEAKFlowScheduleType_NERC_WESTERN_OFF_PEAKFlowScheduleType_NERC_CALENDAR_ALL_DAYS_IN_MONTHFlowScheduleType_NERC_EASTERN_PEAKFlowScheduleType_NERC_WESTERN_PEAK"

var _FlowScheduleType_map = map[FlowScheduleType]string{
	"0": _FlowScheduleType_name[0:38],
	"1": _FlowScheduleType_name[38:76],
	"2": _FlowScheduleType_name[76:124],
	"3": _FlowScheduleType_name[124:158],
	"4": _FlowScheduleType_name[158:192],
}

func (i FlowScheduleType) String() string {
	if str, ok := _FlowScheduleType_map[i]; ok {
		return str
	}
	return "FlowScheduleType(" + i.String() + ")"
}

const _ForexReq_name = "ForexReq_NOForexReq_YES"

var _ForexReq_map = map[ForexReq]string{
	"N": _ForexReq_name[0:11],
	"Y": _ForexReq_name[11:23],
}

func (i ForexReq) String() string {
	if str, ok := _ForexReq_map[i]; ok {
		return str
	}
	return "ForexReq(" + i.String() + ")"
}

const _FundRenewWaiv_name = "FundRenewWaiv_NOFundRenewWaiv_YES"

var _FundRenewWaiv_map = map[FundRenewWaiv]string{
	"N": _FundRenewWaiv_name[0:16],
	"Y": _FundRenewWaiv_name[16:33],
}

func (i FundRenewWaiv) String() string {
	if str, ok := _FundRenewWaiv_map[i]; ok {
		return str
	}
	return "FundRenewWaiv(" + i.String() + ")"
}

const _FuturesValuationMethod_name = "FuturesValuationMethod_PREMIUM_STYLEFuturesValuationMethod_FUTURES_STYLE_MARK_TO_MARKETFuturesValuationMethod_FUTURES_STYLE_WITH_AN_ATTACHED_CASH_ADJUSTMENT"

var _FuturesValuationMethod_map = map[FuturesValuationMethod]string{
	"EQTY":  _FuturesValuationMethod_name[0:36],
	"FUT":   _FuturesValuationMethod_name[36:87],
	"FUTDA": _FuturesValuationMethod_name[87:156],
}

func (i FuturesValuationMethod) String() string {
	if str, ok := _FuturesValuationMethod_map[i]; ok {
		return str
	}
	return "FuturesValuationMethod(" + i.String() + ")"
}

const _GTBookingInst_name = "GTBookingInst_BOOK_OUT_ALL_TRADES_ON_DAY_OF_EXECUTIONGTBookingInst_ACCUMULATE_EXECTUIONS_UNTIL_FORDER_IS_FILLED_OR_EXPIRESGTBookingInst_ACCUMULATE_UNTIL_VERBALLLY_NOTIFIED_OTHERWISE"

var _GTBookingInst_map = map[GTBookingInst]string{
	"0": _GTBookingInst_name[0:53],
	"1": _GTBookingInst_name[53:122],
	"2": _GTBookingInst_name[122:181],
}

func (i GTBookingInst) String() string {
	if str, ok := _GTBookingInst_map[i]; ok {
		return str
	}
	return "GTBookingInst(" + i.String() + ")"
}

const _GapFillFlag_name = "GapFillFlag_NOGapFillFlag_YES"

var _GapFillFlag_map = map[GapFillFlag]string{
	"N": _GapFillFlag_name[0:14],
	"Y": _GapFillFlag_name[14:29],
}

func (i GapFillFlag) String() string {
	if str, ok := _GapFillFlag_map[i]; ok {
		return str
	}
	return "GapFillFlag(" + i.String() + ")"
}

const _HaltReasonChar_name = "HaltReasonChar_NEWS_DISSEMINATIONHaltReasonChar_ORDER_INFLUXHaltReasonChar_ORDER_IMBALANCEHaltReasonChar_ADDITIONAL_INFORMATIONHaltReasonChar_NEW_PENDINGHaltReasonChar_EQUIPMENT_CHANGEOVER"

var _HaltReasonChar_map = map[HaltReasonChar]string{
	"D": _HaltReasonChar_name[0:33],
	"E": _HaltReasonChar_name[33:60],
	"I": _HaltReasonChar_name[60:90],
	"M": _HaltReasonChar_name[90:127],
	"P": _HaltReasonChar_name[127:153],
	"X": _HaltReasonChar_name[153:188],
}

func (i HaltReasonChar) String() string {
	if str, ok := _HaltReasonChar_map[i]; ok {
		return str
	}
	return "HaltReasonChar(" + i.String() + ")"
}

const _HaltReasonInt_name = "HaltReasonInt_NEWS_DISSEMINATIONHaltReasonInt_ORDER_INFLUXHaltReasonInt_ORDER_IMBALANCEHaltReasonInt_ADDITIONAL_INFORMATIONHaltReasonInt_NEWS_PENDINGHaltReasonInt_EQUIPMENT_CHANGEOVER"

var _HaltReasonInt_map = map[HaltReasonInt]string{
	"0": _HaltReasonInt_name[0:32],
	"1": _HaltReasonInt_name[32:58],
	"2": _HaltReasonInt_name[58:87],
	"3": _HaltReasonInt_name[87:123],
	"4": _HaltReasonInt_name[123:149],
	"5": _HaltReasonInt_name[149:183],
}

func (i HaltReasonInt) String() string {
	if str, ok := _HaltReasonInt_map[i]; ok {
		return str
	}
	return "HaltReasonInt(" + i.String() + ")"
}

const _HandlInst_name = "HandlInst_AUTOMATED_EXECUTION_ORDER_PRIVATE_NO_BROKER_INTERVENTIONHandlInst_AUTOMATED_EXECUTION_ORDER_PUBLIC_BROKER_INTERVENTION_OKHandlInst_MANUAL_ORDER_BEST_EXECUTION"

var _HandlInst_map = map[HandlInst]string{
	"1": _HandlInst_name[0:66],
	"2": _HandlInst_name[66:131],
	"3": _HandlInst_name[131:168],
}

func (i HandlInst) String() string {
	if str, ok := _HandlInst_map[i]; ok {
		return str
	}
	return "HandlInst(" + i.String() + ")"
}

const _IDSource_name = "IDSource_CUSIPIDSource_SEDOLIDSource_QUIKIDSource_ISIN_NUMBERIDSource_RIC_CODEIDSource_ISO_CURRENCY_CODEIDSource_ISO_COUNTRY_CODEIDSource_EXCHANGE_SYMBOLIDSource_CONSOLIDATED_TAPE_ASSOCIATION"

var _IDSource_map = map[IDSource]string{
	"1": _IDSource_name[0:14],
	"2": _IDSource_name[14:28],
	"3": _IDSource_name[28:41],
	"4": _IDSource_name[41:61],
	"5": _IDSource_name[61:78],
	"6": _IDSource_name[78:104],
	"7": _IDSource_name[104:129],
	"8": _IDSource_name[129:153],
	"9": _IDSource_name[153:191],
}

func (i IDSource) String() string {
	if str, ok := _IDSource_map[i]; ok {
		return str
	}
	return "IDSource(" + i.String() + ")"
}

const _IOINaturalFlag_name = "IOINaturalFlag_NOIOINaturalFlag_YES"

var _IOINaturalFlag_map = map[IOINaturalFlag]string{
	"N": _IOINaturalFlag_name[0:17],
	"Y": _IOINaturalFlag_name[17:35],
}

func (i IOINaturalFlag) String() string {
	if str, ok := _IOINaturalFlag_map[i]; ok {
		return str
	}
	return "IOINaturalFlag(" + i.String() + ")"
}

const _IOIOthSvc_name = "IOIOthSvc_AUTEXIOIOthSvc_BRIDGE"

var _IOIOthSvc_map = map[IOIOthSvc]string{
	"A": _IOIOthSvc_name[0:15],
	"B": _IOIOthSvc_name[15:31],
}

func (i IOIOthSvc) String() string {
	if str, ok := _IOIOthSvc_map[i]; ok {
		return str
	}
	return "IOIOthSvc(" + i.String() + ")"
}

const _IOIQltyInd_name = "IOIQltyInd_HIGHIOIQltyInd_LOWIOIQltyInd_MEDIUM"

var _IOIQltyInd_map = map[IOIQltyInd]string{
	"H": _IOIQltyInd_name[0:15],
	"L": _IOIQltyInd_name[15:29],
	"M": _IOIQltyInd_name[29:46],
}

func (i IOIQltyInd) String() string {
	if str, ok := _IOIQltyInd_map[i]; ok {
		return str
	}
	return "IOIQltyInd(" + i.String() + ")"
}

const _IOIQty_name = "IOIQty_1000000000IOIQty_LARGEIOIQty_MEDIUMIOIQty_SMALLIOIQty_UNDISCLOSED_QUANTITY"

var _IOIQty_map = map[IOIQty]string{
	"0": _IOIQty_name[0:17],
	"L": _IOIQty_name[17:29],
	"M": _IOIQty_name[29:42],
	"S": _IOIQty_name[42:54],
	"U": _IOIQty_name[54:81],
}

func (i IOIQty) String() string {
	if str, ok := _IOIQty_map[i]; ok {
		return str
	}
	return "IOIQty(" + i.String() + ")"
}

const _IOIQualifier_name = "IOIQualifier_ALL_OR_NONEIOIQualifier_MARKET_ON_CLOSEIOIQualifier_AT_THE_CLOSEIOIQualifier_VWAPIOIQualifier_IN_TOUCH_WITHIOIQualifier_LIMITIOIQualifier_MORE_BEHINDIOIQualifier_AT_THE_OPENIOIQualifier_TAKING_A_POSITIONIOIQualifier_AT_THE_MARKETIOIQualifier_READY_TO_TRADEIOIQualifier_PORTFOLIO_SHOWNIOIQualifier_THROUGH_THE_DAYIOIQualifier_VERSUSIOIQualifier_INDICATIONIOIQualifier_CROSSING_OPPORTUNITYIOIQualifier_AT_THE_MIDPOINTIOIQualifier_PRE_OPEN"

var _IOIQualifier_map = map[IOIQualifier]string{
	"A": _IOIQualifier_name[0:24],
	"B": _IOIQualifier_name[24:52],
	"C": _IOIQualifier_name[52:77],
	"D": _IOIQualifier_name[77:94],
	"I": _IOIQualifier_name[94:120],
	"L": _IOIQualifier_name[120:138],
	"M": _IOIQualifier_name[138:162],
	"O": _IOIQualifier_name[162:186],
	"P": _IOIQualifier_name[186:216],
	"Q": _IOIQualifier_name[216:242],
	"R": _IOIQualifier_name[242:269],
	"S": _IOIQualifier_name[269:297],
	"T": _IOIQualifier_name[297:325],
	"V": _IOIQualifier_name[325:344],
	"W": _IOIQualifier_name[344:367],
	"X": _IOIQualifier_name[367:400],
	"Y": _IOIQualifier_name[400:428],
	"Z": _IOIQualifier_name[428:449],
}

func (i IOIQualifier) String() string {
	if str, ok := _IOIQualifier_map[i]; ok {
		return str
	}
	return "IOIQualifier(" + i.String() + ")"
}

const _IOIShares_name = "IOIShares_LARGEIOIShares_MEDIUMIOIShares_SMALL"

var _IOIShares_map = map[IOIShares]string{
	"L": _IOIShares_name[0:15],
	"M": _IOIShares_name[15:31],
	"S": _IOIShares_name[31:46],
}

func (i IOIShares) String() string {
	if str, ok := _IOIShares_map[i]; ok {
		return str
	}
	return "IOIShares(" + i.String() + ")"
}

const _IOITransType_name = "IOITransType_CANCELIOITransType_NEWIOITransType_REPLACE"

var _IOITransType_map = map[IOITransType]string{
	"C": _IOITransType_name[0:19],
	"N": _IOITransType_name[19:35],
	"R": _IOITransType_name[35:55],
}

func (i IOITransType) String() string {
	if str, ok := _IOITransType_map[i]; ok {
		return str
	}
	return "IOITransType(" + i.String() + ")"
}

const _ImpliedMarketIndicator_name = "ImpliedMarketIndicator_NOT_IMPLIEDImpliedMarketIndicator_IMPLIED_INImpliedMarketIndicator_IMPLIED_OUTImpliedMarketIndicator_BOTH_IMPLIED_IN_AND_IMPLIED_OUT"

var _ImpliedMarketIndicator_map = map[ImpliedMarketIndicator]string{
	"0": _ImpliedMarketIndicator_name[0:34],
	"1": _ImpliedMarketIndicator_name[34:67],
	"2": _ImpliedMarketIndicator_name[67:101],
	"3": _ImpliedMarketIndicator_name[101:155],
}

func (i ImpliedMarketIndicator) String() string {
	if str, ok := _ImpliedMarketIndicator_map[i]; ok {
		return str
	}
	return "ImpliedMarketIndicator(" + i.String() + ")"
}

const _InViewOfCommon_name = "InViewOfCommon_NOInViewOfCommon_YES"

var _InViewOfCommon_map = map[InViewOfCommon]string{
	"N": _InViewOfCommon_name[0:17],
	"Y": _InViewOfCommon_name[17:35],
}

func (i InViewOfCommon) String() string {
	if str, ok := _InViewOfCommon_map[i]; ok {
		return str
	}
	return "InViewOfCommon(" + i.String() + ")"
}

const _IncTaxInd_name = "IncTaxInd_NETIncTaxInd_GROSS"

var _IncTaxInd_map = map[IncTaxInd]string{
	"1": _IncTaxInd_name[0:13],
	"2": _IncTaxInd_name[13:28],
}

func (i IncTaxInd) String() string {
	if str, ok := _IncTaxInd_map[i]; ok {
		return str
	}
	return "IncTaxInd(" + i.String() + ")"
}

const _IndividualAllocType_name = "IndividualAllocType_SUB_ALLOCATEIndividualAllocType_THIRD_PARTY_ALLOCATION"

var _IndividualAllocType_map = map[IndividualAllocType]string{
	"1": _IndividualAllocType_name[0:32],
	"2": _IndividualAllocType_name[32:74],
}

func (i IndividualAllocType) String() string {
	if str, ok := _IndividualAllocType_map[i]; ok {
		return str
	}
	return "IndividualAllocType(" + i.String() + ")"
}

const _InstrAttribType_name = "InstrAttribType_FLATInstrAttribType_ORIGINAL_ISSUE_DISCOUNTInstrAttribType_CALLABLE_PUTTABLEInstrAttribType_ESCROWED_TO_MATURITYInstrAttribType_ESCROWED_TO_REDEMPTION_DATEInstrAttribType_PRE_REFUNDEDInstrAttribType_IN_DEFAULTInstrAttribType_UNRATEDInstrAttribType_TAXABLEInstrAttribType_INDEXEDInstrAttribType_SUBJECT_TO_ALTERNATIVE_MINIMUM_TAXInstrAttribType_ZERO_COUPONInstrAttribType_ORIGINAL_ISSUE_DISCOUNT_PRICE_SUPPLY_PRICE_IN_THE_INSTRATTRIBVALUEInstrAttribType_CALLABLE_BELOW_MATURITY_VALUEInstrAttribType_CALLABLE_WITHOUT_NOTICE_BY_MAIL_TO_HOLDER_UNLESS_REGISTEREDInstrAttribType_PRICE_TICK_RULES_FOR_SECURITYInstrAttribType_TRADE_TYPE_ELIGIBILITY_DETAILS_FOR_SECURITYInstrAttribType_INSTRUMENT_DENOMINATORInstrAttribType_INSTRUMENT_NUMERATORInstrAttribType_INSTRUMENT_PRICE_PRECISIONInstrAttribType_INSTRUMENT_STRIKE_PRICEInstrAttribType_TRADEABLE_INDICATORInstrAttribType_INTEREST_BEARINGInstrAttribType_NO_PERIODIC_PAYMENTSInstrAttribType_VARIABLE_RATEInstrAttribType_LESS_FEE_FOR_PUTInstrAttribType_STEPPED_COUPONInstrAttribType_COUPON_PERIODInstrAttribType_WHEN_AND_IF_ISSUEDInstrAttribType_TEXT_SUPPLY_THE_TEXT_OF_THE_ATTRIBUTE_OR_DISCLAIMER_IN_THE_INSTRATTRIBVALUE"

var _InstrAttribType_map = map[InstrAttribType]string{
	"1":  _InstrAttribType_name[0:20],
	"10": _InstrAttribType_name[20:59],
	"11": _InstrAttribType_name[59:92],
	"12": _InstrAttribType_name[92:128],
	"13": _InstrAttribType_name[128:171],
	"14": _InstrAttribType_name[171:199],
	"15": _InstrAttribType_name[199:225],
	"16": _InstrAttribType_name[225:248],
	"17": _InstrAttribType_name[248:271],
	"18": _InstrAttribType_name[271:294],
	"19": _InstrAttribType_name[294:344],
	"2":  _InstrAttribType_name[344:371],
	"20": _InstrAttribType_name[371:453],
	"21": _InstrAttribType_name[453:498],
	"22": _InstrAttribType_name[498:573],
	"23": _InstrAttribType_name[573:618],
	"24": _InstrAttribType_name[618:677],
	"25": _InstrAttribType_name[677:715],
	"26": _InstrAttribType_name[715:751],
	"27": _InstrAttribType_name[751:793],
	"28": _InstrAttribType_name[793:832],
	"29": _InstrAttribType_name[832:867],
	"3":  _InstrAttribType_name[867:899],
	"4":  _InstrAttribType_name[899:935],
	"5":  _InstrAttribType_name[935:964],
	"6":  _InstrAttribType_name[964:996],
	"7":  _InstrAttribType_name[996:1026],
	"8":  _InstrAttribType_name[1026:1055],
	"9":  _InstrAttribType_name[1055:1089],
	"99": _InstrAttribType_name[1089:1180],
}

func (i InstrAttribType) String() string {
	if str, ok := _InstrAttribType_map[i]; ok {
		return str
	}
	return "InstrAttribType(" + i.String() + ")"
}

const _InstrRegistry_name = "InstrRegistry_CUSTODIANInstrRegistry_COUNTRYInstrRegistry_PHYSICAL"

var _InstrRegistry_map = map[InstrRegistry]string{
	"BIC": _InstrRegistry_name[0:23],
	"ISO": _InstrRegistry_name[23:44],
	"ZZ":  _InstrRegistry_name[44:66],
}

func (i InstrRegistry) String() string {
	if str, ok := _InstrRegistry_map[i]; ok {
		return str
	}
	return "InstrRegistry(" + i.String() + ")"
}

const _LastCapacity_name = "LastCapacity_AGENTLastCapacity_CROSS_AS_AGENTLastCapacity_CROSS_AS_PRINCIPALLastCapacity_PRINCIPAL"

var _LastCapacity_map = map[LastCapacity]string{
	"1": _LastCapacity_name[0:18],
	"2": _LastCapacity_name[18:45],
	"3": _LastCapacity_name[45:76],
	"4": _LastCapacity_name[76:98],
}

func (i LastCapacity) String() string {
	if str, ok := _LastCapacity_map[i]; ok {
		return str
	}
	return "LastCapacity(" + i.String() + ")"
}

const _LastFragment_name = "LastFragment_NOLastFragment_YES"

var _LastFragment_map = map[LastFragment]string{
	"N": _LastFragment_name[0:15],
	"Y": _LastFragment_name[15:31],
}

func (i LastFragment) String() string {
	if str, ok := _LastFragment_map[i]; ok {
		return str
	}
	return "LastFragment(" + i.String() + ")"
}

const _LastLiquidityInd_name = "LastLiquidityInd_ADDED_LIQUIDITYLastLiquidityInd_REMOVED_LIQUIDITYLastLiquidityInd_LIQUIDITY_ROUTED_OUTLastLiquidityInd_AUCTION"

var _LastLiquidityInd_map = map[LastLiquidityInd]string{
	"1": _LastLiquidityInd_name[0:32],
	"2": _LastLiquidityInd_name[32:66],
	"3": _LastLiquidityInd_name[66:103],
	"4": _LastLiquidityInd_name[103:127],
}

func (i LastLiquidityInd) String() string {
	if str, ok := _LastLiquidityInd_map[i]; ok {
		return str
	}
	return "LastLiquidityInd(" + i.String() + ")"
}

const _LastRptRequested_name = "LastRptRequested_NOLastRptRequested_YES"

var _LastRptRequested_map = map[LastRptRequested]string{
	"N": _LastRptRequested_name[0:19],
	"Y": _LastRptRequested_name[19:39],
}

func (i LastRptRequested) String() string {
	if str, ok := _LastRptRequested_map[i]; ok {
		return str
	}
	return "LastRptRequested(" + i.String() + ")"
}

const _LegSwapType_name = "LegSwapType_PAR_FOR_PARLegSwapType_MODIFIED_DURATIONLegSwapType_RISKLegSwapType_PROCEEDS"

var _LegSwapType_map = map[LegSwapType]string{
	"1": _LegSwapType_name[0:23],
	"2": _LegSwapType_name[23:52],
	"4": _LegSwapType_name[52:68],
	"5": _LegSwapType_name[68:88],
}

func (i LegSwapType) String() string {
	if str, ok := _LegSwapType_map[i]; ok {
		return str
	}
	return "LegSwapType(" + i.String() + ")"
}

const _LegalConfirm_name = "LegalConfirm_NOLegalConfirm_YES"

var _LegalConfirm_map = map[LegalConfirm]string{
	"N": _LegalConfirm_name[0:15],
	"Y": _LegalConfirm_name[15:31],
}

func (i LegalConfirm) String() string {
	if str, ok := _LegalConfirm_map[i]; ok {
		return str
	}
	return "LegalConfirm(" + i.String() + ")"
}

const _LiquidityIndType_name = "LiquidityIndType_5_DAY_MOVING_AVERAGELiquidityIndType_20_DAY_MOVING_AVERAGELiquidityIndType_NORMAL_MARKET_SIZELiquidityIndType_OTHER"

var _LiquidityIndType_map = map[LiquidityIndType]string{
	"1": _LiquidityIndType_name[0:37],
	"2": _LiquidityIndType_name[37:75],
	"3": _LiquidityIndType_name[75:110],
	"4": _LiquidityIndType_name[110:132],
}

func (i LiquidityIndType) String() string {
	if str, ok := _LiquidityIndType_map[i]; ok {
		return str
	}
	return "LiquidityIndType(" + i.String() + ")"
}

const _ListExecInstType_name = "ListExecInstType_IMMEDIATEListExecInstType_WAIT_FOR_EXECUT_INSTRUCTIONListExecInstType_EXCHANGE_SWITCH_CIV_ORDER_3ListExecInstType_EXCHANGE_SWITCH_CIV_ORDER_4ListExecInstType_EXCHANGE_SWITCH_CIV_ORDER_5"

var _ListExecInstType_map = map[ListExecInstType]string{
	"1": _ListExecInstType_name[0:26],
	"2": _ListExecInstType_name[26:70],
	"3": _ListExecInstType_name[70:114],
	"4": _ListExecInstType_name[114:158],
	"5": _ListExecInstType_name[158:202],
}

func (i ListExecInstType) String() string {
	if str, ok := _ListExecInstType_map[i]; ok {
		return str
	}
	return "ListExecInstType(" + i.String() + ")"
}

const _ListMethod_name = "ListMethod_PRE_LISTED_ONLYListMethod_USER_REQUESTED"

var _ListMethod_map = map[ListMethod]string{
	"0": _ListMethod_name[0:26],
	"1": _ListMethod_name[26:51],
}

func (i ListMethod) String() string {
	if str, ok := _ListMethod_map[i]; ok {
		return str
	}
	return "ListMethod(" + i.String() + ")"
}

const _ListOrderStatus_name = "ListOrderStatus_IN_BIDDING_PROCESSListOrderStatus_RECEIVED_FOR_EXECUTIONListOrderStatus_EXECUTINGListOrderStatus_CANCELLINGListOrderStatus_ALERTListOrderStatus_ALL_DONEListOrderStatus_REJECT"

var _ListOrderStatus_map = map[ListOrderStatus]string{
	"1": _ListOrderStatus_name[0:34],
	"2": _ListOrderStatus_name[34:72],
	"3": _ListOrderStatus_name[72:97],
	"4": _ListOrderStatus_name[97:123],
	"5": _ListOrderStatus_name[123:144],
	"6": _ListOrderStatus_name[144:168],
	"7": _ListOrderStatus_name[168:190],
}

func (i ListOrderStatus) String() string {
	if str, ok := _ListOrderStatus_map[i]; ok {
		return str
	}
	return "ListOrderStatus(" + i.String() + ")"
}

const _ListRejectReason_name = "ListRejectReason_BROKERListRejectReason_UNSUPPORTED_ORDER_CHARACTERISTICListRejectReason_EXCHANGE_CLOSEDListRejectReason_TOO_LATE_TO_ENTERListRejectReason_UNKNOWN_ORDERListRejectReason_DUPLICATE_ORDERListRejectReason_OTHER"

var _ListRejectReason_map = map[ListRejectReason]string{
	"0":  _ListRejectReason_name[0:23],
	"11": _ListRejectReason_name[23:72],
	"2":  _ListRejectReason_name[72:104],
	"4":  _ListRejectReason_name[104:138],
	"5":  _ListRejectReason_name[138:168],
	"6":  _ListRejectReason_name[168:200],
	"99": _ListRejectReason_name[200:222],
}

func (i ListRejectReason) String() string {
	if str, ok := _ListRejectReason_map[i]; ok {
		return str
	}
	return "ListRejectReason(" + i.String() + ")"
}

const _ListStatusType_name = "ListStatusType_ACKListStatusType_RESPONSEListStatusType_TIMEDListStatusType_EXEC_STARTEDListStatusType_ALL_DONEListStatusType_ALERT"

var _ListStatusType_map = map[ListStatusType]string{
	"1": _ListStatusType_name[0:18],
	"2": _ListStatusType_name[18:41],
	"3": _ListStatusType_name[41:61],
	"4": _ListStatusType_name[61:88],
	"5": _ListStatusType_name[88:111],
	"6": _ListStatusType_name[111:131],
}

func (i ListStatusType) String() string {
	if str, ok := _ListStatusType_map[i]; ok {
		return str
	}
	return "ListStatusType(" + i.String() + ")"
}

const _LocateReqd_name = "LocateReqd_NOLocateReqd_YES"

var _LocateReqd_map = map[LocateReqd]string{
	"N": _LocateReqd_name[0:13],
	"Y": _LocateReqd_name[13:27],
}

func (i LocateReqd) String() string {
	if str, ok := _LocateReqd_map[i]; ok {
		return str
	}
	return "LocateReqd(" + i.String() + ")"
}

const _LotType_name = "LotType_ODD_LOTLotType_ROUND_LOTLotType_BLOCK_LOTLotType_ROUND_LOT_BASED_UPON_UNITOFMEASURE"

var _LotType_map = map[LotType]string{
	"1": _LotType_name[0:15],
	"2": _LotType_name[15:32],
	"3": _LotType_name[32:49],
	"4": _LotType_name[49:91],
}

func (i LotType) String() string {
	if str, ok := _LotType_map[i]; ok {
		return str
	}
	return "LotType(" + i.String() + ")"
}

const _MDBookType_name = "MDBookType_TOP_OF_BOOKMDBookType_PRICE_DEPTHMDBookType_ORDER_DEPTH"

var _MDBookType_map = map[MDBookType]string{
	"1": _MDBookType_name[0:22],
	"2": _MDBookType_name[22:44],
	"3": _MDBookType_name[44:66],
}

func (i MDBookType) String() string {
	if str, ok := _MDBookType_map[i]; ok {
		return str
	}
	return "MDBookType(" + i.String() + ")"
}

const _MDEntryType_name = "MDEntryType_BIDMDEntryType_OFFERMDEntryType_TRADEMDEntryType_INDEX_VALUEMDEntryType_OPENING_PRICEMDEntryType_CLOSING_PRICEMDEntryType_SETTLEMENT_PRICEMDEntryType_TRADING_SESSION_HIGH_PRICEMDEntryType_TRADING_SESSION_LOW_PRICEMDEntryType_TRADING_SESSION_VWAP_PRICEMDEntryType_IMBALANCEMDEntryType_TRADE_VOLUMEMDEntryType_OPEN_INTERESTMDEntryType_COMPOSITE_UNDERLYING_PRICEMDEntryType_SIMULATED_SELL_PRICEMDEntryType_SIMULATED_BUY_PRICEMDEntryType_MARGIN_RATEMDEntryType_MID_PRICEMDEntryType_EMPTY_BOOKMDEntryType_SETTLE_HIGH_PRICEMDEntryType_SETTLE_LOW_PRICEMDEntryType_PRIOR_SETTLE_PRICEMDEntryType_SESSION_HIGH_BIDMDEntryType_SESSION_LOW_OFFERMDEntryType_EARLY_PRICESMDEntryType_AUCTION_CLEARING_PRICEMDEntryType_DAILY_VALUE_ADJUSTMENT_FOR_LONG_POSITIONSMDEntryType_SWAP_VALUE_FACTORMDEntryType_CUMULATIVE_VALUE_ADJUSTMENT_FOR_LONG_POSITIONSMDEntryType_DAILY_VALUE_ADJUSTMENT_FOR_SHORT_POSITIONSMDEntryType_CUMULATIVE_VALUE_ADJUSTMENT_FOR_SHORT_POSITIONSMDEntryType_FIXING_PRICEMDEntryType_CASH_RATEMDEntryType_RECOVERY_RATEMDEntryType_RECOVERY_RATE_FOR_LONGMDEntryType_RECOVERY_RATE_FOR_SHORT"

var _MDEntryType_map = map[MDEntryType]string{
	"0": _MDEntryType_name[0:15],
	"1": _MDEntryType_name[15:32],
	"2": _MDEntryType_name[32:49],
	"3": _MDEntryType_name[49:72],
	"4": _MDEntryType_name[72:97],
	"5": _MDEntryType_name[97:122],
	"6": _MDEntryType_name[122:150],
	"7": _MDEntryType_name[150:188],
	"8": _MDEntryType_name[188:225],
	"9": _MDEntryType_name[225:263],
	"A": _MDEntryType_name[263:284],
	"B": _MDEntryType_name[284:308],
	"C": _MDEntryType_name[308:333],
	"D": _MDEntryType_name[333:371],
	"E": _MDEntryType_name[371:403],
	"F": _MDEntryType_name[403:434],
	"G": _MDEntryType_name[434:457],
	"H": _MDEntryType_name[457:478],
	"J": _MDEntryType_name[478:500],
	"K": _MDEntryType_name[500:529],
	"L": _MDEntryType_name[529:557],
	"M": _MDEntryType_name[557:587],
	"N": _MDEntryType_name[587:615],
	"O": _MDEntryType_name[615:644],
	"P": _MDEntryType_name[644:668],
	"Q": _MDEntryType_name[668:702],
	"R": _MDEntryType_name[702:755],
	"S": _MDEntryType_name[755:784],
	"T": _MDEntryType_name[784:842],
	"U": _MDEntryType_name[842:896],
	"V": _MDEntryType_name[896:955],
	"W": _MDEntryType_name[955:979],
	"X": _MDEntryType_name[979:1000],
	"Y": _MDEntryType_name[1000:1025],
	"Z": _MDEntryType_name[1025:1059],
	"a": _MDEntryType_name[1059:1094],
}

func (i MDEntryType) String() string {
	if str, ok := _MDEntryType_map[i]; ok {
		return str
	}
	return "MDEntryType(" + i.String() + ")"
}

const _MDImplicitDelete_name = "MDImplicitDelete_NOMDImplicitDelete_YES"

var _MDImplicitDelete_map = map[MDImplicitDelete]string{
	"N": _MDImplicitDelete_name[0:19],
	"Y": _MDImplicitDelete_name[19:39],
}

func (i MDImplicitDelete) String() string {
	if str, ok := _MDImplicitDelete_map[i]; ok {
		return str
	}
	return "MDImplicitDelete(" + i.String() + ")"
}

const _MDOriginType_name = "MDOriginType_BOOKMDOriginType_OFF_BOOKMDOriginType_CROSS"

var _MDOriginType_map = map[MDOriginType]string{
	"0": _MDOriginType_name[0:17],
	"1": _MDOriginType_name[17:38],
	"2": _MDOriginType_name[38:56],
}

func (i MDOriginType) String() string {
	if str, ok := _MDOriginType_map[i]; ok {
		return str
	}
	return "MDOriginType(" + i.String() + ")"
}

const _MDQuoteType_name = "MDQuoteType_INDICATIVEMDQuoteType_TRADEABLEMDQuoteType_RESTRICTED_TRADEABLEMDQuoteType_COUNTERMDQuoteType_INDICATIVE_AND_TRADEABLE"

var _MDQuoteType_map = map[MDQuoteType]string{
	"0": _MDQuoteType_name[0:22],
	"1": _MDQuoteType_name[22:43],
	"2": _MDQuoteType_name[43:75],
	"3": _MDQuoteType_name[75:94],
	"4": _MDQuoteType_name[94:130],
}

func (i MDQuoteType) String() string {
	if str, ok := _MDQuoteType_map[i]; ok {
		return str
	}
	return "MDQuoteType(" + i.String() + ")"
}

const _MDReqRejReason_name = "MDReqRejReason_UNKNOWN_SYMBOLMDReqRejReason_DUPLICATE_MDREQIDMDReqRejReason_INSUFFICIENT_BANDWIDTHMDReqRejReason_INSUFFICIENT_PERMISSIONSMDReqRejReason_UNSUPPORTED_SUBSCRIPTIONREQUESTTYPEMDReqRejReason_UNSUPPORTED_MARKETDEPTHMDReqRejReason_UNSUPPORTED_MDUPDATETYPEMDReqRejReason_UNSUPPORTED_AGGREGATEDBOOKMDReqRejReason_UNSUPPORTED_MDENTRYTYPEMDReqRejReason_UNSUPPORTED_TRADINGSESSIONIDMDReqRejReason_UNSUPPORTED_SCOPEMDReqRejReason_UNSUPPORTED_OPENCLOSESETTLEFLAGMDReqRejReason_UNSUPPORTED_MDIMPLICITDELETEMDReqRejReason_INSUFFICIENT_CREDIT"

var _MDReqRejReason_map = map[MDReqRejReason]string{
	"0": _MDReqRejReason_name[0:29],
	"1": _MDReqRejReason_name[29:61],
	"2": _MDReqRejReason_name[61:98],
	"3": _MDReqRejReason_name[98:137],
	"4": _MDReqRejReason_name[137:187],
	"5": _MDReqRejReason_name[187:225],
	"6": _MDReqRejReason_name[225:264],
	"7": _MDReqRejReason_name[264:305],
	"8": _MDReqRejReason_name[305:343],
	"9": _MDReqRejReason_name[343:386],
	"A": _MDReqRejReason_name[386:418],
	"B": _MDReqRejReason_name[418:464],
	"C": _MDReqRejReason_name[464:507],
	"D": _MDReqRejReason_name[507:541],
}

func (i MDReqRejReason) String() string {
	if str, ok := _MDReqRejReason_map[i]; ok {
		return str
	}
	return "MDReqRejReason(" + i.String() + ")"
}

const _MDSecSizeType_name = "MDSecSizeType_CUSTOMER"

var _MDSecSizeType_map = map[MDSecSizeType]string{
	"1": _MDSecSizeType_name[0:22],
}

func (i MDSecSizeType) String() string {
	if str, ok := _MDSecSizeType_map[i]; ok {
		return str
	}
	return "MDSecSizeType(" + i.String() + ")"
}

const _MDUpdateAction_name = "MDUpdateAction_NEWMDUpdateAction_CHANGEMDUpdateAction_DELETEMDUpdateAction_DELETE_THRUMDUpdateAction_DELETE_FROMMDUpdateAction_OVERLAY"

var _MDUpdateAction_map = map[MDUpdateAction]string{
	"0": _MDUpdateAction_name[0:18],
	"1": _MDUpdateAction_name[18:39],
	"2": _MDUpdateAction_name[39:60],
	"3": _MDUpdateAction_name[60:86],
	"4": _MDUpdateAction_name[86:112],
	"5": _MDUpdateAction_name[112:134],
}

func (i MDUpdateAction) String() string {
	if str, ok := _MDUpdateAction_map[i]; ok {
		return str
	}
	return "MDUpdateAction(" + i.String() + ")"
}

const _MDUpdateType_name = "MDUpdateType_FULL_REFRESHMDUpdateType_INCREMENTAL_REFRESH"

var _MDUpdateType_map = map[MDUpdateType]string{
	"0": _MDUpdateType_name[0:25],
	"1": _MDUpdateType_name[25:57],
}

func (i MDUpdateType) String() string {
	if str, ok := _MDUpdateType_map[i]; ok {
		return str
	}
	return "MDUpdateType(" + i.String() + ")"
}

const _MarketUpdateAction_name = "MarketUpdateAction_ADDMarketUpdateAction_DELETEMarketUpdateAction_MODIFY"

var _MarketUpdateAction_map = map[MarketUpdateAction]string{
	"A": _MarketUpdateAction_name[0:22],
	"D": _MarketUpdateAction_name[22:47],
	"M": _MarketUpdateAction_name[47:72],
}

func (i MarketUpdateAction) String() string {
	if str, ok := _MarketUpdateAction_map[i]; ok {
		return str
	}
	return "MarketUpdateAction(" + i.String() + ")"
}

const _MassActionRejectReason_name = "MassActionRejectReason_MASS_ACTION_NOT_SUPPORTEDMassActionRejectReason_INVALID_OR_UNKNOWN_SECURITYMassActionRejectReason_INVALID_OR_UNKNOWN_SECURITY_ISSUERMassActionRejectReason_INVALID_OR_UNKNOWN_ISSUER_OF_UNDERLYING_SECURITYMassActionRejectReason_INVALID_OR_UNKNOWN_UNDERLYING_SECURITYMassActionRejectReason_INVALID_OR_UNKNOWN_PRODUCTMassActionRejectReason_INVALID_OR_UNKNOWN_CFICODEMassActionRejectReason_INVALID_OR_UNKNOWN_SECURITYTYPEMassActionRejectReason_INVALID_OR_UNKNOWN_TRADING_SESSIONMassActionRejectReason_INVALID_OR_UNKNOWN_MARKETMassActionRejectReason_INVALID_OR_UNKNOWN_MARKET_SEGMENTMassActionRejectReason_INVALID_OR_UNKNOWN_SECURITY_GROUPMassActionRejectReason_OTHER"

var _MassActionRejectReason_map = map[MassActionRejectReason]string{
	"0":  _MassActionRejectReason_name[0:48],
	"1":  _MassActionRejectReason_name[48:98],
	"10": _MassActionRejectReason_name[98:155],
	"11": _MassActionRejectReason_name[155:226],
	"2":  _MassActionRejectReason_name[226:287],
	"3":  _MassActionRejectReason_name[287:336],
	"4":  _MassActionRejectReason_name[336:385],
	"5":  _MassActionRejectReason_name[385:439],
	"6":  _MassActionRejectReason_name[439:496],
	"7":  _MassActionRejectReason_name[496:544],
	"8":  _MassActionRejectReason_name[544:600],
	"9":  _MassActionRejectReason_name[600:656],
	"99": _MassActionRejectReason_name[656:684],
}

func (i MassActionRejectReason) String() string {
	if str, ok := _MassActionRejectReason_map[i]; ok {
		return str
	}
	return "MassActionRejectReason(" + i.String() + ")"
}

const _MassActionResponse_name = "MassActionResponse_REJECTEDMassActionResponse_ACCEPTED"

var _MassActionResponse_map = map[MassActionResponse]string{
	"0": _MassActionResponse_name[0:27],
	"1": _MassActionResponse_name[27:54],
}

func (i MassActionResponse) String() string {
	if str, ok := _MassActionResponse_map[i]; ok {
		return str
	}
	return "MassActionResponse(" + i.String() + ")"
}

const _MassActionScope_name = "MassActionScope_ALL_ORDERS_FOR_A_SECURITYMassActionScope_ALL_ORDERS_FOR_A_SECURITY_GROUPMassActionScope_CANCEL_FOR_SECURITY_ISSUERMassActionScope_CANCEL_FOR_ISSUER_OF_UNDERLYING_SECURITYMassActionScope_ALL_ORDERS_FOR_AN_UNDERLYING_SECURITYMassActionScope_ALL_ORDERS_FOR_A_PRODUCTMassActionScope_ALL_ORDERS_FOR_A_CFICODEMassActionScope_ALL_ORDERS_FOR_A_SECURITYTYPEMassActionScope_ALL_ORDERS_FOR_A_TRADING_SESSIONMassActionScope_ALL_ORDERSMassActionScope_ALL_ORDERS_FOR_A_MARKETMassActionScope_ALL_ORDERS_FOR_A_MARKET_SEGMENT"

var _MassActionScope_map = map[MassActionScope]string{
	"1":  _MassActionScope_name[0:41],
	"10": _MassActionScope_name[41:88],
	"11": _MassActionScope_name[88:130],
	"12": _MassActionScope_name[130:186],
	"2":  _MassActionScope_name[186:239],
	"3":  _MassActionScope_name[239:279],
	"4":  _MassActionScope_name[279:319],
	"5":  _MassActionScope_name[319:364],
	"6":  _MassActionScope_name[364:412],
	"7":  _MassActionScope_name[412:438],
	"8":  _MassActionScope_name[438:477],
	"9":  _MassActionScope_name[477:524],
}

func (i MassActionScope) String() string {
	if str, ok := _MassActionScope_map[i]; ok {
		return str
	}
	return "MassActionScope(" + i.String() + ")"
}

const _MassActionType_name = "MassActionType_SUSPEND_ORDERSMassActionType_RELEASE_ORDERS_FROM_SUSPENSIONMassActionType_CANCEL_ORDERS"

var _MassActionType_map = map[MassActionType]string{
	"1": _MassActionType_name[0:29],
	"2": _MassActionType_name[29:74],
	"3": _MassActionType_name[74:102],
}

func (i MassActionType) String() string {
	if str, ok := _MassActionType_map[i]; ok {
		return str
	}
	return "MassActionType(" + i.String() + ")"
}

const _MassCancelRejectReason_name = "MassCancelRejectReason_MASS_CANCEL_NOT_SUPPORTEDMassCancelRejectReason_INVALID_OR_UNKNOWN_SECURITYMassCancelRejectReason_INVALID_OR_UNKNOWN_SECURITY_ISSUERMassCancelRejectReason_INVALID_OR_UNKNOWN_ISSUER_OF_UNDERLYING_SECURITYMassCancelRejectReason_INVALID_OR_UNKOWN_UNDERLYING_SECURITYMassCancelRejectReason_INVALID_OR_UNKNOWN_PRODUCTMassCancelRejectReason_INVALID_OR_UNKNOWN_CFICODEMassCancelRejectReason_INVALID_OR_UNKNOWN_SECURITYTYPEMassCancelRejectReason_INVALID_OR_UNKNOWN_TRADING_SESSIONMassCancelRejectReason_INVALID_OR_UNKNOWN_MARKETMassCancelRejectReason_INVALID_OR_UNKOWN_MARKET_SEGMENTMassCancelRejectReason_INVALID_OR_UNKNOWN_SECURITY_GROUPMassCancelRejectReason_OTHER"

var _MassCancelRejectReason_map = map[MassCancelRejectReason]string{
	"0":  _MassCancelRejectReason_name[0:48],
	"1":  _MassCancelRejectReason_name[48:98],
	"10": _MassCancelRejectReason_name[98:155],
	"11": _MassCancelRejectReason_name[155:226],
	"2":  _MassCancelRejectReason_name[226:286],
	"3":  _MassCancelRejectReason_name[286:335],
	"4":  _MassCancelRejectReason_name[335:384],
	"5":  _MassCancelRejectReason_name[384:438],
	"6":  _MassCancelRejectReason_name[438:495],
	"7":  _MassCancelRejectReason_name[495:543],
	"8":  _MassCancelRejectReason_name[543:598],
	"9":  _MassCancelRejectReason_name[598:654],
	"99": _MassCancelRejectReason_name[654:682],
}

func (i MassCancelRejectReason) String() string {
	if str, ok := _MassCancelRejectReason_map[i]; ok {
		return str
	}
	return "MassCancelRejectReason(" + i.String() + ")"
}

const _MassCancelRequestType_name = "MassCancelRequestType_CANCEL_ORDERS_FOR_A_SECURITYMassCancelRequestType_CANCEL_ORDERS_FOR_AN_UNDERLYING_SECURITYMassCancelRequestType_CANCEL_ORDERS_FOR_A_PRODUCTMassCancelRequestType_CANCEL_ORDERS_FOR_A_CFICODEMassCancelRequestType_CANCEL_ORDERS_FOR_A_SECURITYTYPEMassCancelRequestType_CANCEL_ORDERS_FOR_A_TRADING_SESSIONMassCancelRequestType_CANCEL_ALL_ORDERSMassCancelRequestType_CANCEL_ORDERS_FOR_A_MARKETMassCancelRequestType_CANCEL_ORDERS_FOR_A_MARKET_SEGMENTMassCancelRequestType_CANCEL_ORDERS_FOR_A_SECURITY_GROUPMassCancelRequestType_CANCEL_FOR_SECURITY_ISSUERMassCancelRequestType_CANCEL_FOR_ISSUER_OF_UNDERLYING_SECURITY"

var _MassCancelRequestType_map = map[MassCancelRequestType]string{
	"1": _MassCancelRequestType_name[0:50],
	"2": _MassCancelRequestType_name[50:112],
	"3": _MassCancelRequestType_name[112:161],
	"4": _MassCancelRequestType_name[161:210],
	"5": _MassCancelRequestType_name[210:264],
	"6": _MassCancelRequestType_name[264:321],
	"7": _MassCancelRequestType_name[321:360],
	"8": _MassCancelRequestType_name[360:408],
	"9": _MassCancelRequestType_name[408:464],
	"A": _MassCancelRequestType_name[464:520],
	"B": _MassCancelRequestType_name[520:568],
	"C": _MassCancelRequestType_name[568:630],
}

func (i MassCancelRequestType) String() string {
	if str, ok := _MassCancelRequestType_map[i]; ok {
		return str
	}
	return "MassCancelRequestType(" + i.String() + ")"
}

const _MassCancelResponse_name = "MassCancelResponse_CANCEL_REQUEST_REJECTEDMassCancelResponse_CANCEL_ORDERS_FOR_A_SECURITYMassCancelResponse_CANCEL_ORDERS_FOR_AN_UNDERLYING_SECURITYMassCancelResponse_CANCEL_ORDERS_FOR_A_PRODUCTMassCancelResponse_CANCEL_ORDERS_FOR_A_CFICODEMassCancelResponse_CANCEL_ORDERS_FOR_A_SECURITYTYPEMassCancelResponse_CANCEL_ORDERS_FOR_A_TRADING_SESSIONMassCancelResponse_CANCEL_ALL_ORDERSMassCancelResponse_CANCEL_ORDERS_FOR_A_MARKETMassCancelResponse_CANCEL_ORDERS_FOR_A_MARKET_SEGMENTMassCancelResponse_CANCEL_ORDERS_FOR_A_SECURITY_GROUPMassCancelResponse_CANCEL_ORDERS_FOR_A_SECURITIES_ISSUERMassCancelResponse_CANCEL_ORDERS_FOR_ISSUER_OF_UNDERLYING_SECURITY"

var _MassCancelResponse_map = map[MassCancelResponse]string{
	"0": _MassCancelResponse_name[0:42],
	"1": _MassCancelResponse_name[42:89],
	"2": _MassCancelResponse_name[89:148],
	"3": _MassCancelResponse_name[148:194],
	"4": _MassCancelResponse_name[194:240],
	"5": _MassCancelResponse_name[240:291],
	"6": _MassCancelResponse_name[291:345],
	"7": _MassCancelResponse_name[345:381],
	"8": _MassCancelResponse_name[381:426],
	"9": _MassCancelResponse_name[426:479],
	"A": _MassCancelResponse_name[479:532],
	"B": _MassCancelResponse_name[532:588],
	"C": _MassCancelResponse_name[588:654],
}

func (i MassCancelResponse) String() string {
	if str, ok := _MassCancelResponse_map[i]; ok {
		return str
	}
	return "MassCancelResponse(" + i.String() + ")"
}

const _MassStatusReqType_name = "MassStatusReqType_STATUS_FOR_ORDERS_FOR_A_SECURITYMassStatusReqType_STATUS_FOR_ISSUER_OF_UNDERLYING_SECURITYMassStatusReqType_STATUS_FOR_ORDERS_FOR_AN_UNDERLYING_SECURITYMassStatusReqType_STATUS_FOR_ORDERS_FOR_A_PRODUCTMassStatusReqType_STATUS_FOR_ORDERS_FOR_A_CFICODEMassStatusReqType_STATUS_FOR_ORDERS_FOR_A_SECURITYTYPEMassStatusReqType_STATUS_FOR_ORDERS_FOR_A_TRADING_SESSIONMassStatusReqType_STATUS_FOR_ALL_ORDERSMassStatusReqType_STATUS_FOR_ORDERS_FOR_A_PARTYIDMassStatusReqType_STATUS_FOR_SECURITY_ISSUER"

var _MassStatusReqType_map = map[MassStatusReqType]string{
	"1":  _MassStatusReqType_name[0:50],
	"10": _MassStatusReqType_name[50:108],
	"2":  _MassStatusReqType_name[108:170],
	"3":  _MassStatusReqType_name[170:219],
	"4":  _MassStatusReqType_name[219:268],
	"5":  _MassStatusReqType_name[268:322],
	"6":  _MassStatusReqType_name[322:379],
	"7":  _MassStatusReqType_name[379:418],
	"8":  _MassStatusReqType_name[418:467],
	"9":  _MassStatusReqType_name[467:511],
}

func (i MassStatusReqType) String() string {
	if str, ok := _MassStatusReqType_map[i]; ok {
		return str
	}
	return "MassStatusReqType(" + i.String() + ")"
}

const _MatchStatus_name = "MatchStatus_COMPARED_MATCHED_OR_AFFIRMEDMatchStatus_UNCOMPARED_UNMATCHED_OR_UNAFFIRMEDMatchStatus_ADVISORY_OR_ALERT"

var _MatchStatus_map = map[MatchStatus]string{
	"0": _MatchStatus_name[0:40],
	"1": _MatchStatus_name[40:86],
	"2": _MatchStatus_name[86:115],
}

func (i MatchStatus) String() string {
	if str, ok := _MatchStatus_map[i]; ok {
		return str
	}
	return "MatchStatus(" + i.String() + ")"
}

const _MatchType_name = "MatchType_ONE_PARTY_TRADE_REPORTMatchType_TWO_PARTY_TRADE_REPORTMatchType_CONFIRMED_TRADE_REPORTMatchType_AUTO_MATCHMatchType_CROSS_AUCTIONMatchType_COUNTER_ORDER_SELECTIONMatchType_ONE_PARTY_PRIVATELY_NEGOTIATED_TRADE_REPORTMatchType_TWO_PARTY_PRIVATELY_NEGOTIATED_TRADE_REPORTMatchType_CONTINUOUS_AUTO_MATCHMatchType_CROSS_AUCTION_63MatchType_COUNTER_ORDER_SELECTION_64MatchType_CALL_AUCTION_65MatchType_CALL_AUCTIONMatchType_ISSUING_BUY_BACK_AUCTIONMatchType_EXACT_MATCH_ON_TRADE_DATE_STOCK_SYMBOL_QUANTITY_PRICE_TRADE_TYPE_AND_SPECIAL_TRADE_INDICATOR_PLUS_FOUR_BADGES_AND_EXECUTION_TIMEMatchType_EXACT_MATCH_ON_TRADE_DATE_STOCK_SYMBOL_QUANTITY_PRICE_TRADE_TYPE_AND_SPECIAL_TRADE_INDICATOR_PLUS_FOUR_BADGESMatchType_EXACT_MATCH_ON_TRADE_DATE_STOCK_SYMBOL_QUANTITY_PRICE_TRADE_TYPE_AND_SPECIAL_TRADE_INDICATOR_PLUS_TWO_BADGES_AND_EXECUTION_TIMEMatchType_EXACT_MATCH_ON_TRADE_DATE_STOCK_SYMBOL_QUANTITY_PRICE_TRADE_TYPE_AND_SPECIAL_TRADE_INDICATOR_PLUS_TWO_BADGESMatchType_EXACT_MATCH_ON_TRADE_DATE_STOCK_SYMBOL_QUANTITY_PRICE_TRADETYPE_AND_SPECIAL_TRADE_INDICATOR_PLUS_EXECUTION_TIMEMatchType_NASDAQACTM1MATCHMatchType_NASDAQACTM2MATCHMatchType_NASDAQACTACCEPTEDTRADEMatchType_NASDAQACTDEFAULTTRADEMatchType_NASDAQACTDEFAULTAFTERM2MatchType_NASDAQACTM6MATCHMatchType_NASDAQNONACTMatchType_COMPARED_RECORDS_RESULTING_FROM_STAMPED_ADVISORIES_OR_SPECIALIST_ACCEPTS_PAIR_OFFSMatchType_EXACT_MATCH_ON_TRADE_DATE_STOCK_SYMBOL_QUANTITY_PRICE_TRADE_TYPE_AND_SPECIAL_TRADE_INDICATOR_MINUS_BADGES_AND_TIMES_ACT_M1_MATCHMatchType_SUMMARIZED_MATCH_MINUS_BADGES_AND_TIMES_ACT_M2_MATCHMatchType_ACT_ACCEPTED_TRADEMatchType_ACT_DEFAULT_TRADEMatchType_ACT_DEFAULT_AFTER_M2MatchType_ACT_M6_MATCHMatchType_OCS_LOCKED_IN_NON_ACTMatchType_SUMMARIZED_MATCH_USING_A1_EXACT_MATCH_CRITERIA_EXCEPT_QUANTITY_IS_SUMMARIEDMatchType_SUMMARIZED_MATCH_USING_A2_EXACT_MATCH_CRITERIA_EXCEPT_QUANTITY_IS_SUMMARIZEDMatchType_SUMMARIZED_MATCH_USING_A3_EXACT_MATCH_CRITERIA_EXCEPT_QUANTITY_IS_SUMMARIZEDMatchType_SUMMARIZED_MATCH_USING_A4_EXACT_MATCH_CRITERIA_EXCEPT_QUANTITY_IS_SUMMARIZEDMatchType_SUMMARIZED_MATCH_USING_A5_EXACT_MATCH_CRITERIA_EXCEPT_QUANTITY_IS_SUMMARIZED"

var _MatchType_map = map[MatchType]string{
	"1":     _MatchType_name[0:32],
	"2":     _MatchType_name[32:64],
	"3":     _MatchType_name[64:96],
	"4":     _MatchType_name[96:116],
	"5":     _MatchType_name[116:139],
	"6":     _MatchType_name[139:172],
	"60":    _MatchType_name[172:225],
	"61":    _MatchType_name[225:278],
	"62":    _MatchType_name[278:309],
	"63":    _MatchType_name[309:335],
	"64":    _MatchType_name[335:371],
	"65":    _MatchType_name[371:396],
	"7":     _MatchType_name[396:418],
	"8":     _MatchType_name[418:452],
	"A1":    _MatchType_name[452:590],
	"A2":    _MatchType_name[590:709],
	"A3":    _MatchType_name[709:846],
	"A4":    _MatchType_name[846:964],
	"A5":    _MatchType_name[964:1085],
	"ACTM1": _MatchType_name[1085:1111],
	"ACTM2": _MatchType_name[1111:1137],
	"ACTM3": _MatchType_name[1137:1169],
	"ACTM4": _MatchType_name[1169:1200],
	"ACTM5": _MatchType_name[1200:1233],
	"ACTM6": _MatchType_name[1233:1259],
	"ACTMT": _MatchType_name[1259:1281],
	"AQ":    _MatchType_name[1281:1373],
	"M1":    _MatchType_name[1373:1511],
	"M2":    _MatchType_name[1511:1573],
	"M3":    _MatchType_name[1573:1601],
	"M4":    _MatchType_name[1601:1628],
	"M5":    _MatchType_name[1628:1658],
	"M6":    _MatchType_name[1658:1680],
	"MT":    _MatchType_name[1680:1711],
	"S1":    _MatchType_name[1711:1796],
	"S2":    _MatchType_name[1796:1882],
	"S3":    _MatchType_name[1882:1968],
	"S4":    _MatchType_name[1968:2054],
	"S5":    _MatchType_name[2054:2140],
}

func (i MatchType) String() string {
	if str, ok := _MatchType_map[i]; ok {
		return str
	}
	return "MatchType(" + i.String() + ")"
}

const _MaturityMonthYearFormat_name = "MaturityMonthYearFormat_YEARMONTH_ONLYMaturityMonthYearFormat_YEARMONTHDAYMaturityMonthYearFormat_YEARMONTHWEEK"

var _MaturityMonthYearFormat_map = map[MaturityMonthYearFormat]string{
	"0": _MaturityMonthYearFormat_name[0:38],
	"1": _MaturityMonthYearFormat_name[38:74],
	"2": _MaturityMonthYearFormat_name[74:111],
}

func (i MaturityMonthYearFormat) String() string {
	if str, ok := _MaturityMonthYearFormat_map[i]; ok {
		return str
	}
	return "MaturityMonthYearFormat(" + i.String() + ")"
}

const _MaturityMonthYearIncrementUnits_name = "MaturityMonthYearIncrementUnits_MONTHSMaturityMonthYearIncrementUnits_DAYSMaturityMonthYearIncrementUnits_WEEKSMaturityMonthYearIncrementUnits_YEARS"

var _MaturityMonthYearIncrementUnits_map = map[MaturityMonthYearIncrementUnits]string{
	"0": _MaturityMonthYearIncrementUnits_name[0:38],
	"1": _MaturityMonthYearIncrementUnits_name[38:74],
	"2": _MaturityMonthYearIncrementUnits_name[74:111],
	"3": _MaturityMonthYearIncrementUnits_name[111:148],
}

func (i MaturityMonthYearIncrementUnits) String() string {
	if str, ok := _MaturityMonthYearIncrementUnits_map[i]; ok {
		return str
	}
	return "MaturityMonthYearIncrementUnits(" + i.String() + ")"
}

const _MessageEncoding_name = "MessageEncoding_EUC_JPMessageEncoding_ISO_2022_JPMessageEncoding_SHIFT_JISMessageEncoding_UTF_8"

var _MessageEncoding_map = map[MessageEncoding]string{
	"EUC-JP":      _MessageEncoding_name[0:22],
	"ISO-2022-JP": _MessageEncoding_name[22:49],
	"SHIFT_JIS":   _MessageEncoding_name[49:74],
	"UTF-8":       _MessageEncoding_name[74:95],
}

func (i MessageEncoding) String() string {
	if str, ok := _MessageEncoding_map[i]; ok {
		return str
	}
	return "MessageEncoding(" + i.String() + ")"
}

const _MiscFeeBasis_name = "MiscFeeBasis_ABSOLUTEMiscFeeBasis_PER_UNITMiscFeeBasis_PERCENTAGE"

var _MiscFeeBasis_map = map[MiscFeeBasis]string{
	"0": _MiscFeeBasis_name[0:21],
	"1": _MiscFeeBasis_name[21:42],
	"2": _MiscFeeBasis_name[42:65],
}

func (i MiscFeeBasis) String() string {
	if str, ok := _MiscFeeBasis_map[i]; ok {
		return str
	}
	return "MiscFeeBasis(" + i.String() + ")"
}

const _MiscFeeType_name = "MiscFeeType_REGULATORYMiscFeeType_PER_TRANSACTIONMiscFeeType_CONVERSIONMiscFeeType_AGENTMiscFeeType_TRANSFER_FEEMiscFeeType_SECURITY_LENDINGMiscFeeType_TAXMiscFeeType_LOCAL_COMMISSIONMiscFeeType_EXCHANGE_FEESMiscFeeType_STAMPMiscFeeType_LEVYMiscFeeType_OTHERMiscFeeType_MARKUPMiscFeeType_CONSUMPTION_TAX"

var _MiscFeeType_map = map[MiscFeeType]string{
	"1":  _MiscFeeType_name[0:22],
	"10": _MiscFeeType_name[22:49],
	"11": _MiscFeeType_name[49:71],
	"12": _MiscFeeType_name[71:88],
	"13": _MiscFeeType_name[88:112],
	"14": _MiscFeeType_name[112:140],
	"2":  _MiscFeeType_name[140:155],
	"3":  _MiscFeeType_name[155:183],
	"4":  _MiscFeeType_name[183:208],
	"5":  _MiscFeeType_name[208:225],
	"6":  _MiscFeeType_name[225:241],
	"7":  _MiscFeeType_name[241:258],
	"8":  _MiscFeeType_name[258:276],
	"9":  _MiscFeeType_name[276:303],
}

func (i MiscFeeType) String() string {
	if str, ok := _MiscFeeType_map[i]; ok {
		return str
	}
	return "MiscFeeType(" + i.String() + ")"
}

const _ModelType_name = "ModelType_UTILITY_PROVIDED_STANDARD_MODELModelType_PROPRIETARY"

var _ModelType_map = map[ModelType]string{
	"0": _ModelType_name[0:41],
	"1": _ModelType_name[41:62],
}

func (i ModelType) String() string {
	if str, ok := _ModelType_map[i]; ok {
		return str
	}
	return "ModelType(" + i.String() + ")"
}

const _MoneyLaunderingStatus_name = "MoneyLaunderingStatus_EXEMPT_1MoneyLaunderingStatus_EXEMPT_2MoneyLaunderingStatus_EXEMPT_3MoneyLaunderingStatus_NOT_CHECKEDMoneyLaunderingStatus_PASSED"

var _MoneyLaunderingStatus_map = map[MoneyLaunderingStatus]string{
	"1": _MoneyLaunderingStatus_name[0:30],
	"2": _MoneyLaunderingStatus_name[30:60],
	"3": _MoneyLaunderingStatus_name[60:90],
	"N": _MoneyLaunderingStatus_name[90:123],
	"Y": _MoneyLaunderingStatus_name[123:151],
}

func (i MoneyLaunderingStatus) String() string {
	if str, ok := _MoneyLaunderingStatus_map[i]; ok {
		return str
	}
	return "MoneyLaunderingStatus(" + i.String() + ")"
}

const _MsgDirection_name = "MsgDirection_RECEIVEMsgDirection_SEND"

var _MsgDirection_map = map[MsgDirection]string{
	"R": _MsgDirection_name[0:20],
	"S": _MsgDirection_name[20:37],
}

func (i MsgDirection) String() string {
	if str, ok := _MsgDirection_map[i]; ok {
		return str
	}
	return "MsgDirection(" + i.String() + ")"
}

const _MsgType_name = "MsgType_HEARTBEATMsgType_TEST_REQUESTMsgType_RESEND_REQUESTMsgType_REJECTMsgType_SEQUENCE_RESETMsgType_LOGOUTMsgType_INDICATION_OF_INTERESTMsgType_ADVERTISEMENTMsgType_EXECUTION_REPORTMsgType_ORDER_CANCEL_REJECTMsgType_LOGONMsgType_DERIVATIVE_SECURITY_LISTMsgType_NEW_ORDER_MULTILEGMsgType_MULTILEG_ORDER_CANCEL_REPLACEMsgType_TRADE_CAPTURE_REPORT_REQUESTMsgType_TRADE_CAPTURE_REPORTMsgType_ORDER_MASS_STATUS_REQUESTMsgType_QUOTE_REQUEST_REJECTMsgType_RFQ_REQUESTMsgType_QUOTE_STATUS_REPORTMsgType_QUOTE_RESPONSEMsgType_CONFIRMATIONMsgType_POSITION_MAINTENANCE_REQUESTMsgType_POSITION_MAINTENANCE_REPORTMsgType_REQUEST_FOR_POSITIONSMsgType_REQUEST_FOR_POSITIONS_ACKMsgType_POSITION_REPORTMsgType_TRADE_CAPTURE_REPORT_REQUEST_ACKMsgType_TRADE_CAPTURE_REPORT_ACKMsgType_ALLOCATION_REPORTMsgType_ALLOCATION_REPORT_ACKMsgType_CONFIRMATION_ACKMsgType_SETTLEMENT_INSTRUCTION_REQUESTMsgType_ASSIGNMENT_REPORTMsgType_COLLATERAL_REQUESTMsgType_COLLATERAL_ASSIGNMENTMsgType_COLLATERAL_RESPONSEMsgType_NEWSMsgType_COLLATERAL_REPORTMsgType_COLLATERAL_INQUIRYMsgType_NETWORK_STATUS_REQUESTMsgType_NETWORK_STATUS_RESPONSEMsgType_USER_REQUESTMsgType_USER_RESPONSEMsgType_COLLATERAL_INQUIRY_ACKMsgType_CONFIRMATION_REQUESTMsgType_TRADING_SESSION_LIST_REQUESTMsgType_TRADING_SESSION_LISTMsgType_SECURITY_LIST_UPDATE_REPORTMsgType_ADJUSTED_POSITION_REPORTMsgType_ALLOCATION_INSTRUCTION_ALERTMsgType_EXECUTION_ACKNOWLEDGEMENTMsgType_CONTRARY_INTENTION_REPORTMsgType_SECURITY_DEFINITION_UPDATE_REPORTMsgType_SETTLEMENTOBLIGATIONREPORTMsgType_DERIVATIVESECURITYLISTUPDATEREPORTMsgType_TRADINGSESSIONLISTUPDATEREPORTMsgType_MARKETDEFINITIONREQUESTMsgType_MARKETDEFINITIONMsgType_MARKETDEFINITIONUPDATEREPORTMsgType_APPLICATIONMESSAGEREQUESTMsgType_APPLICATIONMESSAGEREQUESTACKMsgType_APPLICATIONMESSAGEREPORTMsgType_ORDERMASSACTIONREPORTMsgType_EMAILMsgType_ORDERMASSACTIONREQUESTMsgType_USERNOTIFICATIONMsgType_STREAMASSIGNMENTREQUESTMsgType_STREAMASSIGNMENTREPORTMsgType_STREAMASSIGNMENTREPORTACKMsgType_PARTYDETAILSLISTREQUESTMsgType_PARTYDETAILSLISTREPORTMsgType_ORDER_SINGLEMsgType_ORDER_LISTMsgType_ORDER_CANCEL_REQUESTMsgType_ORDER_CANCEL_REPLACE_REQUESTMsgType_ORDER_STATUS_REQUESTMsgType_ALLOCATION_INSTRUCTIONMsgType_LIST_CANCEL_REQUESTMsgType_LIST_EXECUTEMsgType_LIST_STATUS_REQUESTMsgType_LIST_STATUSMsgType_ALLOCATION_INSTRUCTION_ACKMsgType_DONT_KNOW_TRADEMsgType_QUOTE_REQUESTMsgType_QUOTEMsgType_SETTLEMENT_INSTRUCTIONSMsgType_MARKET_DATA_REQUESTMsgType_MARKET_DATA_SNAPSHOT_FULL_REFRESHMsgType_MARKET_DATA_INCREMENTAL_REFRESHMsgType_MARKET_DATA_REQUEST_REJECTMsgType_QUOTE_CANCELMsgType_QUOTE_STATUS_REQUESTMsgType_MASS_QUOTE_ACKNOWLEDGEMENTMsgType_SECURITY_DEFINITION_REQUESTMsgType_SECURITY_DEFINITIONMsgType_SECURITY_STATUS_REQUESTMsgType_SECURITY_STATUSMsgType_TRADING_SESSION_STATUS_REQUESTMsgType_TRADING_SESSION_STATUSMsgType_MASS_QUOTEMsgType_BUSINESS_MESSAGE_REJECTMsgType_BID_REQUESTMsgType_BID_RESPONSEMsgType_LIST_STRIKE_PRICEMsgType_XML_MESSAGEMsgType_REGISTRATION_INSTRUCTIONSMsgType_REGISTRATION_INSTRUCTIONS_RESPONSEMsgType_ORDER_MASS_CANCEL_REQUESTMsgType_ORDER_MASS_CANCEL_REPORTMsgType_NEW_ORDER_CROSSMsgType_CROSS_ORDER_CANCEL_REPLACE_REQUESTMsgType_CROSS_ORDER_CANCEL_REQUESTMsgType_SECURITY_TYPE_REQUESTMsgType_SECURITY_TYPESMsgType_SECURITY_LIST_REQUESTMsgType_SECURITY_LISTMsgType_DERIVATIVE_SECURITY_LIST_REQUEST"

var _MsgType_map = map[MsgType]string{
	"0":  _MsgType_name[0:17],
	"1":  _MsgType_name[17:37],
	"2":  _MsgType_name[37:59],
	"3":  _MsgType_name[59:73],
	"4":  _MsgType_name[73:95],
	"5":  _MsgType_name[95:109],
	"6":  _MsgType_name[109:139],
	"7":  _MsgType_name[139:160],
	"8":  _MsgType_name[160:184],
	"9":  _MsgType_name[184:211],
	"A":  _MsgType_name[211:224],
	"AA": _MsgType_name[224:256],
	"AB": _MsgType_name[256:282],
	"AC": _MsgType_name[282:319],
	"AD": _MsgType_name[319:355],
	"AE": _MsgType_name[355:383],
	"AF": _MsgType_name[383:416],
	"AG": _MsgType_name[416:444],
	"AH": _MsgType_name[444:463],
	"AI": _MsgType_name[463:490],
	"AJ": _MsgType_name[490:512],
	"AK": _MsgType_name[512:532],
	"AL": _MsgType_name[532:568],
	"AM": _MsgType_name[568:603],
	"AN": _MsgType_name[603:632],
	"AO": _MsgType_name[632:665],
	"AP": _MsgType_name[665:688],
	"AQ": _MsgType_name[688:728],
	"AR": _MsgType_name[728:760],
	"AS": _MsgType_name[760:785],
	"AT": _MsgType_name[785:814],
	"AU": _MsgType_name[814:838],
	"AV": _MsgType_name[838:876],
	"AW": _MsgType_name[876:901],
	"AX": _MsgType_name[901:927],
	"AY": _MsgType_name[927:956],
	"AZ": _MsgType_name[956:983],
	"B":  _MsgType_name[983:995],
	"BA": _MsgType_name[995:1020],
	"BB": _MsgType_name[1020:1046],
	"BC": _MsgType_name[1046:1076],
	"BD": _MsgType_name[1076:1107],
	"BE": _MsgType_name[1107:1127],
	"BF": _MsgType_name[1127:1148],
	"BG": _MsgType_name[1148:1178],
	"BH": _MsgType_name[1178:1206],
	"BI": _MsgType_name[1206:1242],
	"BJ": _MsgType_name[1242:1270],
	"BK": _MsgType_name[1270:1305],
	"BL": _MsgType_name[1305:1337],
	"BM": _MsgType_name[1337:1373],
	"BN": _MsgType_name[1373:1406],
	"BO": _MsgType_name[1406:1439],
	"BP": _MsgType_name[1439:1480],
	"BQ": _MsgType_name[1480:1514],
	"BR": _MsgType_name[1514:1556],
	"BS": _MsgType_name[1556:1594],
	"BT": _MsgType_name[1594:1625],
	"BU": _MsgType_name[1625:1649],
	"BV": _MsgType_name[1649:1685],
	"BW": _MsgType_name[1685:1718],
	"BX": _MsgType_name[1718:1754],
	"BY": _MsgType_name[1754:1786],
	"BZ": _MsgType_name[1786:1815],
	"C":  _MsgType_name[1815:1828],
	"CA": _MsgType_name[1828:1858],
	"CB": _MsgType_name[1858:1882],
	"CC": _MsgType_name[1882:1913],
	"CD": _MsgType_name[1913:1943],
	"CE": _MsgType_name[1943:1976],
	"CF": _MsgType_name[1976:2007],
	"CG": _MsgType_name[2007:2037],
	"D":  _MsgType_name[2037:2057],
	"E":  _MsgType_name[2057:2075],
	"F":  _MsgType_name[2075:2103],
	"G":  _MsgType_name[2103:2139],
	"H":  _MsgType_name[2139:2167],
	"J":  _MsgType_name[2167:2197],
	"K":  _MsgType_name[2197:2224],
	"L":  _MsgType_name[2224:2244],
	"M":  _MsgType_name[2244:2271],
	"N":  _MsgType_name[2271:2290],
	"P":  _MsgType_name[2290:2324],
	"Q":  _MsgType_name[2324:2347],
	"R":  _MsgType_name[2347:2368],
	"S":  _MsgType_name[2368:2381],
	"T":  _MsgType_name[2381:2412],
	"V":  _MsgType_name[2412:2439],
	"W":  _MsgType_name[2439:2480],
	"X":  _MsgType_name[2480:2519],
	"Y":  _MsgType_name[2519:2553],
	"Z":  _MsgType_name[2553:2573],
	"a":  _MsgType_name[2573:2601],
	"b":  _MsgType_name[2601:2635],
	"c":  _MsgType_name[2635:2670],
	"d":  _MsgType_name[2670:2697],
	"e":  _MsgType_name[2697:2728],
	"f":  _MsgType_name[2728:2751],
	"g":  _MsgType_name[2751:2789],
	"h":  _MsgType_name[2789:2819],
	"i":  _MsgType_name[2819:2837],
	"j":  _MsgType_name[2837:2868],
	"k":  _MsgType_name[2868:2887],
	"l":  _MsgType_name[2887:2907],
	"m":  _MsgType_name[2907:2932],
	"n":  _MsgType_name[2932:2951],
	"o":  _MsgType_name[2951:2984],
	"p":  _MsgType_name[2984:3026],
	"q":  _MsgType_name[3026:3059],
	"r":  _MsgType_name[3059:3091],
	"s":  _MsgType_name[3091:3114],
	"t":  _MsgType_name[3114:3156],
	"u":  _MsgType_name[3156:3190],
	"v":  _MsgType_name[3190:3219],
	"w":  _MsgType_name[3219:3241],
	"x":  _MsgType_name[3241:3270],
	"y":  _MsgType_name[3270:3291],
	"z":  _MsgType_name[3291:3331],
}

func (i MsgType) String() string {
	if str, ok := _MsgType_map[i]; ok {
		return str
	}
	return "MsgType(" + i.String() + ")"
}

const _MultiLegReportingType_name = "MultiLegReportingType_SINGLE_SECURITYMultiLegReportingType_INDIVIDUAL_LEG_OF_A_MULTI_LEG_SECURITYMultiLegReportingType_MULTI_LEG_SECURITY"

var _MultiLegReportingType_map = map[MultiLegReportingType]string{
	"1": _MultiLegReportingType_name[0:37],
	"2": _MultiLegReportingType_name[37:97],
	"3": _MultiLegReportingType_name[97:137],
}

func (i MultiLegReportingType) String() string {
	if str, ok := _MultiLegReportingType_map[i]; ok {
		return str
	}
	return "MultiLegReportingType(" + i.String() + ")"
}

const _MultiLegRptTypeReq_name = "MultiLegRptTypeReq_REPORT_BY_MULITLEG_SECURITY_ONLYMultiLegRptTypeReq_REPORT_BY_MULTILEG_SECURITY_AND_BY_INSTRUMENT_LEGS_BELONGING_TO_THE_MULTILEG_SECURITYMultiLegRptTypeReq_REPORT_BY_INSTRUMENT_LEGS_BELONGING_TO_THE_MULTILEG_SECURITY_ONLY"

var _MultiLegRptTypeReq_map = map[MultiLegRptTypeReq]string{
	"0": _MultiLegRptTypeReq_name[0:51],
	"1": _MultiLegRptTypeReq_name[51:155],
	"2": _MultiLegRptTypeReq_name[155:239],
}

func (i MultiLegRptTypeReq) String() string {
	if str, ok := _MultiLegRptTypeReq_map[i]; ok {
		return str
	}
	return "MultiLegRptTypeReq(" + i.String() + ")"
}

const _MultilegModel_name = "MultilegModel_PREDEFINED_MULTILEG_SECURITYMultilegModel_USER_DEFINED_MULTLEG_SECURITYMultilegModel_USER_DEFINED_NON_SECURITIZED_MULTILEG"

var _MultilegModel_map = map[MultilegModel]string{
	"0": _MultilegModel_name[0:42],
	"1": _MultilegModel_name[42:85],
	"2": _MultilegModel_name[85:136],
}

func (i MultilegModel) String() string {
	if str, ok := _MultilegModel_map[i]; ok {
		return str
	}
	return "MultilegModel(" + i.String() + ")"
}

const _MultilegPriceMethod_name = "MultilegPriceMethod_NET_PRICEMultilegPriceMethod_REVERSED_NET_PRICEMultilegPriceMethod_YIELD_DIFFERENCEMultilegPriceMethod_INDIVIDUALMultilegPriceMethod_CONTRACT_WEIGHTED_AVERAGE_PRICEMultilegPriceMethod_MULTIPLIED_PRICE"

var _MultilegPriceMethod_map = map[MultilegPriceMethod]string{
	"0": _MultilegPriceMethod_name[0:29],
	"1": _MultilegPriceMethod_name[29:67],
	"2": _MultilegPriceMethod_name[67:103],
	"3": _MultilegPriceMethod_name[103:133],
	"4": _MultilegPriceMethod_name[133:184],
	"5": _MultilegPriceMethod_name[184:220],
}

func (i MultilegPriceMethod) String() string {
	if str, ok := _MultilegPriceMethod_map[i]; ok {
		return str
	}
	return "MultilegPriceMethod(" + i.String() + ")"
}

const _NetGrossInd_name = "NetGrossInd_NETNetGrossInd_GROSS"

var _NetGrossInd_map = map[NetGrossInd]string{
	"1": _NetGrossInd_name[0:15],
	"2": _NetGrossInd_name[15:32],
}

func (i NetGrossInd) String() string {
	if str, ok := _NetGrossInd_map[i]; ok {
		return str
	}
	return "NetGrossInd(" + i.String() + ")"
}

const _NetworkRequestType_name = "NetworkRequestType_SNAPSHOTNetworkRequestType_SUBSCRIBENetworkRequestType_STOP_SUBSCRIBINGNetworkRequestType_LEVEL_OF_DETAIL_THEN_NOCOMPIDS_BECOMES_REQUIRED"

var _NetworkRequestType_map = map[NetworkRequestType]string{
	"1": _NetworkRequestType_name[0:27],
	"2": _NetworkRequestType_name[27:55],
	"4": _NetworkRequestType_name[55:90],
	"8": _NetworkRequestType_name[90:156],
}

func (i NetworkRequestType) String() string {
	if str, ok := _NetworkRequestType_map[i]; ok {
		return str
	}
	return "NetworkRequestType(" + i.String() + ")"
}

const _NetworkStatusResponseType_name = "NetworkStatusResponseType_FULLNetworkStatusResponseType_INCREMENTAL_UPDATE"

var _NetworkStatusResponseType_map = map[NetworkStatusResponseType]string{
	"1": _NetworkStatusResponseType_name[0:30],
	"2": _NetworkStatusResponseType_name[30:74],
}

func (i NetworkStatusResponseType) String() string {
	if str, ok := _NetworkStatusResponseType_map[i]; ok {
		return str
	}
	return "NetworkStatusResponseType(" + i.String() + ")"
}

const _NewsCategory_name = "NewsCategory_COMPANY_NEWSNewsCategory_MARKETPLACE_NEWSNewsCategory_FINANCIAL_MARKET_NEWSNewsCategory_TECHNICAL_NEWSNewsCategory_OTHER_NEWS"

var _NewsCategory_map = map[NewsCategory]string{
	"0":  _NewsCategory_name[0:25],
	"1":  _NewsCategory_name[25:54],
	"2":  _NewsCategory_name[54:88],
	"3":  _NewsCategory_name[88:115],
	"99": _NewsCategory_name[115:138],
}

func (i NewsCategory) String() string {
	if str, ok := _NewsCategory_map[i]; ok {
		return str
	}
	return "NewsCategory(" + i.String() + ")"
}

const _NewsRefType_name = "NewsRefType_REPLACEMENTNewsRefType_OTHER_LANGUAGENewsRefType_COMPLIMENTARY"

var _NewsRefType_map = map[NewsRefType]string{
	"0": _NewsRefType_name[0:23],
	"1": _NewsRefType_name[23:49],
	"2": _NewsRefType_name[49:74],
}

func (i NewsRefType) String() string {
	if str, ok := _NewsRefType_map[i]; ok {
		return str
	}
	return "NewsRefType(" + i.String() + ")"
}

const _NoSides_name = "NoSides_ONE_SIDENoSides_BOTH_SIDES"

var _NoSides_map = map[NoSides]string{
	"1": _NoSides_name[0:16],
	"2": _NoSides_name[16:34],
}

func (i NoSides) String() string {
	if str, ok := _NoSides_map[i]; ok {
		return str
	}
	return "NoSides(" + i.String() + ")"
}

const _NotifyBrokerOfCredit_name = "NotifyBrokerOfCredit_NONotifyBrokerOfCredit_YES"

var _NotifyBrokerOfCredit_map = map[NotifyBrokerOfCredit]string{
	"N": _NotifyBrokerOfCredit_name[0:23],
	"Y": _NotifyBrokerOfCredit_name[23:47],
}

func (i NotifyBrokerOfCredit) String() string {
	if str, ok := _NotifyBrokerOfCredit_map[i]; ok {
		return str
	}
	return "NotifyBrokerOfCredit(" + i.String() + ")"
}

const _OddLot_name = "OddLot_NOOddLot_YES"

var _OddLot_map = map[OddLot]string{
	"N": _OddLot_name[0:9],
	"Y": _OddLot_name[9:19],
}

func (i OddLot) String() string {
	if str, ok := _OddLot_map[i]; ok {
		return str
	}
	return "OddLot(" + i.String() + ")"
}

const _OpenClose_name = "OpenClose_CLOSEOpenClose_OPEN"

var _OpenClose_map = map[OpenClose]string{
	"C": _OpenClose_name[0:15],
	"O": _OpenClose_name[15:29],
}

func (i OpenClose) String() string {
	if str, ok := _OpenClose_map[i]; ok {
		return str
	}
	return "OpenClose(" + i.String() + ")"
}

const _OpenCloseSettlFlag_name = "OpenCloseSettlFlag_DAILY_OPENOpenCloseSettlFlag_SESSION_OPENOpenCloseSettlFlag_DELIVERY_SETTLEMENT_ENTRYOpenCloseSettlFlag_EXPECTED_ENTRYOpenCloseSettlFlag_ENTRY_FROM_PREVIOUS_BUSINESS_DAYOpenCloseSettlFlag_THEORETICAL_PRICE_VALUE"

var _OpenCloseSettlFlag_map = map[OpenCloseSettlFlag]string{
	"0": _OpenCloseSettlFlag_name[0:29],
	"1": _OpenCloseSettlFlag_name[29:60],
	"2": _OpenCloseSettlFlag_name[60:104],
	"3": _OpenCloseSettlFlag_name[104:137],
	"4": _OpenCloseSettlFlag_name[137:188],
	"5": _OpenCloseSettlFlag_name[188:230],
}

func (i OpenCloseSettlFlag) String() string {
	if str, ok := _OpenCloseSettlFlag_map[i]; ok {
		return str
	}
	return "OpenCloseSettlFlag(" + i.String() + ")"
}

const _OpenCloseSettleFlag_name = "OpenCloseSettleFlag_DAILY_OPENOpenCloseSettleFlag_SESSION_OPENOpenCloseSettleFlag_DELIVERY_SETTLEMENT_PRICEOpenCloseSettleFlag_EXPECTED_PRICEOpenCloseSettleFlag_PRICE_FROM_PREVIOUS_BUSINESS_DAY"

var _OpenCloseSettleFlag_map = map[OpenCloseSettleFlag]string{
	"0": _OpenCloseSettleFlag_name[0:30],
	"1": _OpenCloseSettleFlag_name[30:62],
	"2": _OpenCloseSettleFlag_name[62:107],
	"3": _OpenCloseSettleFlag_name[107:141],
	"4": _OpenCloseSettleFlag_name[141:193],
}

func (i OpenCloseSettleFlag) String() string {
	if str, ok := _OpenCloseSettleFlag_map[i]; ok {
		return str
	}
	return "OpenCloseSettleFlag(" + i.String() + ")"
}

const _OptPayoutType_name = "OptPayoutType_VANILLAOptPayoutType_CAPPEDOptPayoutType_BINARY"

var _OptPayoutType_map = map[OptPayoutType]string{
	"1": _OptPayoutType_name[0:21],
	"2": _OptPayoutType_name[21:41],
	"3": _OptPayoutType_name[41:61],
}

func (i OptPayoutType) String() string {
	if str, ok := _OptPayoutType_map[i]; ok {
		return str
	}
	return "OptPayoutType(" + i.String() + ")"
}

const _OrdRejReason_name = "OrdRejReason_BROKEROrdRejReason_UNKNOWN_SYMBOLOrdRejReason_INVALID_INVESTOR_IDOrdRejReason_UNSUPPORTED_ORDER_CHARACTERISTICOrdRejReason_SURVEILLENCE_OPTIONOrdRejReason_INCORRECT_QUANTITYOrdRejReason_INCORRECT_ALLOCATED_QUANTITYOrdRejReason_UNKNOWN_ACCOUNTOrdRejReason_PRICE_EXCEEDS_CURRENT_PRICE_BANDOrdRejReason_INVALID_PRICE_INCREMENTOrdRejReason_EXCHANGE_CLOSEDOrdRejReason_ORDER_EXCEEDS_LIMITOrdRejReason_TOO_LATE_TO_ENTEROrdRejReason_UNKNOWN_ORDEROrdRejReason_DUPLICATE_ORDEROrdRejReason_DUPLICATE_OF_A_VERBALLY_COMMUNICATED_ORDEROrdRejReason_STALE_ORDEROrdRejReason_TRADE_ALONG_REQUIREDOrdRejReason_OTHER"

var _OrdRejReason_map = map[OrdRejReason]string{
	"0":  _OrdRejReason_name[0:19],
	"1":  _OrdRejReason_name[19:46],
	"10": _OrdRejReason_name[46:78],
	"11": _OrdRejReason_name[78:123],
	"12": _OrdRejReason_name[123:155],
	"13": _OrdRejReason_name[155:186],
	"14": _OrdRejReason_name[186:227],
	"15": _OrdRejReason_name[227:255],
	"16": _OrdRejReason_name[255:300],
	"18": _OrdRejReason_name[300:336],
	"2":  _OrdRejReason_name[336:364],
	"3":  _OrdRejReason_name[364:396],
	"4":  _OrdRejReason_name[396:426],
	"5":  _OrdRejReason_name[426:452],
	"6":  _OrdRejReason_name[452:480],
	"7":  _OrdRejReason_name[480:535],
	"8":  _OrdRejReason_name[535:559],
	"9":  _OrdRejReason_name[559:592],
	"99": _OrdRejReason_name[592:610],
}

func (i OrdRejReason) String() string {
	if str, ok := _OrdRejReason_map[i]; ok {
		return str
	}
	return "OrdRejReason(" + i.String() + ")"
}

const _OrdStatus_name = "OrdStatus_NEWOrdStatus_PARTIALLY_FILLEDOrdStatus_FILLEDOrdStatus_DONE_FOR_DAYOrdStatus_CANCELEDOrdStatus_REPLACEDOrdStatus_PENDING_CANCELOrdStatus_STOPPEDOrdStatus_REJECTEDOrdStatus_SUSPENDEDOrdStatus_PENDING_NEWOrdStatus_CALCULATEDOrdStatus_EXPIREDOrdStatus_ACCEPTED_FOR_BIDDINGOrdStatus_PENDING_REPLACE"

var _OrdStatus_map = map[OrdStatus]string{
	"0": _OrdStatus_name[0:13],
	"1": _OrdStatus_name[13:39],
	"2": _OrdStatus_name[39:55],
	"3": _OrdStatus_name[55:77],
	"4": _OrdStatus_name[77:95],
	"5": _OrdStatus_name[95:113],
	"6": _OrdStatus_name[113:137],
	"7": _OrdStatus_name[137:154],
	"8": _OrdStatus_name[154:172],
	"9": _OrdStatus_name[172:191],
	"A": _OrdStatus_name[191:212],
	"B": _OrdStatus_name[212:232],
	"C": _OrdStatus_name[232:249],
	"D": _OrdStatus_name[249:279],
	"E": _OrdStatus_name[279:304],
}

func (i OrdStatus) String() string {
	if str, ok := _OrdStatus_map[i]; ok {
		return str
	}
	return "OrdStatus(" + i.String() + ")"
}

const _OrdType_name = "OrdType_MARKETOrdType_LIMITOrdType_STOPOrdType_STOP_LIMITOrdType_MARKET_ON_CLOSEOrdType_WITH_OR_WITHOUTOrdType_LIMIT_OR_BETTEROrdType_LIMIT_WITH_OR_WITHOUTOrdType_ON_BASISOrdType_ON_CLOSEOrdType_LIMIT_ON_CLOSEOrdType_FOREX_MARKETOrdType_PREVIOUSLY_QUOTEDOrdType_PREVIOUSLY_INDICATEDOrdType_FOREX_LIMITOrdType_FOREX_SWAPOrdType_FOREX_PREVIOUSLY_QUOTEDOrdType_FUNARIOrdType_MARKET_IF_TOUCHEDOrdType_MARKET_WITH_LEFT_OVER_AS_LIMITOrdType_PREVIOUS_FUND_VALUATION_POINTOrdType_NEXT_FUND_VALUATION_POINTOrdType_PEGGEDOrdType_COUNTER_ORDER_SELECTION"

var _OrdType_map = map[OrdType]string{
	"1": _OrdType_name[0:14],
	"2": _OrdType_name[14:27],
	"3": _OrdType_name[27:39],
	"4": _OrdType_name[39:57],
	"5": _OrdType_name[57:80],
	"6": _OrdType_name[80:103],
	"7": _OrdType_name[103:126],
	"8": _OrdType_name[126:155],
	"9": _OrdType_name[155:171],
	"A": _OrdType_name[171:187],
	"B": _OrdType_name[187:209],
	"C": _OrdType_name[209:229],
	"D": _OrdType_name[229:254],
	"E": _OrdType_name[254:282],
	"F": _OrdType_name[282:301],
	"G": _OrdType_name[301:319],
	"H": _OrdType_name[319:350],
	"I": _OrdType_name[350:364],
	"J": _OrdType_name[364:389],
	"K": _OrdType_name[389:427],
	"L": _OrdType_name[427:464],
	"M": _OrdType_name[464:497],
	"P": _OrdType_name[497:511],
	"Q": _OrdType_name[511:542],
}

func (i OrdType) String() string {
	if str, ok := _OrdType_map[i]; ok {
		return str
	}
	return "OrdType(" + i.String() + ")"
}

const _OrderCapacity_name = "OrderCapacity_AGENCYOrderCapacity_PROPRIETARYOrderCapacity_INDIVIDUALOrderCapacity_PRINCIPALOrderCapacity_RISKLESS_PRINCIPALOrderCapacity_AGENT_FOR_OTHER_MEMBER"

var _OrderCapacity_map = map[OrderCapacity]string{
	"A": _OrderCapacity_name[0:20],
	"G": _OrderCapacity_name[20:45],
	"I": _OrderCapacity_name[45:69],
	"P": _OrderCapacity_name[69:92],
	"R": _OrderCapacity_name[92:124],
	"W": _OrderCapacity_name[124:160],
}

func (i OrderCapacity) String() string {
	if str, ok := _OrderCapacity_map[i]; ok {
		return str
	}
	return "OrderCapacity(" + i.String() + ")"
}

const _OrderCategory_name = "OrderCategory_ORDEROrderCategory_QUOTEOrderCategory_PRIVATELY_NEGOTIATED_TRADEOrderCategory_MULTILEG_ORDEROrderCategory_LINKED_ORDEROrderCategory_QUOTE_REQUESTOrderCategory_IMPLIED_ORDEROrderCategory_CROSS_ORDEROrderCategory_STREAMING_PRICE"

var _OrderCategory_map = map[OrderCategory]string{
	"1": _OrderCategory_name[0:19],
	"2": _OrderCategory_name[19:38],
	"3": _OrderCategory_name[38:78],
	"4": _OrderCategory_name[78:106],
	"5": _OrderCategory_name[106:132],
	"6": _OrderCategory_name[132:159],
	"7": _OrderCategory_name[159:186],
	"8": _OrderCategory_name[186:211],
	"9": _OrderCategory_name[211:240],
}

func (i OrderCategory) String() string {
	if str, ok := _OrderCategory_map[i]; ok {
		return str
	}
	return "OrderCategory(" + i.String() + ")"
}

const _OrderDelayUnit_name = "OrderDelayUnit_SECONDSOrderDelayUnit_TENTHS_OF_A_SECONDOrderDelayUnit_MINUTESOrderDelayUnit_HOURSOrderDelayUnit_DAYSOrderDelayUnit_WEEKSOrderDelayUnit_MONTHSOrderDelayUnit_YEARSOrderDelayUnit_HUNDREDTHS_OF_A_SECONDOrderDelayUnit_MILLISECONDSOrderDelayUnit_MICROSECONDSOrderDelayUnit_NANOSECONDS"

var _OrderDelayUnit_map = map[OrderDelayUnit]string{
	"0":  _OrderDelayUnit_name[0:22],
	"1":  _OrderDelayUnit_name[22:55],
	"10": _OrderDelayUnit_name[55:77],
	"11": _OrderDelayUnit_name[77:97],
	"12": _OrderDelayUnit_name[97:116],
	"13": _OrderDelayUnit_name[116:136],
	"14": _OrderDelayUnit_name[136:157],
	"15": _OrderDelayUnit_name[157:177],
	"2":  _OrderDelayUnit_name[177:214],
	"3":  _OrderDelayUnit_name[214:241],
	"4":  _OrderDelayUnit_name[241:268],
	"5":  _OrderDelayUnit_name[268:294],
}

func (i OrderDelayUnit) String() string {
	if str, ok := _OrderDelayUnit_map[i]; ok {
		return str
	}
	return "OrderDelayUnit(" + i.String() + ")"
}

const _OrderHandlingInstSource_name = "OrderHandlingInstSource_NASD_OATS"

var _OrderHandlingInstSource_map = map[OrderHandlingInstSource]string{
	"1": _OrderHandlingInstSource_name[0:33],
}

func (i OrderHandlingInstSource) String() string {
	if str, ok := _OrderHandlingInstSource_map[i]; ok {
		return str
	}
	return "OrderHandlingInstSource(" + i.String() + ")"
}

const _OrderRestrictions_name = "OrderRestrictions_PROGRAM_TRADEOrderRestrictions_INDEX_ARBITRAGEOrderRestrictions_NON_INDEX_ARBITRAGEOrderRestrictions_COMPETING_MARKET_MAKEROrderRestrictions_ACTING_AS_MARKET_MAKER_OR_SPECIALIST_IN_THE_SECURITYOrderRestrictions_ACTING_AS_MARKET_MAKER_OR_SPECIALIST_IN_THE_UNDERLYING_SECURITY_OF_A_DERIVATIVE_SECURITYOrderRestrictions_FOREIGN_ENTITYOrderRestrictions_EXTERNAL_MARKET_PARTICIPANTOrderRestrictions_EXTERNAL_INTER_CONNECTED_MARKET_LINKAGEOrderRestrictions_RISKLESS_ARBITRAGEOrderRestrictions_ISSUER_HOLDINGOrderRestrictions_ISSUE_PRICE_STABILIZATIONOrderRestrictions_NON_ALGORITHMICOrderRestrictions_ALGORITHMICOrderRestrictions_CROSS"

var _OrderRestrictions_map = map[OrderRestrictions]string{
	"1": _OrderRestrictions_name[0:31],
	"2": _OrderRestrictions_name[31:64],
	"3": _OrderRestrictions_name[64:101],
	"4": _OrderRestrictions_name[101:141],
	"5": _OrderRestrictions_name[141:211],
	"6": _OrderRestrictions_name[211:317],
	"7": _OrderRestrictions_name[317:349],
	"8": _OrderRestrictions_name[349:394],
	"9": _OrderRestrictions_name[394:451],
	"A": _OrderRestrictions_name[451:487],
	"B": _OrderRestrictions_name[487:519],
	"C": _OrderRestrictions_name[519:562],
	"D": _OrderRestrictions_name[562:595],
	"E": _OrderRestrictions_name[595:624],
	"F": _OrderRestrictions_name[624:647],
}

func (i OrderRestrictions) String() string {
	if str, ok := _OrderRestrictions_map[i]; ok {
		return str
	}
	return "OrderRestrictions(" + i.String() + ")"
}

const _OrigCustOrderCapacity_name = "OrigCustOrderCapacity_MEMBER_TRADING_FOR_THEIR_OWN_ACCOUNTOrigCustOrderCapacity_CLEARING_FIRM_TRADING_FOR_ITS_PROPRIETARY_ACCOUNTOrigCustOrderCapacity_MEMBER_TRADING_FOR_ANOTHER_MEMBEROrigCustOrderCapacity_ALL_OTHER"

var _OrigCustOrderCapacity_map = map[OrigCustOrderCapacity]string{
	"1": _OrigCustOrderCapacity_name[0:58],
	"2": _OrigCustOrderCapacity_name[58:129],
	"3": _OrigCustOrderCapacity_name[129:184],
	"4": _OrigCustOrderCapacity_name[184:215],
}

func (i OrigCustOrderCapacity) String() string {
	if str, ok := _OrigCustOrderCapacity_map[i]; ok {
		return str
	}
	return "OrigCustOrderCapacity(" + i.String() + ")"
}

const _OwnerType_name = "OwnerType_INDIVIDUAL_INVESTOROwnerType_NETWORKING_SUB_ACCOUNTOwnerType_NON_PROFIT_ORGANIZATIONOwnerType_CORPORATE_BODYOwnerType_NOMINEEOwnerType_PUBLIC_COMPANYOwnerType_PRIVATE_COMPANYOwnerType_INDIVIDUAL_TRUSTEEOwnerType_COMPANY_TRUSTEEOwnerType_PENSION_PLANOwnerType_CUSTODIAN_UNDER_GIFTS_TO_MINORS_ACTOwnerType_TRUSTSOwnerType_FIDUCIARIES"

var _OwnerType_map = map[OwnerType]string{
	"1":  _OwnerType_name[0:29],
	"10": _OwnerType_name[29:61],
	"11": _OwnerType_name[61:94],
	"12": _OwnerType_name[94:118],
	"13": _OwnerType_name[118:135],
	"2":  _OwnerType_name[135:159],
	"3":  _OwnerType_name[159:184],
	"4":  _OwnerType_name[184:212],
	"5":  _OwnerType_name[212:237],
	"6":  _OwnerType_name[237:259],
	"7":  _OwnerType_name[259:304],
	"8":  _OwnerType_name[304:320],
	"9":  _OwnerType_name[320:341],
}

func (i OwnerType) String() string {
	if str, ok := _OwnerType_map[i]; ok {
		return str
	}
	return "OwnerType(" + i.String() + ")"
}

const _OwnershipType_name = "OwnershipType_JOINT_TRUSTEESOwnershipType_JOINT_INVESTORSOwnershipType_TENANTS_IN_COMMON"

var _OwnershipType_map = map[OwnershipType]string{
	"2": _OwnershipType_name[0:28],
	"J": _OwnershipType_name[28:57],
	"T": _OwnershipType_name[57:88],
}

func (i OwnershipType) String() string {
	if str, ok := _OwnershipType_map[i]; ok {
		return str
	}
	return "OwnershipType(" + i.String() + ")"
}

const _PartyDetailsRequestResult_name = "PartyDetailsRequestResult_VALID_REQUESTPartyDetailsRequestResult_INVALID_OR_UNSUPPORTED_REQUESTPartyDetailsRequestResult_NO_PARTIES_OR_PARTY_DETAILS_FOUND_THAT_MATCH_SELECTION_CRITERIAPartyDetailsRequestResult_UNSUPPORTED_PARTYLISTRESPONSETYPEPartyDetailsRequestResult_NOT_AUTHORIZED_TO_RETRIEVE_PARTIES_OR_PARTY_DETAILS_DATAPartyDetailsRequestResult_PARTIES_OR_PARTY_DETAILS_DATA_TEMPORARILY_UNAVAILABLEPartyDetailsRequestResult_REQUEST_FOR_PARTIES_DATA_NOT_SUPPORTEDPartyDetailsRequestResult_OTHER"

var _PartyDetailsRequestResult_map = map[PartyDetailsRequestResult]string{
	"0":  _PartyDetailsRequestResult_name[0:39],
	"1":  _PartyDetailsRequestResult_name[39:95],
	"2":  _PartyDetailsRequestResult_name[95:184],
	"3":  _PartyDetailsRequestResult_name[184:243],
	"4":  _PartyDetailsRequestResult_name[243:325],
	"5":  _PartyDetailsRequestResult_name[325:404],
	"6":  _PartyDetailsRequestResult_name[404:468],
	"99": _PartyDetailsRequestResult_name[468:499],
}

func (i PartyDetailsRequestResult) String() string {
	if str, ok := _PartyDetailsRequestResult_map[i]; ok {
		return str
	}
	return "PartyDetailsRequestResult(" + i.String() + ")"
}

const _PartyIDSource_name = "PartyIDSource_KOREAN_INVESTOR_IDPartyIDSource_TAIWANESE_QUALIFIED_FOREIGN_INVESTOR_ID_QFII_FIDPartyIDSource_TAIWANESE_TRADING_ACCTPartyIDSource_MALAYSIAN_CENTRAL_DEPOSITORYPartyIDSource_CHINESE_INVESTOR_IDPartyIDSource_UK_NATIONAL_INSURANCE_OR_PENSION_NUMBERPartyIDSource_US_SOCIAL_SECURITY_NUMBERPartyIDSource_US_EMPLOYER_OR_TAX_ID_NUMBERPartyIDSource_AUSTRALIAN_BUSINESS_NUMBERPartyIDSource_AUSTRALIAN_TAX_FILE_NUMBERPartyIDSource_BICPartyIDSource_GENERALLY_ACCEPTED_MARKET_PARTICIPANT_IDENTIFIERPartyIDSource_PROPRIETARYPartyIDSource_ISO_COUNTRY_CODEPartyIDSource_SETTLEMENT_ENTITY_LOCATIONPartyIDSource_MICPartyIDSource_CSD_PARTICIPANT_MEMBER_CODEPartyIDSource_DIRECTED_BROKER_THREE_CHARACTER_ACRONYM_AS_DEFINED_IN_ISITC_ETC_BEST_PRACTICE_GUIDELINES_DOCUMENT"

var _PartyIDSource_map = map[PartyIDSource]string{
	"1": _PartyIDSource_name[0:32],
	"2": _PartyIDSource_name[32:94],
	"3": _PartyIDSource_name[94:130],
	"4": _PartyIDSource_name[130:172],
	"5": _PartyIDSource_name[172:205],
	"6": _PartyIDSource_name[205:258],
	"7": _PartyIDSource_name[258:297],
	"8": _PartyIDSource_name[297:339],
	"9": _PartyIDSource_name[339:379],
	"A": _PartyIDSource_name[379:419],
	"B": _PartyIDSource_name[419:436],
	"C": _PartyIDSource_name[436:498],
	"D": _PartyIDSource_name[498:523],
	"E": _PartyIDSource_name[523:553],
	"F": _PartyIDSource_name[553:593],
	"G": _PartyIDSource_name[593:610],
	"H": _PartyIDSource_name[610:651],
	"I": _PartyIDSource_name[651:762],
}

func (i PartyIDSource) String() string {
	if str, ok := _PartyIDSource_map[i]; ok {
		return str
	}
	return "PartyIDSource(" + i.String() + ")"
}

const _PartyListResponseType_name = "PartyListResponseType_RETURN_ALL_AVAILABLE_INFORMATION_ON_PARTIES_AND_RELATED_PARTIESPartyListResponseType_RETURN_ONLY_PARTY_INFORMATIONPartyListResponseType_INCLUDE_INFORMATION_ON_RELATED_PARTIESPartyListResponseType_INCLUDE_RISK_LIMIT_INFORMATION"

var _PartyListResponseType_map = map[PartyListResponseType]string{
	"0": _PartyListResponseType_name[0:85],
	"1": _PartyListResponseType_name[85:136],
	"2": _PartyListResponseType_name[136:196],
	"3": _PartyListResponseType_name[196:248],
}

func (i PartyListResponseType) String() string {
	if str, ok := _PartyListResponseType_map[i]; ok {
		return str
	}
	return "PartyListResponseType(" + i.String() + ")"
}

const _PartyRelationship_name = "PartyRelationship_IS_ALSOPartyRelationship_CLEARS_FORPartyRelationship_HAS_MEMBERSPartyRelationship_PROVIDES_MARKETPLACE_FORPartyRelationship_PARTICIPANT_OF_MARKETPLACEPartyRelationship_CARRIES_POSITIONS_FORPartyRelationship_POSTS_TRADES_TOPartyRelationship_ENTERS_TRADES_FORPartyRelationship_ENTERS_TRADES_THROUGHPartyRelationship_PROVIDES_QUOTES_TOPartyRelationship_REQUESTS_QUOTES_FROMPartyRelationship_INVESTS_FORPartyRelationship_CLEARS_THROUGHPartyRelationship_INVESTS_THROUGHPartyRelationship_BROKERS_TRADES_FORPartyRelationship_BROKERS_TRADES_THROUGHPartyRelationship_PROVIDES_TRADING_SERVICES_FORPartyRelationship_USES_TRADING_SERVICES_OFPartyRelationship_APPROVES_OFPartyRelationship_APPROVED_BYPartyRelationship_PARENT_FIRM_FORPartyRelationship_SUBSIDIARY_OFPartyRelationship_REGULATORY_OWNER_OFPartyRelationship_TRADES_FORPartyRelationship_OWNED_BY_30PartyRelationship_CONTROLSPartyRelationship_IS_CONTROLLED_BYPartyRelationship_LEGALPartyRelationship_OWNED_BY_34PartyRelationship_BENEFICIAL_OWNER_OFPartyRelationship_OWNED_BY_36PartyRelationship_TRADES_THROUGHPartyRelationship_SPONSORSPartyRelationship_SPONSORED_THROUGHPartyRelationship_PROVIDES_GUARANTEE_FORPartyRelationship_IS_GUARANTEED_BYPartyRelationship_MEMBER_OF"

var _PartyRelationship_map = map[PartyRelationship]string{
	"0":  _PartyRelationship_name[0:25],
	"1":  _PartyRelationship_name[25:53],
	"10": _PartyRelationship_name[53:82],
	"11": _PartyRelationship_name[82:124],
	"12": _PartyRelationship_name[124:168],
	"13": _PartyRelationship_name[168:207],
	"14": _PartyRelationship_name[207:240],
	"15": _PartyRelationship_name[240:275],
	"16": _PartyRelationship_name[275:314],
	"17": _PartyRelationship_name[314:350],
	"18": _PartyRelationship_name[350:388],
	"19": _PartyRelationship_name[388:417],
	"2":  _PartyRelationship_name[417:449],
	"20": _PartyRelationship_name[449:482],
	"21": _PartyRelationship_name[482:518],
	"22": _PartyRelationship_name[518:558],
	"23": _PartyRelationship_name[558:605],
	"24": _PartyRelationship_name[605:647],
	"25": _PartyRelationship_name[647:676],
	"26": _PartyRelationship_name[676:705],
	"27": _PartyRelationship_name[705:738],
	"28": _PartyRelationship_name[738:769],
	"29": _PartyRelationship_name[769:806],
	"3":  _PartyRelationship_name[806:834],
	"30": _PartyRelationship_name[834:863],
	"31": _PartyRelationship_name[863:889],
	"32": _PartyRelationship_name[889:923],
	"33": _PartyRelationship_name[923:946],
	"34": _PartyRelationship_name[946:975],
	"35": _PartyRelationship_name[975:1012],
	"36": _PartyRelationship_name[1012:1041],
	"4":  _PartyRelationship_name[1041:1073],
	"5":  _PartyRelationship_name[1073:1099],
	"6":  _PartyRelationship_name[1099:1134],
	"7":  _PartyRelationship_name[1134:1174],
	"8":  _PartyRelationship_name[1174:1208],
	"9":  _PartyRelationship_name[1208:1235],
}

func (i PartyRelationship) String() string {
	if str, ok := _PartyRelationship_map[i]; ok {
		return str
	}
	return "PartyRelationship(" + i.String() + ")"
}

const _PartyRole_name = "PartyRole_EXECUTING_FIRMPartyRole_SETTLEMENT_LOCATIONPartyRole_ORDER_ORIGINATION_TRADERPartyRole_EXECUTING_TRADERPartyRole_ORDER_ORIGINATION_FIRMPartyRole_GIVEUP_CLEARING_FIRMPartyRole_CORRESPONDANT_CLEARING_FIRMPartyRole_EXECUTING_SYSTEMPartyRole_CONTRA_FIRMPartyRole_CONTRA_CLEARING_FIRMPartyRole_SPONSORING_FIRMPartyRole_BROKER_OF_CREDITPartyRole_UNDERLYING_CONTRA_FIRMPartyRole_CLEARING_ORGANIZATIONPartyRole_EXCHANGEPartyRole_CUSTOMER_ACCOUNTPartyRole_CORRESPONDENT_CLEARING_ORGANIZATIONPartyRole_CORRESPONDENT_BROKERPartyRole_BUYER_SELLERPartyRole_CUSTODIANPartyRole_INTERMEDIARYPartyRole_CLIENT_IDPartyRole_AGENTPartyRole_SUB_CUSTODIANPartyRole_BENEFICIARYPartyRole_INTERESTED_PARTYPartyRole_REGULATORY_BODYPartyRole_LIQUIDITY_PROVIDERPartyRole_ENTERING_TRADERPartyRole_CONTRA_TRADERPartyRole_POSITION_ACCOUNTPartyRole_CONTRA_INVESTOR_IDPartyRole_CLEARING_FIRMPartyRole_TRANSFER_TO_FIRMPartyRole_CONTRA_POSITION_ACCOUNTPartyRole_CONTRA_EXCHANGEPartyRole_INTERNAL_CARRY_ACCOUNTPartyRole_ORDER_ENTRY_OPERATOR_IDPartyRole_SECONDARY_ACCOUNT_NUMBERPartyRole_FOREIGN_FIRMPartyRole_THIRD_PARTY_ALLOCATION_FIRMPartyRole_CLAIMING_ACCOUNTPartyRole_ASSET_MANAGERPartyRole_INVESTOR_IDPartyRole_PLEDGOR_ACCOUNTPartyRole_PLEDGEE_ACCOUNTPartyRole_LARGE_TRADER_REPORTABLE_ACCOUNTPartyRole_TRADER_MNEMONICPartyRole_SENDER_LOCATIONPartyRole_SESSION_IDPartyRole_ACCEPTABLE_COUNTERPARTYPartyRole_UNACCEPTABLE_COUNTERPARTYPartyRole_ENTERING_UNITPartyRole_EXECUTING_UNITPartyRole_INTRODUCING_FIRMPartyRole_INTRODUCING_BROKERPartyRole_QUOTE_ORIGINATORPartyRole_REPORT_ORIGINATORPartyRole_SYSTEMATIC_INTERNALISERPartyRole_MULTILATERAL_TRADING_FACILITYPartyRole_REGULATED_MARKETPartyRole_MARKET_MAKERPartyRole_INVESTMENT_FIRMPartyRole_HOST_COMPETENT_AUTHORITYPartyRole_HOME_COMPETENT_AUTHORITYPartyRole_ENTERING_FIRMPartyRole_COMPETENT_AUTHORITY_OF_THE_MOST_RELEVANT_MARKET_IN_TERMS_OF_LIQUIDITYPartyRole_COMPETENT_AUTHORITY_OF_THE_TRANSACTIONPartyRole_REPORTING_INTERMEDIARYPartyRole_EXECUTION_VENUEPartyRole_MARKET_DATA_ENTRY_ORIGINATORPartyRole_LOCATION_IDPartyRole_DESK_IDPartyRole_MARKET_DATA_MARKETPartyRole_ALLOCATION_ENTITYPartyRole_PRIME_BROKER_PROVIDING_GENERAL_TRADE_SERVICESPartyRole_LOCATEPartyRole_STEP_OUT_FIRMPartyRole_BROKERCLEARINGIDPartyRole_CENTRAL_REGISTRATION_DEPOSITORYPartyRole_CLEARING_ACCOUNTPartyRole_ACCEPTABLE_SETTLING_COUNTERPARTYPartyRole_UNACCEPTABLE_SETTLING_COUNTERPARTYPartyRole_FUND_MANAGER_CLIENT_ID"

var _PartyRole_map = map[PartyRole]string{
	"1":  _PartyRole_name[0:24],
	"10": _PartyRole_name[24:53],
	"11": _PartyRole_name[53:87],
	"12": _PartyRole_name[87:113],
	"13": _PartyRole_name[113:145],
	"14": _PartyRole_name[145:175],
	"15": _PartyRole_name[175:212],
	"16": _PartyRole_name[212:238],
	"17": _PartyRole_name[238:259],
	"18": _PartyRole_name[259:289],
	"19": _PartyRole_name[289:314],
	"2":  _PartyRole_name[314:340],
	"20": _PartyRole_name[340:372],
	"21": _PartyRole_name[372:403],
	"22": _PartyRole_name[403:421],
	"24": _PartyRole_name[421:447],
	"25": _PartyRole_name[447:492],
	"26": _PartyRole_name[492:522],
	"27": _PartyRole_name[522:544],
	"28": _PartyRole_name[544:563],
	"29": _PartyRole_name[563:585],
	"3":  _PartyRole_name[585:604],
	"30": _PartyRole_name[604:619],
	"31": _PartyRole_name[619:642],
	"32": _PartyRole_name[642:663],
	"33": _PartyRole_name[663:689],
	"34": _PartyRole_name[689:714],
	"35": _PartyRole_name[714:742],
	"36": _PartyRole_name[742:767],
	"37": _PartyRole_name[767:790],
	"38": _PartyRole_name[790:816],
	"39": _PartyRole_name[816:844],
	"4":  _PartyRole_name[844:867],
	"40": _PartyRole_name[867:893],
	"41": _PartyRole_name[893:926],
	"42": _PartyRole_name[926:951],
	"43": _PartyRole_name[951:983],
	"44": _PartyRole_name[983:1016],
	"45": _PartyRole_name[1016:1050],
	"46": _PartyRole_name[1050:1072],
	"47": _PartyRole_name[1072:1109],
	"48": _PartyRole_name[1109:1135],
	"49": _PartyRole_name[1135:1158],
	"5":  _PartyRole_name[1158:1179],
	"50": _PartyRole_name[1179:1204],
	"51": _PartyRole_name[1204:1229],
	"52": _PartyRole_name[1229:1270],
	"53": _PartyRole_name[1270:1295],
	"54": _PartyRole_name[1295:1320],
	"55": _PartyRole_name[1320:1340],
	"56": _PartyRole_name[1340:1373],
	"57": _PartyRole_name[1373:1408],
	"58": _PartyRole_name[1408:1431],
	"59": _PartyRole_name[1431:1455],
	"6":  _PartyRole_name[1455:1481],
	"60": _PartyRole_name[1481:1509],
	"61": _PartyRole_name[1509:1535],
	"62": _PartyRole_name[1535:1562],
	"63": _PartyRole_name[1562:1595],
	"64": _PartyRole_name[1595:1634],
	"65": _PartyRole_name[1634:1660],
	"66": _PartyRole_name[1660:1682],
	"67": _PartyRole_name[1682:1707],
	"68": _PartyRole_name[1707:1741],
	"69": _PartyRole_name[1741:1775],
	"7":  _PartyRole_name[1775:1798],
	"70": _PartyRole_name[1798:1877],
	"71": _PartyRole_name[1877:1925],
	"72": _PartyRole_name[1925:1957],
	"73": _PartyRole_name[1957:1982],
	"74": _PartyRole_name[1982:2020],
	"75": _PartyRole_name[2020:2041],
	"76": _PartyRole_name[2041:2058],
	"77": _PartyRole_name[2058:2086],
	"78": _PartyRole_name[2086:2113],
	"79": _PartyRole_name[2113:2168],
	"8":  _PartyRole_name[2168:2184],
	"80": _PartyRole_name[2184:2207],
	"81": _PartyRole_name[2207:2233],
	"82": _PartyRole_name[2233:2274],
	"83": _PartyRole_name[2274:2300],
	"84": _PartyRole_name[2300:2342],
	"85": _PartyRole_name[2342:2386],
	"9":  _PartyRole_name[2386:2418],
}

func (i PartyRole) String() string {
	if str, ok := _PartyRole_map[i]; ok {
		return str
	}
	return "PartyRole(" + i.String() + ")"
}

const _PartySubIDType_name = "PartySubIDType_FIRMPartySubIDType_SECURITIES_ACCOUNT_NUMBERPartySubIDType_REGISTRATION_NUMBERPartySubIDType_REGISTERED_ADDRESS_12PartySubIDType_REGULATORY_STATUSPartySubIDType_REGISTRATION_NAMEPartySubIDType_CASH_ACCOUNT_NUMBERPartySubIDType_BICPartySubIDType_CSD_PARTICIPANT_MEMBER_CODEPartySubIDType_REGISTERED_ADDRESS_18PartySubIDType_FUND_ACCOUNT_NAMEPartySubIDType_PERSONPartySubIDType_TELEX_NUMBERPartySubIDType_FAX_NUMBERPartySubIDType_SECURITIES_ACCOUNT_NAMEPartySubIDType_CASH_ACCOUNT_NAMEPartySubIDType_DEPARTMENTPartySubIDType_LOCATION_DESKPartySubIDType_POSITION_ACCOUNT_TYPEPartySubIDType_SECURITY_LOCATE_IDPartySubIDType_MARKET_MAKERPartySubIDType_ELIGIBLE_COUNTERPARTYPartySubIDType_SYSTEMPartySubIDType_PROFESSIONAL_CLIENTPartySubIDType_LOCATIONPartySubIDType_EXECUTION_VENUEPartySubIDType_CURRENCY_DELIVERY_IDENTIFIERPartySubIDType_APPLICATIONPartySubIDType_RESERVEDANDAVAILABLEFORBILATERALLYAGREEDUPONUSERDEFINEDVALUESPartySubIDType_FULL_LEGAL_NAME_OF_FIRMPartySubIDType_POSTAL_ADDRESSPartySubIDType_PHONE_NUMBERPartySubIDType_EMAIL_ADDRESSPartySubIDType_CONTACT_NAME"

var _PartySubIDType_map = map[PartySubIDType]string{
	"1":    _PartySubIDType_name[0:19],
	"10":   _PartySubIDType_name[19:59],
	"11":   _PartySubIDType_name[59:93],
	"12":   _PartySubIDType_name[93:129],
	"13":   _PartySubIDType_name[129:161],
	"14":   _PartySubIDType_name[161:193],
	"15":   _PartySubIDType_name[193:227],
	"16":   _PartySubIDType_name[227:245],
	"17":   _PartySubIDType_name[245:287],
	"18":   _PartySubIDType_name[287:323],
	"19":   _PartySubIDType_name[323:355],
	"2":    _PartySubIDType_name[355:376],
	"20":   _PartySubIDType_name[376:403],
	"21":   _PartySubIDType_name[403:428],
	"22":   _PartySubIDType_name[428:466],
	"23":   _PartySubIDType_name[466:498],
	"24":   _PartySubIDType_name[498:523],
	"25":   _PartySubIDType_name[523:551],
	"26":   _PartySubIDType_name[551:587],
	"27":   _PartySubIDType_name[587:620],
	"28":   _PartySubIDType_name[620:647],
	"29":   _PartySubIDType_name[647:683],
	"3":    _PartySubIDType_name[683:704],
	"30":   _PartySubIDType_name[704:738],
	"31":   _PartySubIDType_name[738:761],
	"32":   _PartySubIDType_name[761:791],
	"33":   _PartySubIDType_name[791:834],
	"4":    _PartySubIDType_name[834:860],
	"4000": _PartySubIDType_name[860:936],
	"5":    _PartySubIDType_name[936:974],
	"6":    _PartySubIDType_name[974:1003],
	"7":    _PartySubIDType_name[1003:1030],
	"8":    _PartySubIDType_name[1030:1058],
	"9":    _PartySubIDType_name[1058:1085],
}

func (i PartySubIDType) String() string {
	if str, ok := _PartySubIDType_map[i]; ok {
		return str
	}
	return "PartySubIDType(" + i.String() + ")"
}

const _PaymentMethod_name = "PaymentMethod_CRESTPaymentMethod_DIRECT_CREDITPaymentMethod_CREDIT_CARDPaymentMethod_ACH_DEBITPaymentMethod_ACH_CREDITPaymentMethod_BPAYPaymentMethod_HIGH_VALUE_CLEARING_SYSTEMPaymentMethod_NSCCPaymentMethod_EUROCLEARPaymentMethod_CLEARSTREAMPaymentMethod_CHEQUEPaymentMethod_TELEGRAPHIC_TRANSFERPaymentMethod_FED_WIREPaymentMethod_DEBIT_CARDPaymentMethod_DIRECT_DEBIT"

var _PaymentMethod_map = map[PaymentMethod]string{
	"1":  _PaymentMethod_name[0:19],
	"10": _PaymentMethod_name[19:46],
	"11": _PaymentMethod_name[46:71],
	"12": _PaymentMethod_name[71:94],
	"13": _PaymentMethod_name[94:118],
	"14": _PaymentMethod_name[118:136],
	"15": _PaymentMethod_name[136:176],
	"2":  _PaymentMethod_name[176:194],
	"3":  _PaymentMethod_name[194:217],
	"4":  _PaymentMethod_name[217:242],
	"5":  _PaymentMethod_name[242:262],
	"6":  _PaymentMethod_name[262:296],
	"7":  _PaymentMethod_name[296:318],
	"8":  _PaymentMethod_name[318:342],
	"9":  _PaymentMethod_name[342:368],
}

func (i PaymentMethod) String() string {
	if str, ok := _PaymentMethod_map[i]; ok {
		return str
	}
	return "PaymentMethod(" + i.String() + ")"
}

const _PegLimitType_name = "PegLimitType_OR_BETTERPegLimitType_STRICTPegLimitType_OR_WORSE"

var _PegLimitType_map = map[PegLimitType]string{
	"0": _PegLimitType_name[0:22],
	"1": _PegLimitType_name[22:41],
	"2": _PegLimitType_name[41:62],
}

func (i PegLimitType) String() string {
	if str, ok := _PegLimitType_map[i]; ok {
		return str
	}
	return "PegLimitType(" + i.String() + ")"
}

const _PegMoveType_name = "PegMoveType_FLOATINGPegMoveType_FIXED"

var _PegMoveType_map = map[PegMoveType]string{
	"0": _PegMoveType_name[0:20],
	"1": _PegMoveType_name[20:37],
}

func (i PegMoveType) String() string {
	if str, ok := _PegMoveType_map[i]; ok {
		return str
	}
	return "PegMoveType(" + i.String() + ")"
}

const _PegOffsetType_name = "PegOffsetType_PRICEPegOffsetType_BASIS_POINTSPegOffsetType_TICKSPegOffsetType_PRICE_TIER"

var _PegOffsetType_map = map[PegOffsetType]string{
	"0": _PegOffsetType_name[0:19],
	"1": _PegOffsetType_name[19:45],
	"2": _PegOffsetType_name[45:64],
	"3": _PegOffsetType_name[64:88],
}

func (i PegOffsetType) String() string {
	if str, ok := _PegOffsetType_map[i]; ok {
		return str
	}
	return "PegOffsetType(" + i.String() + ")"
}

const _PegPriceType_name = "PegPriceType_LAST_PEGPegPriceType_MID_PRICE_PEGPegPriceType_OPENING_PEGPegPriceType_MARKET_PEGPegPriceType_PRIMARY_PEGPegPriceType_FIXED_PEG_TO_LOCAL_BEST_BID_OR_OFFER_AT_TIME_OF_ORDERPegPriceType_PEG_TO_VWAPPegPriceType_TRAILING_STOP_PEGPegPriceType_PEG_TO_LIMIT_PRICE"

var _PegPriceType_map = map[PegPriceType]string{
	"1": _PegPriceType_name[0:21],
	"2": _PegPriceType_name[21:47],
	"3": _PegPriceType_name[47:71],
	"4": _PegPriceType_name[71:94],
	"5": _PegPriceType_name[94:118],
	"6": _PegPriceType_name[118:184],
	"7": _PegPriceType_name[184:208],
	"8": _PegPriceType_name[208:238],
	"9": _PegPriceType_name[238:269],
}

func (i PegPriceType) String() string {
	if str, ok := _PegPriceType_map[i]; ok {
		return str
	}
	return "PegPriceType(" + i.String() + ")"
}

const _PegRoundDirection_name = "PegRoundDirection_MORE_AGGRESSIVEPegRoundDirection_MORE_PASSIVE"

var _PegRoundDirection_map = map[PegRoundDirection]string{
	"1": _PegRoundDirection_name[0:33],
	"2": _PegRoundDirection_name[33:63],
}

func (i PegRoundDirection) String() string {
	if str, ok := _PegRoundDirection_map[i]; ok {
		return str
	}
	return "PegRoundDirection(" + i.String() + ")"
}

const _PegScope_name = "PegScope_LOCALPegScope_NATIONALPegScope_GLOBALPegScope_NATIONAL_EXCLUDING_LOCAL"

var _PegScope_map = map[PegScope]string{
	"1": _PegScope_name[0:14],
	"2": _PegScope_name[14:31],
	"3": _PegScope_name[31:46],
	"4": _PegScope_name[46:79],
}

func (i PegScope) String() string {
	if str, ok := _PegScope_map[i]; ok {
		return str
	}
	return "PegScope(" + i.String() + ")"
}

const _PosAmtType_name = "PosAmtType_ACCRUED_COUPON_AMOUNTPosAmtType_TOTAL_BANKED_AMOUNTPosAmtType_CASH_AMOUNTPosAmtType_COLLATERALIZED_MARK_TO_MARKETPosAmtType_TOTAL_COLLATERALIZED_AMOUNTPosAmtType_COUPON_AMOUNTPosAmtType_CASH_RESIDUAL_AMOUNTPosAmtType_COMPENSATION_AMOUNTPosAmtType_FINAL_MARK_TO_MARKET_AMOUNTPosAmtType_INCREMENTAL_ACCRUED_COUPONPosAmtType_INCREMENTAL_COLLATERALIZED_MARK_TO_MARKETPosAmtType_INITIAL_TRADE_COUPON_AMOUNTPosAmtType_INCREMENTAL_MARK_TO_MARKET_AMOUNTPosAmtType_PREMIUM_AMOUNTPosAmtType_SETTLEMENT_VALUEPosAmtType_START_OF_DAY_MARK_TO_MARKET_AMOUNTPosAmtType_TRADE_VARIATION_AMOUNTPosAmtType_VALUE_ADJUSTED_AMOUNT"

var _PosAmtType_map = map[PosAmtType]string{
	"ACPN":  _PosAmtType_name[0:32],
	"BANK":  _PosAmtType_name[32:62],
	"CASH":  _PosAmtType_name[62:84],
	"CMTM":  _PosAmtType_name[84:124],
	"COLAT": _PosAmtType_name[124:162],
	"CPN":   _PosAmtType_name[162:186],
	"CRES":  _PosAmtType_name[186:217],
	"DLV":   _PosAmtType_name[217:247],
	"FMTM":  _PosAmtType_name[247:285],
	"IACPN": _PosAmtType_name[285:322],
	"ICMTM": _PosAmtType_name[322:374],
	"ICPN":  _PosAmtType_name[374:412],
	"IMTM":  _PosAmtType_name[412:456],
	"PREM":  _PosAmtType_name[456:481],
	"SETL":  _PosAmtType_name[481:508],
	"SMTM":  _PosAmtType_name[508:553],
	"TVAR":  _PosAmtType_name[553:586],
	"VADJ":  _PosAmtType_name[586:618],
}

func (i PosAmtType) String() string {
	if str, ok := _PosAmtType_map[i]; ok {
		return str
	}
	return "PosAmtType(" + i.String() + ")"
}

const _PosMaintAction_name = "PosMaintAction_NEWPosMaintAction_REPLACEPosMaintAction_CANCELPosMaintAction_REVERSE"

var _PosMaintAction_map = map[PosMaintAction]string{
	"1": _PosMaintAction_name[0:18],
	"2": _PosMaintAction_name[18:40],
	"3": _PosMaintAction_name[40:61],
	"4": _PosMaintAction_name[61:83],
}

func (i PosMaintAction) String() string {
	if str, ok := _PosMaintAction_map[i]; ok {
		return str
	}
	return "PosMaintAction(" + i.String() + ")"
}

const _PosMaintResult_name = "PosMaintResult_SUCCESSFUL_COMPLETIONPosMaintResult_REJECTEDPosMaintResult_OTHER"

var _PosMaintResult_map = map[PosMaintResult]string{
	"0":  _PosMaintResult_name[0:36],
	"1":  _PosMaintResult_name[36:59],
	"99": _PosMaintResult_name[59:79],
}

func (i PosMaintResult) String() string {
	if str, ok := _PosMaintResult_map[i]; ok {
		return str
	}
	return "PosMaintResult(" + i.String() + ")"
}

const _PosMaintStatus_name = "PosMaintStatus_ACCEPTEDPosMaintStatus_ACCEPTED_WITH_WARNINGSPosMaintStatus_REJECTEDPosMaintStatus_COMPLETEDPosMaintStatus_COMPLETED_WITH_WARNINGS"

var _PosMaintStatus_map = map[PosMaintStatus]string{
	"0": _PosMaintStatus_name[0:23],
	"1": _PosMaintStatus_name[23:60],
	"2": _PosMaintStatus_name[60:83],
	"3": _PosMaintStatus_name[83:107],
	"4": _PosMaintStatus_name[107:145],
}

func (i PosMaintStatus) String() string {
	if str, ok := _PosMaintStatus_map[i]; ok {
		return str
	}
	return "PosMaintStatus(" + i.String() + ")"
}

const _PosQtyStatus_name = "PosQtyStatus_SUBMITTEDPosQtyStatus_ACCEPTEDPosQtyStatus_REJECTED"

var _PosQtyStatus_map = map[PosQtyStatus]string{
	"0": _PosQtyStatus_name[0:22],
	"1": _PosQtyStatus_name[22:43],
	"2": _PosQtyStatus_name[43:64],
}

func (i PosQtyStatus) String() string {
	if str, ok := _PosQtyStatus_map[i]; ok {
		return str
	}
	return "PosQtyStatus(" + i.String() + ")"
}

const _PosReqResult_name = "PosReqResult_VALID_REQUESTPosReqResult_INVALID_OR_UNSUPPORTED_REQUESTPosReqResult_NO_POSITIONS_FOUND_THAT_MATCH_CRITERIAPosReqResult_NOT_AUTHORIZED_TO_REQUEST_POSITIONSPosReqResult_REQUEST_FOR_POSITION_NOT_SUPPORTEDPosReqResult_OTHER"

var _PosReqResult_map = map[PosReqResult]string{
	"0":  _PosReqResult_name[0:26],
	"1":  _PosReqResult_name[26:69],
	"2":  _PosReqResult_name[69:120],
	"3":  _PosReqResult_name[120:168],
	"4":  _PosReqResult_name[168:215],
	"99": _PosReqResult_name[215:233],
}

func (i PosReqResult) String() string {
	if str, ok := _PosReqResult_map[i]; ok {
		return str
	}
	return "PosReqResult(" + i.String() + ")"
}

const _PosReqStatus_name = "PosReqStatus_COMPLETEDPosReqStatus_COMPLETED_WITH_WARNINGSPosReqStatus_REJECTED"

var _PosReqStatus_map = map[PosReqStatus]string{
	"0": _PosReqStatus_name[0:22],
	"1": _PosReqStatus_name[22:58],
	"2": _PosReqStatus_name[58:79],
}

func (i PosReqStatus) String() string {
	if str, ok := _PosReqStatus_map[i]; ok {
		return str
	}
	return "PosReqStatus(" + i.String() + ")"
}

const _PosReqType_name = "PosReqType_POSITIONSPosReqType_TRADESPosReqType_EXERCISESPosReqType_ASSIGNMENTSPosReqType_SETTLEMENT_ACTIVITYPosReqType_BACKOUT_MESSAGEPosReqType_DELTA_POSITIONS"

var _PosReqType_map = map[PosReqType]string{
	"0": _PosReqType_name[0:20],
	"1": _PosReqType_name[20:37],
	"2": _PosReqType_name[37:57],
	"3": _PosReqType_name[57:79],
	"4": _PosReqType_name[79:109],
	"5": _PosReqType_name[109:135],
	"6": _PosReqType_name[135:161],
}

func (i PosReqType) String() string {
	if str, ok := _PosReqType_map[i]; ok {
		return str
	}
	return "PosReqType(" + i.String() + ")"
}

const _PosTransType_name = "PosTransType_EXERCISEPosTransType_DO_NOT_EXERCISEPosTransType_POSITION_ADJUSTMENTPosTransType_POSITION_CHANGE_SUBMISSION_MARGIN_DISPOSITIONPosTransType_PLEDGEPosTransType_LARGE_TRADER_SUBMISSION"

var _PosTransType_map = map[PosTransType]string{
	"1": _PosTransType_name[0:21],
	"2": _PosTransType_name[21:49],
	"3": _PosTransType_name[49:81],
	"4": _PosTransType_name[81:139],
	"5": _PosTransType_name[139:158],
	"6": _PosTransType_name[158:194],
}

func (i PosTransType) String() string {
	if str, ok := _PosTransType_map[i]; ok {
		return str
	}
	return "PosTransType(" + i.String() + ")"
}

const _PosType_name = "PosType_ALLOCATION_TRADE_QTYPosType_OPTION_ASSIGNMENTPosType_AS_OF_TRADE_QTYPosType_CORPORATE_ACTION_ADJUSTMENTPosType_CREDIT_EVENT_ADJUSTMENTPosType_NET_DELTA_QTYPosType_DELIVERY_QTYPosType_DELIVERY_NOTICE_QTYPosType_EXCHANGE_FOR_PHYSICAL_QTYPosType_ELECTRONIC_TRADE_QTYPosType_OPTION_EXERCISE_QTYPosType_END_OF_DAY_QTYPosType_INTRA_SPREAD_QTYPosType_INTER_SPREAD_QTYPosType_ADJUSTMENT_QTYPosType_PIT_TRADE_QTYPosType_PRIVATELY_NEGOTIATED_TRADE_QTYPosType_RECEIVE_QUANTITYPosType_SUCCESSION_EVENT_ADJUSTMENTPosType_START_OF_DAY_QTYPosType_INTEGRAL_SPLITPosType_TRANSACTION_FROM_ASSIGNMENTPosType_TOTAL_TRANSACTION_QTYPosType_TRANSACTION_QUANTITYPosType_TRANSFER_TRADE_QTYPosType_TRANSACTION_FROM_EXERCISEPosType_CROSS_MARGIN_QTY"

var _PosType_map = map[PosType]string{
	"ALC":  _PosType_name[0:28],
	"AS":   _PosType_name[28:53],
	"ASF":  _PosType_name[53:76],
	"CAA":  _PosType_name[76:111],
	"CEA":  _PosType_name[111:142],
	"DLT":  _PosType_name[142:163],
	"DLV":  _PosType_name[163:183],
	"DN":   _PosType_name[183:210],
	"EP":   _PosType_name[210:243],
	"ETR":  _PosType_name[243:271],
	"EX":   _PosType_name[271:298],
	"FIN":  _PosType_name[298:320],
	"IAS":  _PosType_name[320:344],
	"IES":  _PosType_name[344:368],
	"PA":   _PosType_name[368:390],
	"PIT":  _PosType_name[390:411],
	"PNTN": _PosType_name[411:449],
	"RCV":  _PosType_name[449:473],
	"SEA":  _PosType_name[473:508],
	"SOD":  _PosType_name[508:532],
	"SPL":  _PosType_name[532:554],
	"TA":   _PosType_name[554:589],
	"TOT":  _PosType_name[589:618],
	"TQ":   _PosType_name[618:646],
	"TRF":  _PosType_name[646:672],
	"TX":   _PosType_name[672:705],
	"XM":   _PosType_name[705:729],
}

func (i PosType) String() string {
	if str, ok := _PosType_map[i]; ok {
		return str
	}
	return "PosType(" + i.String() + ")"
}

const _PositionEffect_name = "PositionEffect_CLOSEPositionEffect_DEFAULTPositionEffect_FIFOPositionEffect_CLOSE_BUT_NOTIFY_ON_OPENPositionEffect_OPENPositionEffect_ROLLED"

var _PositionEffect_map = map[PositionEffect]string{
	"C": _PositionEffect_name[0:20],
	"D": _PositionEffect_name[20:42],
	"F": _PositionEffect_name[42:61],
	"N": _PositionEffect_name[61:100],
	"O": _PositionEffect_name[100:119],
	"R": _PositionEffect_name[119:140],
}

func (i PositionEffect) String() string {
	if str, ok := _PositionEffect_map[i]; ok {
		return str
	}
	return "PositionEffect(" + i.String() + ")"
}

const _PossDupFlag_name = "PossDupFlag_NOPossDupFlag_YES"

var _PossDupFlag_map = map[PossDupFlag]string{
	"N": _PossDupFlag_name[0:14],
	"Y": _PossDupFlag_name[14:29],
}

func (i PossDupFlag) String() string {
	if str, ok := _PossDupFlag_map[i]; ok {
		return str
	}
	return "PossDupFlag(" + i.String() + ")"
}

const _PossResend_name = "PossResend_NOPossResend_YES"

var _PossResend_map = map[PossResend]string{
	"N": _PossResend_name[0:13],
	"Y": _PossResend_name[13:27],
}

func (i PossResend) String() string {
	if str, ok := _PossResend_map[i]; ok {
		return str
	}
	return "PossResend(" + i.String() + ")"
}

const _PreallocMethod_name = "PreallocMethod_PRO_RATAPreallocMethod_DO_NOT_PRO_RATA"

var _PreallocMethod_map = map[PreallocMethod]string{
	"0": _PreallocMethod_name[0:23],
	"1": _PreallocMethod_name[23:53],
}

func (i PreallocMethod) String() string {
	if str, ok := _PreallocMethod_map[i]; ok {
		return str
	}
	return "PreallocMethod(" + i.String() + ")"
}

const _PreviouslyReported_name = "PreviouslyReported_NOPreviouslyReported_YES"

var _PreviouslyReported_map = map[PreviouslyReported]string{
	"N": _PreviouslyReported_name[0:21],
	"Y": _PreviouslyReported_name[21:43],
}

func (i PreviouslyReported) String() string {
	if str, ok := _PreviouslyReported_map[i]; ok {
		return str
	}
	return "PreviouslyReported(" + i.String() + ")"
}

const _PriceLimitType_name = "PriceLimitType_PRICEPriceLimitType_TICKSPriceLimitType_PERCENTAGE"

var _PriceLimitType_map = map[PriceLimitType]string{
	"0": _PriceLimitType_name[0:20],
	"1": _PriceLimitType_name[20:40],
	"2": _PriceLimitType_name[40:65],
}

func (i PriceLimitType) String() string {
	if str, ok := _PriceLimitType_map[i]; ok {
		return str
	}
	return "PriceLimitType(" + i.String() + ")"
}

const _PriceProtectionScope_name = "PriceProtectionScope_NONEPriceProtectionScope_LOCALPriceProtectionScope_NATIONALPriceProtectionScope_GLOBAL"

var _PriceProtectionScope_map = map[PriceProtectionScope]string{
	"0": _PriceProtectionScope_name[0:25],
	"1": _PriceProtectionScope_name[25:51],
	"2": _PriceProtectionScope_name[51:80],
	"3": _PriceProtectionScope_name[80:107],
}

func (i PriceProtectionScope) String() string {
	if str, ok := _PriceProtectionScope_map[i]; ok {
		return str
	}
	return "PriceProtectionScope(" + i.String() + ")"
}

const _PriceQuoteMethod_name = "PriceQuoteMethod_INTEREST_RATE_INDEXPriceQuoteMethod_INDEXPriceQuoteMethod_PERCENT_OF_PARPriceQuoteMethod_STANDARD"

var _PriceQuoteMethod_map = map[PriceQuoteMethod]string{
	"INT":    _PriceQuoteMethod_name[0:36],
	"INX":    _PriceQuoteMethod_name[36:58],
	"PCTPAR": _PriceQuoteMethod_name[58:89],
	"STD":    _PriceQuoteMethod_name[89:114],
}

func (i PriceQuoteMethod) String() string {
	if str, ok := _PriceQuoteMethod_map[i]; ok {
		return str
	}
	return "PriceQuoteMethod(" + i.String() + ")"
}

const _PriceType_name = "PriceType_PERCENTAGEPriceType_FIXED_CABINET_TRADE_PRICEPriceType_VARIABLE_CABINET_TRADE_PRICEPriceType_PRODUCT_TICKS_IN_HALFSPriceType_PRODUCT_TICKS_IN_FOURTHSPriceType_PRODUCT_TICKS_IN_EIGHTSPriceType_PRODUCT_TICKS_IN_SIXTEENTHSPriceType_PRODUCT_TICKS_IN_THIRTY_SECONDSPriceType_PRODUCT_TICKS_IN_SIXTY_FORTHSPriceType_PRODUCT_TICKS_IN_ONE_TWENTY_EIGHTSPriceType_PER_UNITPriceType_FIXED_AMOUNTPriceType_DISCOUNTPriceType_PREMIUMPriceType_SPREADPriceType_TED_PRICEPriceType_TED_YIELDPriceType_YIELD"

var _PriceType_map = map[PriceType]string{
	"1":  _PriceType_name[0:20],
	"10": _PriceType_name[20:55],
	"11": _PriceType_name[55:93],
	"13": _PriceType_name[93:125],
	"14": _PriceType_name[125:159],
	"15": _PriceType_name[159:192],
	"16": _PriceType_name[192:229],
	"17": _PriceType_name[229:270],
	"18": _PriceType_name[270:309],
	"19": _PriceType_name[309:353],
	"2":  _PriceType_name[353:371],
	"3":  _PriceType_name[371:393],
	"4":  _PriceType_name[393:411],
	"5":  _PriceType_name[411:428],
	"6":  _PriceType_name[428:444],
	"7":  _PriceType_name[444:463],
	"8":  _PriceType_name[463:482],
	"9":  _PriceType_name[482:497],
}

func (i PriceType) String() string {
	if str, ok := _PriceType_map[i]; ok {
		return str
	}
	return "PriceType(" + i.String() + ")"
}

const _PriorityIndicator_name = "PriorityIndicator_PRIORITY_UNCHANGEDPriorityIndicator_LOST_PRIORITY_AS_RESULT_OF_ORDER_CHANGE"

var _PriorityIndicator_map = map[PriorityIndicator]string{
	"0": _PriorityIndicator_name[0:36],
	"1": _PriorityIndicator_name[36:93],
}

func (i PriorityIndicator) String() string {
	if str, ok := _PriorityIndicator_map[i]; ok {
		return str
	}
	return "PriorityIndicator(" + i.String() + ")"
}

const _ProcessCode_name = "ProcessCode_REGULARProcessCode_SOFT_DOLLARProcessCode_STEP_INProcessCode_STEP_OUTProcessCode_SOFT_DOLLAR_STEP_INProcessCode_SOFT_DOLLAR_STEP_OUTProcessCode_PLAN_SPONSOR"

var _ProcessCode_map = map[ProcessCode]string{
	"0": _ProcessCode_name[0:19],
	"1": _ProcessCode_name[19:42],
	"2": _ProcessCode_name[42:61],
	"3": _ProcessCode_name[61:81],
	"4": _ProcessCode_name[81:112],
	"5": _ProcessCode_name[112:144],
	"6": _ProcessCode_name[144:168],
}

func (i ProcessCode) String() string {
	if str, ok := _ProcessCode_map[i]; ok {
		return str
	}
	return "ProcessCode(" + i.String() + ")"
}

const _Product_name = "Product_AGENCYProduct_MORTGAGEProduct_MUNICIPALProduct_OTHERProduct_FINANCINGProduct_COMMODITYProduct_CORPORATEProduct_CURRENCYProduct_EQUITYProduct_GOVERNMENTProduct_INDEXProduct_LOANProduct_MONEYMARKET"

var _Product_map = map[Product]string{
	"1":  _Product_name[0:14],
	"10": _Product_name[14:30],
	"11": _Product_name[30:47],
	"12": _Product_name[47:60],
	"13": _Product_name[60:77],
	"2":  _Product_name[77:94],
	"3":  _Product_name[94:111],
	"4":  _Product_name[111:127],
	"5":  _Product_name[127:141],
	"6":  _Product_name[141:159],
	"7":  _Product_name[159:172],
	"8":  _Product_name[172:184],
	"9":  _Product_name[184:203],
}

func (i Product) String() string {
	if str, ok := _Product_map[i]; ok {
		return str
	}
	return "Product(" + i.String() + ")"
}

const _ProgRptReqs_name = "ProgRptReqs_BUY_SIDE_EXPLICITLY_REQUESTS_STATUS_USING_STATUE_REQUESTProgRptReqs_SELL_SIDE_PERIODICALLY_SENDS_STATUS_USING_LIST_STATUS_PERIOD_OPTIONALLY_SPECIFIED_IN_PROGRESSPERIODProgRptReqs_REAL_TIME_EXECUTION_REPORTS"

var _ProgRptReqs_map = map[ProgRptReqs]string{
	"1": _ProgRptReqs_name[0:68],
	"2": _ProgRptReqs_name[68:179],
	"3": _ProgRptReqs_name[179:218],
}

func (i ProgRptReqs) String() string {
	if str, ok := _ProgRptReqs_map[i]; ok {
		return str
	}
	return "ProgRptReqs(" + i.String() + ")"
}

const _PublishTrdIndicator_name = "PublishTrdIndicator_NOPublishTrdIndicator_YES"

var _PublishTrdIndicator_map = map[PublishTrdIndicator]string{
	"N": _PublishTrdIndicator_name[0:22],
	"Y": _PublishTrdIndicator_name[22:45],
}

func (i PublishTrdIndicator) String() string {
	if str, ok := _PublishTrdIndicator_map[i]; ok {
		return str
	}
	return "PublishTrdIndicator(" + i.String() + ")"
}

const _PutOrCall_name = "PutOrCall_PUTPutOrCall_CALL"

var _PutOrCall_map = map[PutOrCall]string{
	"0": _PutOrCall_name[0:13],
	"1": _PutOrCall_name[13:27],
}

func (i PutOrCall) String() string {
	if str, ok := _PutOrCall_map[i]; ok {
		return str
	}
	return "PutOrCall(" + i.String() + ")"
}

const _QtyType_name = "QtyType_UNITSQtyType_CONTRACTSQtyType_UNITS_OF_MEASURE_PER_TIME_UNIT"

var _QtyType_map = map[QtyType]string{
	"0": _QtyType_name[0:13],
	"1": _QtyType_name[13:30],
	"2": _QtyType_name[30:68],
}

func (i QtyType) String() string {
	if str, ok := _QtyType_map[i]; ok {
		return str
	}
	return "QtyType(" + i.String() + ")"
}

const _QuantityType_name = "QuantityType_SHARESQuantityType_BONDSQuantityType_CURRENTFACEQuantityType_ORIGINALFACEQuantityType_CURRENCYQuantityType_CONTRACTSQuantityType_OTHERQuantityType_PAR"

var _QuantityType_map = map[QuantityType]string{
	"1": _QuantityType_name[0:19],
	"2": _QuantityType_name[19:37],
	"3": _QuantityType_name[37:61],
	"4": _QuantityType_name[61:86],
	"5": _QuantityType_name[86:107],
	"6": _QuantityType_name[107:129],
	"7": _QuantityType_name[129:147],
	"8": _QuantityType_name[147:163],
}

func (i QuantityType) String() string {
	if str, ok := _QuantityType_map[i]; ok {
		return str
	}
	return "QuantityType(" + i.String() + ")"
}

const _QuoteAckStatus_name = "QuoteAckStatus_ACCEPTEDQuoteAckStatus_CANCELED_FOR_SYMBOLQuoteAckStatus_CANCELED_FOR_SECURITY_TYPEQuoteAckStatus_CANCELED_FOR_UNDERLYINGQuoteAckStatus_CANCELED_ALLQuoteAckStatus_REJECTED"

var _QuoteAckStatus_map = map[QuoteAckStatus]string{
	"0": _QuoteAckStatus_name[0:23],
	"1": _QuoteAckStatus_name[23:57],
	"2": _QuoteAckStatus_name[57:98],
	"3": _QuoteAckStatus_name[98:136],
	"4": _QuoteAckStatus_name[136:163],
	"5": _QuoteAckStatus_name[163:186],
}

func (i QuoteAckStatus) String() string {
	if str, ok := _QuoteAckStatus_map[i]; ok {
		return str
	}
	return "QuoteAckStatus(" + i.String() + ")"
}

const _QuoteCancelType_name = "QuoteCancelType_CANCEL_FOR_ONE_OR_MORE_SECURITIESQuoteCancelType_CANCEL_FOR_SECURITY_TYPEQuoteCancelType_CANCEL_FOR_UNDERLYING_SECURITYQuoteCancelType_CANCEL_ALL_QUOTESQuoteCancelType_CANCEL_QUOTE_SPECIFIED_IN_QUOTEIDQuoteCancelType_CANCEL_BY_QUOTETYPEQuoteCancelType_CANCEL_FOR_SECURITY_ISSUERQuoteCancelType_CANCEL_FOR_ISSUER_OF_UNDERLYING_SECURITY"

var _QuoteCancelType_map = map[QuoteCancelType]string{
	"1": _QuoteCancelType_name[0:49],
	"2": _QuoteCancelType_name[49:89],
	"3": _QuoteCancelType_name[89:135],
	"4": _QuoteCancelType_name[135:168],
	"5": _QuoteCancelType_name[168:217],
	"6": _QuoteCancelType_name[217:252],
	"7": _QuoteCancelType_name[252:294],
	"8": _QuoteCancelType_name[294:350],
}

func (i QuoteCancelType) String() string {
	if str, ok := _QuoteCancelType_map[i]; ok {
		return str
	}
	return "QuoteCancelType(" + i.String() + ")"
}

const _QuoteCondition_name = "QuoteCondition_RESERVED_SAMQuoteCondition_NO_ACTIVE_SAMQuoteCondition_RESTRICTEDQuoteCondition_REST_OF_BOOK_VWAPQuoteCondition_BETTER_PRICES_IN_CONDITIONAL_ORDERSQuoteCondition_MEDIAN_PRICEQuoteCondition_FULL_CURVEQuoteCondition_FLAT_CURVEQuoteCondition_OPEN_ACTIVEQuoteCondition_CLOSED_INACTIVEQuoteCondition_EXCHANGE_BESTQuoteCondition_CONSOLIDATED_BESTQuoteCondition_LOCKEDQuoteCondition_CROSSEDQuoteCondition_DEPTHQuoteCondition_FAST_TRADINGQuoteCondition_NON_FIRMQuoteCondition_OUTRIGHT_PRICEQuoteCondition_IMPLIED_PRICEQuoteCondition_MANUAL_SLOW_QUOTEQuoteCondition_DEPTH_ON_OFFERQuoteCondition_DEPTH_ON_BIDQuoteCondition_CLOSINGQuoteCondition_NEWS_DISSEMINATIONQuoteCondition_TRADING_RANGEQuoteCondition_ORDER_INFLUXQuoteCondition_DUE_TO_RELATEDQuoteCondition_NEWS_PENDINGQuoteCondition_ADDITIONAL_INFOQuoteCondition_ADDITIONAL_INFO_DUE_TO_RELATEDQuoteCondition_RESUMEQuoteCondition_VIEW_OF_COMMONQuoteCondition_VOLUME_ALERTQuoteCondition_ORDER_IMBALANCEQuoteCondition_EQUIPMENT_CHANGEOVERQuoteCondition_NO_OPENQuoteCondition_REGULAR_ETHQuoteCondition_AUTOMATIC_EXECUTIONQuoteCondition_AUTOMATIC_EXECUTION_ETHQuoteCondition_FAST_MARKET_ETHQuoteCondition_INACTIVE_ETHQuoteCondition_ROTATIONQuoteCondition_ROTATION_ETHQuoteCondition_HALTQuoteCondition_HALT_ETHQuoteCondition_DUE_TO_NEWS_DISSEMINATIONQuoteCondition_DUE_TO_NEWS_PENDINGQuoteCondition_TRADING_RESUMEQuoteCondition_OUT_OF_SEQUENCEQuoteCondition_BID_SPECIALISTQuoteCondition_OFFER_SPECIALISTQuoteCondition_BID_OFFER_SPECIALISTQuoteCondition_END_OF_DAY_SAMQuoteCondition_FORBIDDEN_SAMQuoteCondition_FROZEN_SAMQuoteCondition_PREOPENING_SAMQuoteCondition_OPENING_SAMQuoteCondition_OPEN_SAMQuoteCondition_SURVEILLANCE_SAMQuoteCondition_SUSPENDED_SAM"

var _QuoteCondition_map = map[QuoteCondition]string{
	"0":  _QuoteCondition_name[0:27],
	"1":  _QuoteCondition_name[27:55],
	"2":  _QuoteCondition_name[55:80],
	"3":  _QuoteCondition_name[80:112],
	"4":  _QuoteCondition_name[112:162],
	"5":  _QuoteCondition_name[162:189],
	"6":  _QuoteCondition_name[189:214],
	"7":  _QuoteCondition_name[214:239],
	"A":  _QuoteCondition_name[239:265],
	"B":  _QuoteCondition_name[265:295],
	"C":  _QuoteCondition_name[295:323],
	"D":  _QuoteCondition_name[323:355],
	"E":  _QuoteCondition_name[355:376],
	"F":  _QuoteCondition_name[376:398],
	"G":  _QuoteCondition_name[398:418],
	"H":  _QuoteCondition_name[418:445],
	"I":  _QuoteCondition_name[445:468],
	"J":  _QuoteCondition_name[468:497],
	"K":  _QuoteCondition_name[497:525],
	"L":  _QuoteCondition_name[525:557],
	"M":  _QuoteCondition_name[557:586],
	"N":  _QuoteCondition_name[586:613],
	"O":  _QuoteCondition_name[613:635],
	"P":  _QuoteCondition_name[635:668],
	"Q":  _QuoteCondition_name[668:696],
	"R":  _QuoteCondition_name[696:723],
	"S":  _QuoteCondition_name[723:752],
	"T":  _QuoteCondition_name[752:779],
	"U":  _QuoteCondition_name[779:809],
	"V":  _QuoteCondition_name[809:854],
	"W":  _QuoteCondition_name[854:875],
	"X":  _QuoteCondition_name[875:904],
	"Y":  _QuoteCondition_name[904:931],
	"Z":  _QuoteCondition_name[931:961],
	"a":  _QuoteCondition_name[961:996],
	"b":  _QuoteCondition_name[996:1018],
	"c":  _QuoteCondition_name[1018:1044],
	"d":  _QuoteCondition_name[1044:1078],
	"e":  _QuoteCondition_name[1078:1116],
	"f ": _QuoteCondition_name[1116:1146],
	"g":  _QuoteCondition_name[1146:1173],
	"h":  _QuoteCondition_name[1173:1196],
	"i":  _QuoteCondition_name[1196:1223],
	"j":  _QuoteCondition_name[1223:1242],
	"k":  _QuoteCondition_name[1242:1265],
	"l":  _QuoteCondition_name[1265:1305],
	"m":  _QuoteCondition_name[1305:1339],
	"n":  _QuoteCondition_name[1339:1368],
	"o":  _QuoteCondition_name[1368:1398],
	"p":  _QuoteCondition_name[1398:1427],
	"q":  _QuoteCondition_name[1427:1458],
	"r":  _QuoteCondition_name[1458:1493],
	"s":  _QuoteCondition_name[1493:1522],
	"t":  _QuoteCondition_name[1522:1550],
	"u":  _QuoteCondition_name[1550:1575],
	"v":  _QuoteCondition_name[1575:1604],
	"w":  _QuoteCondition_name[1604:1630],
	"x":  _QuoteCondition_name[1630:1653],
	"y":  _QuoteCondition_name[1653:1684],
	"z":  _QuoteCondition_name[1684:1712],
}

func (i QuoteCondition) String() string {
	if str, ok := _QuoteCondition_map[i]; ok {
		return str
	}
	return "QuoteCondition(" + i.String() + ")"
}

const _QuoteEntryRejectReason_name = "QuoteEntryRejectReason_UNKNOWN_SYMBOLQuoteEntryRejectReason_EXHCNAGEQuoteEntryRejectReason_QUOTE_EXCEEDS_LIMITQuoteEntryRejectReason_TOO_LATE_TO_ENTERQuoteEntryRejectReason_UNKNOWN_QUOTEQuoteEntryRejectReason_DUPLICATE_QUOTEQuoteEntryRejectReason_INVALID_BID_ASK_SPREADQuoteEntryRejectReason_INVALID_PRICEQuoteEntryRejectReason_NOT_AUTHORIZED_TO_QUOTE_SECURITYQuoteEntryRejectReason_OTHER"

var _QuoteEntryRejectReason_map = map[QuoteEntryRejectReason]string{
	"1":  _QuoteEntryRejectReason_name[0:37],
	"2":  _QuoteEntryRejectReason_name[37:68],
	"3":  _QuoteEntryRejectReason_name[68:110],
	"4":  _QuoteEntryRejectReason_name[110:150],
	"5":  _QuoteEntryRejectReason_name[150:186],
	"6":  _QuoteEntryRejectReason_name[186:224],
	"7":  _QuoteEntryRejectReason_name[224:269],
	"8":  _QuoteEntryRejectReason_name[269:305],
	"9":  _QuoteEntryRejectReason_name[305:360],
	"99": _QuoteEntryRejectReason_name[360:388],
}

func (i QuoteEntryRejectReason) String() string {
	if str, ok := _QuoteEntryRejectReason_map[i]; ok {
		return str
	}
	return "QuoteEntryRejectReason(" + i.String() + ")"
}

const _QuoteEntryStatus_name = "QuoteEntryStatus_ACCEPTEDQuoteEntryStatus_LOCKED_MARKET_WARNINGQuoteEntryStatus_CROSS_MARKET_WARNINGQuoteEntryStatus_CANCELED_DUE_TO_LOCK_MARKETQuoteEntryStatus_CANCELED_DUE_TO_CROSS_MARKETQuoteEntryStatus_ACTIVEQuoteEntryStatus_REJECTEDQuoteEntryStatus_REMOVED_FROM_MARKETQuoteEntryStatus_EXPIRED"

var _QuoteEntryStatus_map = map[QuoteEntryStatus]string{
	"0":  _QuoteEntryStatus_name[0:25],
	"12": _QuoteEntryStatus_name[25:63],
	"13": _QuoteEntryStatus_name[63:100],
	"14": _QuoteEntryStatus_name[100:144],
	"15": _QuoteEntryStatus_name[144:189],
	"16": _QuoteEntryStatus_name[189:212],
	"5":  _QuoteEntryStatus_name[212:237],
	"6":  _QuoteEntryStatus_name[237:273],
	"7":  _QuoteEntryStatus_name[273:297],
}

func (i QuoteEntryStatus) String() string {
	if str, ok := _QuoteEntryStatus_map[i]; ok {
		return str
	}
	return "QuoteEntryStatus(" + i.String() + ")"
}

const _QuotePriceType_name = "QuotePriceType_PERCENTQuotePriceType_YIELDQuotePriceType_PER_SHAREQuotePriceType_FIXED_AMOUNTQuotePriceType_DISCOUNTQuotePriceType_PREMIUMQuotePriceType_SPREADQuotePriceType_TED_PRICEQuotePriceType_TED_YIELDQuotePriceType_YIELD_SPREAD"

var _QuotePriceType_map = map[QuotePriceType]string{
	"1":  _QuotePriceType_name[0:22],
	"10": _QuotePriceType_name[22:42],
	"2":  _QuotePriceType_name[42:66],
	"3":  _QuotePriceType_name[66:93],
	"4":  _QuotePriceType_name[93:116],
	"5":  _QuotePriceType_name[116:138],
	"6":  _QuotePriceType_name[138:159],
	"7":  _QuotePriceType_name[159:183],
	"8":  _QuotePriceType_name[183:207],
	"9":  _QuotePriceType_name[207:234],
}

func (i QuotePriceType) String() string {
	if str, ok := _QuotePriceType_map[i]; ok {
		return str
	}
	return "QuotePriceType(" + i.String() + ")"
}

const _QuoteRejectReason_name = "QuoteRejectReason_UNKNOWN_SYMBOLQuoteRejectReason_PRICE_EXCEEDS_CURRENT_PRICE_BANDQuoteRejectReason_QUOTE_LOCKEDQuoteRejectReason_INVALID_OR_UNKNOWN_SECURITY_ISSUERQuoteRejectReason_INVALID_OR_UNKNOWN_ISSUER_OF_UNDERLYING_SECURITYQuoteRejectReason_EXCHANGEQuoteRejectReason_QUOTE_REQUEST_EXCEEDS_LIMITQuoteRejectReason_TOO_LATE_TO_ENTERQuoteRejectReason_UNKNOWN_QUOTEQuoteRejectReason_DUPLICATE_QUOTEQuoteRejectReason_INVALID_BID_ASK_SPREADQuoteRejectReason_INVALID_PRICEQuoteRejectReason_NOT_AUTHORIZED_TO_QUOTE_SECURITYQuoteRejectReason_OTHER"

var _QuoteRejectReason_map = map[QuoteRejectReason]string{
	"1":  _QuoteRejectReason_name[0:32],
	"10": _QuoteRejectReason_name[32:82],
	"11": _QuoteRejectReason_name[82:112],
	"12": _QuoteRejectReason_name[112:164],
	"13": _QuoteRejectReason_name[164:230],
	"2":  _QuoteRejectReason_name[230:256],
	"3":  _QuoteRejectReason_name[256:301],
	"4":  _QuoteRejectReason_name[301:336],
	"5":  _QuoteRejectReason_name[336:367],
	"6":  _QuoteRejectReason_name[367:400],
	"7":  _QuoteRejectReason_name[400:440],
	"8":  _QuoteRejectReason_name[440:471],
	"9":  _QuoteRejectReason_name[471:521],
	"99": _QuoteRejectReason_name[521:544],
}

func (i QuoteRejectReason) String() string {
	if str, ok := _QuoteRejectReason_map[i]; ok {
		return str
	}
	return "QuoteRejectReason(" + i.String() + ")"
}

const _QuoteRequestRejectReason_name = "QuoteRequestRejectReason_UNKNOWN_SYMBOLQuoteRequestRejectReason_PASSQuoteRequestRejectReason_INSUFFICIENT_CREDITQuoteRequestRejectReason_EXCHANGEQuoteRequestRejectReason_QUOTE_REQUEST_EXCEEDS_LIMITQuoteRequestRejectReason_TOO_LATE_TO_ENTERQuoteRequestRejectReason_INVALID_PRICEQuoteRequestRejectReason_NOT_AUTHORIZED_TO_REQUEST_QUOTEQuoteRequestRejectReason_NO_MATCH_FOR_INQUIRYQuoteRequestRejectReason_NO_MARKET_FOR_INSTRUMENTQuoteRequestRejectReason_NO_INVENTORYQuoteRequestRejectReason_OTHER"

var _QuoteRequestRejectReason_map = map[QuoteRequestRejectReason]string{
	"1":  _QuoteRequestRejectReason_name[0:39],
	"10": _QuoteRequestRejectReason_name[39:68],
	"11": _QuoteRequestRejectReason_name[68:112],
	"2":  _QuoteRequestRejectReason_name[112:145],
	"3":  _QuoteRequestRejectReason_name[145:197],
	"4":  _QuoteRequestRejectReason_name[197:239],
	"5":  _QuoteRequestRejectReason_name[239:277],
	"6":  _QuoteRequestRejectReason_name[277:333],
	"7":  _QuoteRequestRejectReason_name[333:378],
	"8":  _QuoteRequestRejectReason_name[378:427],
	"9":  _QuoteRequestRejectReason_name[427:464],
	"99": _QuoteRequestRejectReason_name[464:494],
}

func (i QuoteRequestRejectReason) String() string {
	if str, ok := _QuoteRequestRejectReason_map[i]; ok {
		return str
	}
	return "QuoteRequestRejectReason(" + i.String() + ")"
}

const _QuoteRequestType_name = "QuoteRequestType_MANUALQuoteRequestType_AUTOMATIC"

var _QuoteRequestType_map = map[QuoteRequestType]string{
	"1": _QuoteRequestType_name[0:23],
	"2": _QuoteRequestType_name[23:49],
}

func (i QuoteRequestType) String() string {
	if str, ok := _QuoteRequestType_map[i]; ok {
		return str
	}
	return "QuoteRequestType(" + i.String() + ")"
}

const _QuoteRespType_name = "QuoteRespType_HIT_LIFTQuoteRespType_COUNTERQuoteRespType_EXPIREDQuoteRespType_COVERQuoteRespType_DONE_AWAYQuoteRespType_PASSQuoteRespType_END_TRADEQuoteRespType_TIMED_OUT"

var _QuoteRespType_map = map[QuoteRespType]string{
	"1": _QuoteRespType_name[0:22],
	"2": _QuoteRespType_name[22:43],
	"3": _QuoteRespType_name[43:64],
	"4": _QuoteRespType_name[64:83],
	"5": _QuoteRespType_name[83:106],
	"6": _QuoteRespType_name[106:124],
	"7": _QuoteRespType_name[124:147],
	"8": _QuoteRespType_name[147:170],
}

func (i QuoteRespType) String() string {
	if str, ok := _QuoteRespType_map[i]; ok {
		return str
	}
	return "QuoteRespType(" + i.String() + ")"
}

const _QuoteResponseLevel_name = "QuoteResponseLevel_NO_ACKNOWLEDGEMENTQuoteResponseLevel_ACKNOWLEDGE_ONLY_NEGATIVE_OR_ERRONEOUS_QUOTESQuoteResponseLevel_ACKNOWLEDGE_EACH_QUOTE_MESSAGEQuoteResponseLevel_SUMMARY_ACKNOWLEDGEMENT"

var _QuoteResponseLevel_map = map[QuoteResponseLevel]string{
	"0": _QuoteResponseLevel_name[0:37],
	"1": _QuoteResponseLevel_name[37:101],
	"2": _QuoteResponseLevel_name[101:150],
	"3": _QuoteResponseLevel_name[150:192],
}

func (i QuoteResponseLevel) String() string {
	if str, ok := _QuoteResponseLevel_map[i]; ok {
		return str
	}
	return "QuoteResponseLevel(" + i.String() + ")"
}

const _QuoteStatus_name = "QuoteStatus_ACCEPTEDQuoteStatus_CANCEL_FOR_SYMBOLQuoteStatus_PENDINGQuoteStatus_PASSQuoteStatus_LOCKED_MARKET_WARNINGQuoteStatus_CROSS_MARKET_WARNINGQuoteStatus_CANCELED_DUE_TO_LOCK_MARKETQuoteStatus_CANCELED_DUE_TO_CROSS_MARKETQuoteStatus_ACTIVEQuoteStatus_CANCELEDQuoteStatus_UNSOLICITED_QUOTE_REPLENISHMENTQuoteStatus_PENDING_END_TRADEQuoteStatus_CANCELED_FOR_SECURITY_TYPEQuoteStatus_TOO_LATE_TO_ENDQuoteStatus_CANCELED_FOR_UNDERLYINGQuoteStatus_CANCELED_ALLQuoteStatus_REJECTEDQuoteStatus_REMOVED_FROM_MARKETQuoteStatus_EXPIREDQuoteStatus_QUERYQuoteStatus_QUOTE_NOT_FOUND"

var _QuoteStatus_map = map[QuoteStatus]string{
	"0":  _QuoteStatus_name[0:20],
	"1":  _QuoteStatus_name[20:49],
	"10": _QuoteStatus_name[49:68],
	"11": _QuoteStatus_name[68:84],
	"12": _QuoteStatus_name[84:117],
	"13": _QuoteStatus_name[117:149],
	"14": _QuoteStatus_name[149:188],
	"15": _QuoteStatus_name[188:228],
	"16": _QuoteStatus_name[228:246],
	"17": _QuoteStatus_name[246:266],
	"18": _QuoteStatus_name[266:309],
	"19": _QuoteStatus_name[309:338],
	"2":  _QuoteStatus_name[338:376],
	"20": _QuoteStatus_name[376:403],
	"3":  _QuoteStatus_name[403:438],
	"4":  _QuoteStatus_name[438:462],
	"5":  _QuoteStatus_name[462:482],
	"6":  _QuoteStatus_name[482:513],
	"7":  _QuoteStatus_name[513:532],
	"8":  _QuoteStatus_name[532:549],
	"9":  _QuoteStatus_name[549:576],
}

func (i QuoteStatus) String() string {
	if str, ok := _QuoteStatus_map[i]; ok {
		return str
	}
	return "QuoteStatus(" + i.String() + ")"
}

const _QuoteType_name = "QuoteType_INDICATIVEQuoteType_TRADEABLEQuoteType_RESTRICTED_TRADEABLEQuoteType_COUNTER"

var _QuoteType_map = map[QuoteType]string{
	"0": _QuoteType_name[0:20],
	"1": _QuoteType_name[20:39],
	"2": _QuoteType_name[39:69],
	"3": _QuoteType_name[69:86],
}

func (i QuoteType) String() string {
	if str, ok := _QuoteType_map[i]; ok {
		return str
	}
	return "QuoteType(" + i.String() + ")"
}

const _RateSource_name = "RateSource_BLOOMBERGRateSource_REUTERSRateSource_TELERATERateSource_OTHER"

var _RateSource_map = map[RateSource]string{
	"0":  _RateSource_name[0:20],
	"1":  _RateSource_name[20:38],
	"2":  _RateSource_name[38:57],
	"99": _RateSource_name[57:73],
}

func (i RateSource) String() string {
	if str, ok := _RateSource_map[i]; ok {
		return str
	}
	return "RateSource(" + i.String() + ")"
}

const _RateSourceType_name = "RateSourceType_PRIMARYRateSourceType_SECONDARY"

var _RateSourceType_map = map[RateSourceType]string{
	"0": _RateSourceType_name[0:22],
	"1": _RateSourceType_name[22:46],
}

func (i RateSourceType) String() string {
	if str, ok := _RateSourceType_map[i]; ok {
		return str
	}
	return "RateSourceType(" + i.String() + ")"
}

const _RefOrdIDReason_name = "RefOrdIDReason_GTC_FROM_PREVIOUS_DAYRefOrdIDReason_PARTIAL_FILL_REMAININGRefOrdIDReason_ORDER_CHANGED"

var _RefOrdIDReason_map = map[RefOrdIDReason]string{
	"0": _RefOrdIDReason_name[0:36],
	"1": _RefOrdIDReason_name[36:73],
	"2": _RefOrdIDReason_name[73:101],
}

func (i RefOrdIDReason) String() string {
	if str, ok := _RefOrdIDReason_map[i]; ok {
		return str
	}
	return "RefOrdIDReason(" + i.String() + ")"
}

const _RefOrderIDSource_name = "RefOrderIDSource_SECONDARYORDERIDRefOrderIDSource_ORDERIDRefOrderIDSource_MDENTRYIDRefOrderIDSource_QUOTEENTRYIDRefOrderIDSource_ORIGINAL_ORDER_ID"

var _RefOrderIDSource_map = map[RefOrderIDSource]string{
	"0": _RefOrderIDSource_name[0:33],
	"1": _RefOrderIDSource_name[33:57],
	"2": _RefOrderIDSource_name[57:83],
	"3": _RefOrderIDSource_name[83:112],
	"4": _RefOrderIDSource_name[112:146],
}

func (i RefOrderIDSource) String() string {
	if str, ok := _RefOrderIDSource_map[i]; ok {
		return str
	}
	return "RefOrderIDSource(" + i.String() + ")"
}

const _RegistRejReasonCode_name = "RegistRejReasonCode_INVALID_UNACCEPTABLE_ACCOUNT_TYPERegistRejReasonCode_INVALID_UNACEEPTABLE_INVESTOR_ID_SOURCERegistRejReasonCode_INVALID_UNACCEPTABLE_DATE_OF_BIRTHRegistRejReasonCode_INVALID_UNACCEPTABLE_INVESTOR_COUNTRY_OF_RESIDENCERegistRejReasonCode_INVALID_UNACCEPTABLE_NO_DISTRIB_INSTNSRegistRejReasonCode_INVALID_UNACCEPTABLE_DISTRIB_PERCENTAGERegistRejReasonCode_INVALID_UNACCEPTABLE_DISTRIB_PAYMENT_METHODRegistRejReasonCode_INVALID_UNACCEPTABLE_CASH_DISTRIB_AGENT_ACCT_NAMERegistRejReasonCode_INVALID_UNACCEPTABLE_CASH_DISTRIB_AGENT_CODERegistRejReasonCode_INVALID_UNACCEPTABLE_CASH_DISTRIB_AGENT_ACCT_NUMRegistRejReasonCode_INVALID_UNACCEPTABLE_TAX_EXEMPT_TYPERegistRejReasonCode_INVALID_UNACCEPTABLE_OWNERSHIP_TYPERegistRejReasonCode_INVALID_UNACCEPTABLE_NO_REG_DETAILSRegistRejReasonCode_INVALID_UNACCEPTABLE_REG_SEQ_NORegistRejReasonCode_INVALID_UNACCEPTABLE_REG_DETAILSRegistRejReasonCode_INVALID_UNACCEPTABLE_MAILING_DETAILSRegistRejReasonCode_INVALID_UNACCEPTABLE_MAILING_INSTRUCTIONSRegistRejReasonCode_INVALID_UNACCEPTABLE_INVESTOR_IDRegistRejReasonCode_OTHER"

var _RegistRejReasonCode_map = map[RegistRejReasonCode]string{
	"1":  _RegistRejReasonCode_name[0:53],
	"10": _RegistRejReasonCode_name[53:112],
	"11": _RegistRejReasonCode_name[112:166],
	"12": _RegistRejReasonCode_name[166:236],
	"13": _RegistRejReasonCode_name[236:294],
	"14": _RegistRejReasonCode_name[294:353],
	"15": _RegistRejReasonCode_name[353:416],
	"16": _RegistRejReasonCode_name[416:485],
	"17": _RegistRejReasonCode_name[485:549],
	"18": _RegistRejReasonCode_name[549:617],
	"2":  _RegistRejReasonCode_name[617:673],
	"3":  _RegistRejReasonCode_name[673:728],
	"4":  _RegistRejReasonCode_name[728:783],
	"5":  _RegistRejReasonCode_name[783:834],
	"6":  _RegistRejReasonCode_name[834:886],
	"7":  _RegistRejReasonCode_name[886:942],
	"8":  _RegistRejReasonCode_name[942:1003],
	"9":  _RegistRejReasonCode_name[1003:1055],
	"99": _RegistRejReasonCode_name[1055:1080],
}

func (i RegistRejReasonCode) String() string {
	if str, ok := _RegistRejReasonCode_map[i]; ok {
		return str
	}
	return "RegistRejReasonCode(" + i.String() + ")"
}

const _RegistStatus_name = "RegistStatus_ACCEPTEDRegistStatus_HELDRegistStatus_REMINDERRegistStatus_REJECTED"

var _RegistStatus_map = map[RegistStatus]string{
	"A": _RegistStatus_name[0:21],
	"H": _RegistStatus_name[21:38],
	"N": _RegistStatus_name[38:59],
	"R": _RegistStatus_name[59:80],
}

func (i RegistStatus) String() string {
	if str, ok := _RegistStatus_map[i]; ok {
		return str
	}
	return "RegistStatus(" + i.String() + ")"
}

const _RegistTransType_name = "RegistTransType_NEWRegistTransType_REPLACERegistTransType_CANCEL"

var _RegistTransType_map = map[RegistTransType]string{
	"0": _RegistTransType_name[0:19],
	"1": _RegistTransType_name[19:42],
	"2": _RegistTransType_name[42:64],
}

func (i RegistTransType) String() string {
	if str, ok := _RegistTransType_map[i]; ok {
		return str
	}
	return "RegistTransType(" + i.String() + ")"
}

const _ReportToExch_name = "ReportToExch_NOReportToExch_YES"

var _ReportToExch_map = map[ReportToExch]string{
	"N": _ReportToExch_name[0:15],
	"Y": _ReportToExch_name[15:31],
}

func (i ReportToExch) String() string {
	if str, ok := _ReportToExch_map[i]; ok {
		return str
	}
	return "ReportToExch(" + i.String() + ")"
}

const _ResetSeqNumFlag_name = "ResetSeqNumFlag_NOResetSeqNumFlag_YES"

var _ResetSeqNumFlag_map = map[ResetSeqNumFlag]string{
	"N": _ResetSeqNumFlag_name[0:18],
	"Y": _ResetSeqNumFlag_name[18:37],
}

func (i ResetSeqNumFlag) String() string {
	if str, ok := _ResetSeqNumFlag_map[i]; ok {
		return str
	}
	return "ResetSeqNumFlag(" + i.String() + ")"
}

const _RespondentType_name = "RespondentType_ALL_MARKET_PARTICIPANTSRespondentType_SPECIFIED_MARKET_PARTICIPANTSRespondentType_ALL_MARKET_MAKERSRespondentType_PRIMARY_MARKET_MAKER"

var _RespondentType_map = map[RespondentType]string{
	"1": _RespondentType_name[0:38],
	"2": _RespondentType_name[38:82],
	"3": _RespondentType_name[82:114],
	"4": _RespondentType_name[114:149],
}

func (i RespondentType) String() string {
	if str, ok := _RespondentType_map[i]; ok {
		return str
	}
	return "RespondentType(" + i.String() + ")"
}

const _ResponseTransportType_name = "ResponseTransportType_INBANDResponseTransportType_OUT_OF_BAND"

var _ResponseTransportType_map = map[ResponseTransportType]string{
	"0": _ResponseTransportType_name[0:28],
	"1": _ResponseTransportType_name[28:61],
}

func (i ResponseTransportType) String() string {
	if str, ok := _ResponseTransportType_map[i]; ok {
		return str
	}
	return "ResponseTransportType(" + i.String() + ")"
}

const _RestructuringType_name = "RestructuringType_FULL_RESTRUCTURINGRestructuringType_MODIFIED_MOD_RESTRUCTURINGRestructuringType_MODIFIED_RESTRUCTURINGRestructuringType_NO_RESTRUCTURING_SPECIFIED"

var _RestructuringType_map = map[RestructuringType]string{
	"FR": _RestructuringType_name[0:36],
	"MM": _RestructuringType_name[36:80],
	"MR": _RestructuringType_name[80:120],
	"XR": _RestructuringType_name[120:164],
}

func (i RestructuringType) String() string {
	if str, ok := _RestructuringType_map[i]; ok {
		return str
	}
	return "RestructuringType(" + i.String() + ")"
}

const _RiskInstrumentOperator_name = "RiskInstrumentOperator_INCLUDERiskInstrumentOperator_EXCLUDE"

var _RiskInstrumentOperator_map = map[RiskInstrumentOperator]string{
	"1": _RiskInstrumentOperator_name[0:30],
	"2": _RiskInstrumentOperator_name[30:60],
}

func (i RiskInstrumentOperator) String() string {
	if str, ok := _RiskInstrumentOperator_map[i]; ok {
		return str
	}
	return "RiskInstrumentOperator(" + i.String() + ")"
}

const _RiskLimitType_name = "RiskLimitType_GROSS_LIMITRiskLimitType_NET_LIMITRiskLimitType_EXPOSURERiskLimitType_LONG_LIMITRiskLimitType_SHORT_LIMIT"

var _RiskLimitType_map = map[RiskLimitType]string{
	"1": _RiskLimitType_name[0:25],
	"2": _RiskLimitType_name[25:48],
	"3": _RiskLimitType_name[48:70],
	"4": _RiskLimitType_name[70:94],
	"5": _RiskLimitType_name[94:119],
}

func (i RiskLimitType) String() string {
	if str, ok := _RiskLimitType_map[i]; ok {
		return str
	}
	return "RiskLimitType(" + i.String() + ")"
}

const _RoundingDirection_name = "RoundingDirection_ROUND_TO_NEARESTRoundingDirection_ROUND_DOWNRoundingDirection_ROUND_UP"

var _RoundingDirection_map = map[RoundingDirection]string{
	"0": _RoundingDirection_name[0:34],
	"1": _RoundingDirection_name[34:62],
	"2": _RoundingDirection_name[62:88],
}

func (i RoundingDirection) String() string {
	if str, ok := _RoundingDirection_map[i]; ok {
		return str
	}
	return "RoundingDirection(" + i.String() + ")"
}

const _RoutingType_name = "RoutingType_TARGET_FIRMRoutingType_TARGET_LISTRoutingType_BLOCK_FIRMRoutingType_BLOCK_LIST"

var _RoutingType_map = map[RoutingType]string{
	"1": _RoutingType_name[0:23],
	"2": _RoutingType_name[23:46],
	"3": _RoutingType_name[46:68],
	"4": _RoutingType_name[68:90],
}

func (i RoutingType) String() string {
	if str, ok := _RoutingType_map[i]; ok {
		return str
	}
	return "RoutingType(" + i.String() + ")"
}

const _Rule80A_name = "Rule80A_AGENCY_SINGLE_ORDERRule80A_SHORT_EXEMPT_TRANSACTION_BRule80A_PROPRIETARY_NON_ALGORITHMIC_PROGRAM_TRADERule80A_PROGRAM_ORDER_INDEX_ARB_FOR_MEMBER_FIRM_ORGRule80A_SHORT_EXEMPT_TRANSACTION_FOR_PRINCIPALRule80A_SHORT_EXEMPT_TRANSACTION_FRule80A_SHORT_EXEMPT_TRANSACTION_HRule80A_INDIVIDUAL_INVESTOR_SINGLE_ORDERRule80A_PROPRIETARY_ALGORITHMIC_PROGRAM_TRADINGRule80A_AGENCY_ALGORITHMIC_PROGRAM_TRADINGRule80A_SHORT_EXEMPT_TRANSACTION_FOR_MEMBER_COMPETING_MARKET_MAKER_AFFLIATED_WITH_THE_FIRM_CLEARING_THE_TRADERule80A_PROGRAM_ORDER_INDEX_ARB_FOR_OTHER_MEMBERRule80A_AGENT_FOR_OTHER_MEMBER_NON_ALGORITHMIC_PROGRAM_TRADERule80A_PROPRIETARY_TRANSACTIONS_FOR_COMPETING_MARKET_MAKER_THAT_IS_AFFILIATED_WITH_THE_CLEARING_MEMBERRule80A_PRINCIPALRule80A_TRANSACTIONS_FOR_THE_ACCOUNT_OF_A_NON_MEMBER_COMPTING_MARKET_MAKERRule80A_SPECIALIST_TRADESRule80A_TRANSACTIONS_FOR_THE_ACCOUNT_OF_AN_UNAFFILIATED_MEMBERS_COMPETING_MARKET_MAKERRule80A_AGENCY_INDEX_ARBITRAGERule80A_ALL_OTHER_ORDERS_AS_AGENT_FOR_OTHER_MEMBERRule80A_SHORT_EXEMPT_TRANSACTION_FOR_MEMBER_COMPETING_MARKET_MAKER_NOT_AFFILIATED_WITH_THE_FIRM_CLEARING_THE_TRADERule80A_AGENCY_NON_ALGORITHMIC_PROGRAM_TRADERule80A_SHORT_EXEMPT_TRANSACTION_FOR_NON_MEMBER_COMPETING_MARKET_MAKER"

var _Rule80A_map = map[Rule80A]string{
	"A": _Rule80A_name[0:27],
	"B": _Rule80A_name[27:61],
	"C": _Rule80A_name[61:110],
	"D": _Rule80A_name[110:161],
	"E": _Rule80A_name[161:207],
	"F": _Rule80A_name[207:241],
	"H": _Rule80A_name[241:275],
	"I": _Rule80A_name[275:315],
	"J": _Rule80A_name[315:362],
	"K": _Rule80A_name[362:404],
	"L": _Rule80A_name[404:513],
	"M": _Rule80A_name[513:561],
	"N": _Rule80A_name[561:621],
	"O": _Rule80A_name[621:724],
	"P": _Rule80A_name[724:741],
	"R": _Rule80A_name[741:815],
	"S": _Rule80A_name[815:840],
	"T": _Rule80A_name[840:926],
	"U": _Rule80A_name[926:956],
	"W": _Rule80A_name[956:1006],
	"X": _Rule80A_name[1006:1120],
	"Y": _Rule80A_name[1120:1164],
	"Z": _Rule80A_name[1164:1234],
}

func (i Rule80A) String() string {
	if str, ok := _Rule80A_map[i]; ok {
		return str
	}
	return "Rule80A(" + i.String() + ")"
}

const _Scope_name = "Scope_LOCAL_MARKETScope_NATIONALScope_GLOBAL"

var _Scope_map = map[Scope]string{
	"1": _Scope_name[0:18],
	"2": _Scope_name[18:32],
	"3": _Scope_name[32:44],
}

func (i Scope) String() string {
	if str, ok := _Scope_map[i]; ok {
		return str
	}
	return "Scope(" + i.String() + ")"
}

const _SecDefStatus_name = "SecDefStatus_PENDING_APPROVALSecDefStatus_APPROVEDSecDefStatus_REJECTEDSecDefStatus_UNAUTHORIZED_REQUESTSecDefStatus_INVALID_DEFINITION_REQUEST"

var _SecDefStatus_map = map[SecDefStatus]string{
	"0": _SecDefStatus_name[0:29],
	"1": _SecDefStatus_name[29:50],
	"2": _SecDefStatus_name[50:71],
	"3": _SecDefStatus_name[71:104],
	"4": _SecDefStatus_name[104:143],
}

func (i SecDefStatus) String() string {
	if str, ok := _SecDefStatus_map[i]; ok {
		return str
	}
	return "SecDefStatus(" + i.String() + ")"
}

const _SecurityIDSource_name = "SecurityIDSource_CUSIPSecurityIDSource_SEDOLSecurityIDSource_QUIKSecurityIDSource_ISIN_NUMBERSecurityIDSource_RIC_CODESecurityIDSource_ISO_CURRENCY_CODESecurityIDSource_ISO_COUNTRY_CODESecurityIDSource_EXCHANGE_SYMBOLSecurityIDSource_CONSOLIDATED_TAPE_ASSOCIATIONSecurityIDSource_BLOOMBERG_SYMBOLSecurityIDSource_WERTPAPIERSecurityIDSource_DUTCHSecurityIDSource_VALORENSecurityIDSource_SICOVAMSecurityIDSource_BELGIANSecurityIDSource_COMMONSecurityIDSource_CLEARING_HOUSESecurityIDSource_ISDA_FPML_PRODUCT_SPECIFICATIONSecurityIDSource_OPTION_PRICE_REPORTING_AUTHORITYSecurityIDSource_ISDA_FPML_PRODUCT_URLSecurityIDSource_LETTER_OF_CREDITSecurityIDSource_MARKETPLACE_ASSIGNED_IDENTIFIER"

var _SecurityIDSource_map = map[SecurityIDSource]string{
	"1": _SecurityIDSource_name[0:22],
	"2": _SecurityIDSource_name[22:44],
	"3": _SecurityIDSource_name[44:65],
	"4": _SecurityIDSource_name[65:93],
	"5": _SecurityIDSource_name[93:118],
	"6": _SecurityIDSource_name[118:152],
	"7": _SecurityIDSource_name[152:185],
	"8": _SecurityIDSource_name[185:217],
	"9": _SecurityIDSource_name[217:263],
	"A": _SecurityIDSource_name[263:296],
	"B": _SecurityIDSource_name[296:323],
	"C": _SecurityIDSource_name[323:345],
	"D": _SecurityIDSource_name[345:369],
	"E": _SecurityIDSource_name[369:393],
	"F": _SecurityIDSource_name[393:417],
	"G": _SecurityIDSource_name[417:440],
	"H": _SecurityIDSource_name[440:471],
	"I": _SecurityIDSource_name[471:519],
	"J": _SecurityIDSource_name[519:568],
	"K": _SecurityIDSource_name[568:606],
	"L": _SecurityIDSource_name[606:639],
	"M": _SecurityIDSource_name[639:687],
}

func (i SecurityIDSource) String() string {
	if str, ok := _SecurityIDSource_map[i]; ok {
		return str
	}
	return "SecurityIDSource(" + i.String() + ")"
}

const _SecurityListRequestType_name = "SecurityListRequestType_SYMBOLSecurityListRequestType_SECURITYTYPE_AND_OR_CFICODESecurityListRequestType_PRODUCTSecurityListRequestType_TRADINGSESSIONIDSecurityListRequestType_ALL_SECURITIESSecurityListRequestType_MARKETID_OR_MARKETID_PLUS_MARKETSEGMENTID"

var _SecurityListRequestType_map = map[SecurityListRequestType]string{
	"0": _SecurityListRequestType_name[0:30],
	"1": _SecurityListRequestType_name[30:81],
	"2": _SecurityListRequestType_name[81:112],
	"3": _SecurityListRequestType_name[112:152],
	"4": _SecurityListRequestType_name[152:190],
	"5": _SecurityListRequestType_name[190:255],
}

func (i SecurityListRequestType) String() string {
	if str, ok := _SecurityListRequestType_map[i]; ok {
		return str
	}
	return "SecurityListRequestType(" + i.String() + ")"
}

const _SecurityListType_name = "SecurityListType_INDUSTRY_CLASSIFICATIONSecurityListType_TRADING_LISTSecurityListType_MARKETSecurityListType_NEWSPAPER_LIST"

var _SecurityListType_map = map[SecurityListType]string{
	"1": _SecurityListType_name[0:40],
	"2": _SecurityListType_name[40:69],
	"3": _SecurityListType_name[69:92],
	"4": _SecurityListType_name[92:123],
}

func (i SecurityListType) String() string {
	if str, ok := _SecurityListType_map[i]; ok {
		return str
	}
	return "SecurityListType(" + i.String() + ")"
}

const _SecurityListTypeSource_name = "SecurityListTypeSource_ICBSecurityListTypeSource_NAICSSecurityListTypeSource_GICS"

var _SecurityListTypeSource_map = map[SecurityListTypeSource]string{
	"1": _SecurityListTypeSource_name[0:26],
	"2": _SecurityListTypeSource_name[26:54],
	"3": _SecurityListTypeSource_name[54:81],
}

func (i SecurityListTypeSource) String() string {
	if str, ok := _SecurityListTypeSource_map[i]; ok {
		return str
	}
	return "SecurityListTypeSource(" + i.String() + ")"
}

const _SecurityRequestResult_name = "SecurityRequestResult_VALID_REQUESTSecurityRequestResult_INVALID_OR_UNSUPPORTED_REQUESTSecurityRequestResult_NO_INSTRUMENTS_FOUND_THAT_MATCH_SELECTION_CRITERIASecurityRequestResult_NOT_AUTHORIZED_TO_RETRIEVE_INSTRUMENT_DATASecurityRequestResult_INSTRUMENT_DATA_TEMPORARILY_UNAVAILABLESecurityRequestResult_REQUEST_FOR_INSTRUMENT_DATA_NOT_SUPPORTED"

var _SecurityRequestResult_map = map[SecurityRequestResult]string{
	"0": _SecurityRequestResult_name[0:35],
	"1": _SecurityRequestResult_name[35:87],
	"2": _SecurityRequestResult_name[87:159],
	"3": _SecurityRequestResult_name[159:223],
	"4": _SecurityRequestResult_name[223:284],
	"5": _SecurityRequestResult_name[284:347],
}

func (i SecurityRequestResult) String() string {
	if str, ok := _SecurityRequestResult_map[i]; ok {
		return str
	}
	return "SecurityRequestResult(" + i.String() + ")"
}

const _SecurityRequestType_name = "SecurityRequestType_REQUEST_SECURITY_IDENTITY_AND_SPECIFICATIONSSecurityRequestType_REQUEST_SECURITY_IDENTITY_FOR_THE_SPECIFICATIONS_PROVIDEDSecurityRequestType_REQUEST_LIST_SECURITY_TYPESSecurityRequestType_REQUEST_LIST_SECURITIESSecurityRequestType_SYMBOLSecurityRequestType_SECURITYTYPE_AND_OR_CFICODESecurityRequestType_PRODUCTSecurityRequestType_TRADINGSESSIONIDSecurityRequestType_ALL_SECURITIESSecurityRequestType_MARKETID_OR_MARKETID_PLUS_MARKETSEGMENTID"

var _SecurityRequestType_map = map[SecurityRequestType]string{
	"0": _SecurityRequestType_name[0:64],
	"1": _SecurityRequestType_name[64:141],
	"2": _SecurityRequestType_name[141:188],
	"3": _SecurityRequestType_name[188:231],
	"4": _SecurityRequestType_name[231:257],
	"5": _SecurityRequestType_name[257:304],
	"6": _SecurityRequestType_name[304:331],
	"7": _SecurityRequestType_name[331:367],
	"8": _SecurityRequestType_name[367:401],
	"9": _SecurityRequestType_name[401:462],
}

func (i SecurityRequestType) String() string {
	if str, ok := _SecurityRequestType_map[i]; ok {
		return str
	}
	return "SecurityRequestType(" + i.String() + ")"
}

const _SecurityResponseType_name = "SecurityResponseType_ACCEPT_SECURITY_PROPOSAL_AS_ISSecurityResponseType_ACCEPT_SECURITY_PROPOSAL_WITH_REVISIONS_AS_INDICATED_IN_THE_MESSAGESecurityResponseType_LIST_OF_SECURITY_TYPES_RETURNED_PER_REQUESTSecurityResponseType_LIST_OF_SECURITIES_RETURNED_PER_REQUESTSecurityResponseType_REJECT_SECURITY_PROPOSALSecurityResponseType_CANNOT_MATCH_SELECTION_CRITERIA"

var _SecurityResponseType_map = map[SecurityResponseType]string{
	"1": _SecurityResponseType_name[0:51],
	"2": _SecurityResponseType_name[51:139],
	"3": _SecurityResponseType_name[139:203],
	"4": _SecurityResponseType_name[203:263],
	"5": _SecurityResponseType_name[263:308],
	"6": _SecurityResponseType_name[308:360],
}

func (i SecurityResponseType) String() string {
	if str, ok := _SecurityResponseType_map[i]; ok {
		return str
	}
	return "SecurityResponseType(" + i.String() + ")"
}

const _SecurityStatus_name = "SecurityStatus_ACTIVESecurityStatus_INACTIVE"

var _SecurityStatus_map = map[SecurityStatus]string{
	"1": _SecurityStatus_name[0:21],
	"2": _SecurityStatus_name[21:44],
}

func (i SecurityStatus) String() string {
	if str, ok := _SecurityStatus_map[i]; ok {
		return str
	}
	return "SecurityStatus(" + i.String() + ")"
}

const _SecurityTradingEvent_name = "SecurityTradingEvent_ORDER_IMBALANCE_AUCTION_IS_EXTENDEDSecurityTradingEvent_TRADING_RESUMESSecurityTradingEvent_PRICE_VOLATILITY_INTERRUPTIONSecurityTradingEvent_CHANGE_OF_TRADING_SESSIONSecurityTradingEvent_CHANGE_OF_TRADING_SUBSESSIONSecurityTradingEvent_CHANGE_OF_SECURITY_TRADING_STATUSSecurityTradingEvent_CHANGE_OF_BOOK_TYPESecurityTradingEvent_CHANGE_OF_MARKET_DEPTH"

var _SecurityTradingEvent_map = map[SecurityTradingEvent]string{
	"1": _SecurityTradingEvent_name[0:56],
	"2": _SecurityTradingEvent_name[56:92],
	"3": _SecurityTradingEvent_name[92:142],
	"4": _SecurityTradingEvent_name[142:188],
	"5": _SecurityTradingEvent_name[188:237],
	"6": _SecurityTradingEvent_name[237:291],
	"7": _SecurityTradingEvent_name[291:331],
	"8": _SecurityTradingEvent_name[331:374],
}

func (i SecurityTradingEvent) String() string {
	if str, ok := _SecurityTradingEvent_map[i]; ok {
		return str
	}
	return "SecurityTradingEvent(" + i.String() + ")"
}

const _SecurityTradingStatus_name = "SecurityTradingStatus_OPENING_DELAYSecurityTradingStatus_MARKET_ON_CLOSE_IMBALANCE_SELLSecurityTradingStatus_11SecurityTradingStatus_NO_MARKET_IMBALANCESecurityTradingStatus_NO_MARKET_ON_CLOSE_IMBALANCESecurityTradingStatus_ITS_PRE_OPENINGSecurityTradingStatus_NEW_PRICE_INDICATIONSecurityTradingStatus_TRADE_DISSEMINATION_TIMESecurityTradingStatus_READY_TO_TRADESecurityTradingStatus_NOT_AVAILABLE_FOR_TRADINGSecurityTradingStatus_NOT_TRADED_ON_THIS_MARKETSecurityTradingStatus_TRADING_HALTSecurityTradingStatus_UNKNOWN_OR_INVALIDSecurityTradingStatus_PRE_OPENSecurityTradingStatus_OPENING_ROTATIONSecurityTradingStatus_FAST_MARKETSecurityTradingStatus_PRE_CROSSSecurityTradingStatus_CROSSSecurityTradingStatus_POST_CLOSESecurityTradingStatus_RESUMESecurityTradingStatus_NO_OPENSecurityTradingStatus_PRICE_INDICATIONSecurityTradingStatus_TRADING_RANGE_INDICATIONSecurityTradingStatus_MARKET_IMBALANCE_BUYSecurityTradingStatus_MARKET_IMBALANCE_SELLSecurityTradingStatus_MARKET_ON_CLOSE_IMBALANCE_BUY"

var _SecurityTradingStatus_map = map[SecurityTradingStatus]string{
	"1":  _SecurityTradingStatus_name[0:35],
	"10": _SecurityTradingStatus_name[35:87],
	"11": _SecurityTradingStatus_name[87:111],
	"12": _SecurityTradingStatus_name[111:152],
	"13": _SecurityTradingStatus_name[152:202],
	"14": _SecurityTradingStatus_name[202:239],
	"15": _SecurityTradingStatus_name[239:281],
	"16": _SecurityTradingStatus_name[281:327],
	"17": _SecurityTradingStatus_name[327:363],
	"18": _SecurityTradingStatus_name[363:410],
	"19": _SecurityTradingStatus_name[410:457],
	"2":  _SecurityTradingStatus_name[457:491],
	"20": _SecurityTradingStatus_name[491:531],
	"21": _SecurityTradingStatus_name[531:561],
	"22": _SecurityTradingStatus_name[561:599],
	"23": _SecurityTradingStatus_name[599:632],
	"24": _SecurityTradingStatus_name[632:663],
	"25": _SecurityTradingStatus_name[663:690],
	"26": _SecurityTradingStatus_name[690:722],
	"3":  _SecurityTradingStatus_name[722:750],
	"4":  _SecurityTradingStatus_name[750:779],
	"5":  _SecurityTradingStatus_name[779:817],
	"6":  _SecurityTradingStatus_name[817:863],
	"7":  _SecurityTradingStatus_name[863:905],
	"8":  _SecurityTradingStatus_name[905:948],
	"9":  _SecurityTradingStatus_name[948:999],
}

func (i SecurityTradingStatus) String() string {
	if str, ok := _SecurityTradingStatus_map[i]; ok {
		return str
	}
	return "SecurityTradingStatus(" + i.String() + ")"
}

const _SecurityType_name = "SecurityType_WILDCARD_ENTRY_FOR_USE_ON_SECURITY_DEFINITION_REQUESTSecurityType_ASSET_BACKED_SECURITIESSecurityType_AMENDED_RESTATEDSecurityType_OTHER_ANTICIPATION_NOTESSecurityType_BANKERS_ACCEPTANCESecurityType_BANK_DEPOSITORY_NOTESecurityType_BANK_NOTESSecurityType_BILL_OF_EXCHANGESSecurityType_BRADY_BONDSecurityType_BRIDGE_LOANSecurityType_BUY_SELLBACKSecurityType_CANADIAN_MONEY_MARKETSSecurityType_CANADIAN_TREASURY_NOTESSecurityType_CASHSecurityType_CONVERTIBLE_BONDSecurityType_CERTIFICATE_OF_DEPOSITSecurityType_CREDIT_DEFAULT_SWAPSecurityType_CALL_LOANSSecurityType_CANADIAN_MORTGAGE_BONDSSecurityType_CORP_MORTGAGE_BACKED_SECURITIESSecurityType_COLLATERALIZED_MORTGAGE_OBLIGATIONSecurityType_CERTIFICATE_OF_OBLIGATIONSecurityType_CERTIFICATE_OF_PARTICIPATIONSecurityType_CORPORATE_BONDSecurityType_COMMERCIAL_PAPERSecurityType_CORPORATE_PRIVATE_PLACEMENTSecurityType_COMMON_STOCKSecurityType_CANADIAN_TREASURY_BILLSSecurityType_DEFAULTEDSecurityType_DEBTOR_IN_POSSESSIONSecurityType_DEPOSIT_NOTESSecurityType_DUAL_CURRENCYSecurityType_EURO_CERTIFICATE_OF_DEPOSITSecurityType_EURO_CORPORATE_BONDSecurityType_EURO_COMMERCIAL_PAPERSecurityType_EURO_CORPORATE_FLOATING_RATE_NOTESSecurityType_EURO_SOVEREIGNSSecurityType_EURO_SUPRANATIONAL_COUPONSSecurityType_FEDERAL_AGENCY_COUPONSecurityType_FEDERAL_AGENCY_DISCOUNT_NOTESecurityType_FEDERAL_HOUSING_AUTHORITYSecurityType_FEDERAL_HOME_LOANSecurityType_FEDERAL_NATIONAL_MORTGAGE_ASSOCIATIONSecurityType_FOREIGN_EXCHANGE_CONTRACTSecurityType_FORWARDSecurityType_US_CORPORATE_FLOATING_RATE_NOTESSecurityType_FUTURESecurityType_FX_FORWARDSecurityType_NON_DELIVERABLE_FORWARDSecurityType_FX_SPOTSecurityType_FX_SWAPSecurityType_GOVERNMENT_NATIONAL_MORTGAGE_ASSOCIATIONSecurityType_GENERAL_OBLIGATION_BONDSSecurityType_TREASURIES_PLUS_AGENCY_DEBENTURESecurityType_IOETTE_MORTGAGESecurityType_INTEREST_RATE_SWAPSecurityType_LETTER_OF_CREDITSecurityType_LIQUIDITY_NOTESecurityType_MATUREDSecurityType_MORTGAGE_BACKED_SECURITIESSecurityType_MUTUAL_FUNDSecurityType_MORTGAGE_INTEREST_ONLYSecurityType_MULTILEG_INSTRUMENTSecurityType_MORTGAGE_PRINCIPAL_ONLYSecurityType_MORTGAGE_PRIVATE_PLACEMENTSecurityType_MISCELLANEOUS_PASS_THROUGHSecurityType_MANDATORY_TENDERSecurityType_MEDIUM_TERM_NOTESSecurityType_MUNICIPAL_BONDSecurityType_NO_SECURITY_TYPESecurityType_OVERNIGHTSecurityType_OPTIONS_ON_COMBOSecurityType_OPTIONS_ON_FUTURESSecurityType_OPTIONS_ON_PHYSICALSecurityType_OPTIONSecurityType_PRIVATE_EXPORT_FUNDINGSecurityType_PFANDBRIEFESecurityType_PROMISSORY_NOTESecurityType_AGENCY_POOLSSecurityType_CANADIAN_PROVINCIAL_BONDSSecurityType_PREFERRED_STOCKSecurityType_PLAZOS_FIJOSSecurityType_REVENUE_ANTICIPATION_NOTESecurityType_REPLACEDSecurityType_REPURCHASESecurityType_RETIREDSecurityType_REVENUE_BONDSSecurityType_REPURCHASE_AGREEMENTSecurityType_REVOLVER_LOANSecurityType_REVOLVER_TERM_LOANSecurityType_REVERSE_REPURCHASE_AGREEMENTSecurityType_SECURITIES_LOANSecurityType_SECURITIES_PLEDGESecurityType_STUDENT_LOAN_MARKETING_ASSOCIATIONSecurityType_SECURED_LIQUIDITY_NOTESecurityType_SPECIAL_ASSESSMENTSecurityType_SPECIAL_OBLIGATIONSecurityType_SPECIAL_TAXSecurityType_SHORT_TERM_LOAN_NOTESecurityType_STRUCTURED_NOTESSecurityType_USD_SUPRANATIONAL_COUPONSSecurityType_SWING_LINE_FACILITYSecurityType_TAX_ANTICIPATION_NOTESecurityType_TAX_ALLOCATIONSecurityType_TREASURY_BILLSecurityType_TO_BE_ANNOUNCEDSecurityType_US_TREASURY_BILL_TBILLSecurityType_US_TREASURY_BONDSecurityType_PRINCIPAL_STRIP_OF_A_CALLABLE_BOND_OR_NOTESecurityType_TIME_DEPOSITSecurityType_TAX_EXEMPT_COMMERCIAL_PAPERSecurityType_TERM_LOANSecurityType_INTEREST_STRIP_FROM_ANY_BOND_OR_NOTESecurityType_TREASURY_INFLATION_PROTECTED_SECURITIESSecurityType_TERM_LIQUIDITY_NOTESecurityType_TAXABLE_MUNICIPAL_CPSecurityType_US_TREASURY_NOTE_TNOTESecurityType_PRINCIPAL_STRIP_FROM_A_NON_CALLABLE_BOND_OR_NOTESecurityType_TAX_REVENUE_ANTICIPATION_NOTESecurityType_US_TREASURY_NOTE_USTSecurityType_US_TREASURY_BILL_USTBSecurityType_VARIABLE_RATE_DEMAND_NOTESecurityType_WARRANTSecurityType_WITHDRAWNSecurityType_WILDCARD_ENTRYSecurityType_EXTENDED_COMM_NOTESecurityType_INDEXED_LINKEDSecurityType_YANKEE_CORPORATE_BONDSecurityType_YANKEE_CERTIFICATE_OF_DEPOSITSecurityType_CATS_TIGERS_LIONS"

var _SecurityType_map = map[SecurityType]string{
	"?":         _SecurityType_name[0:66],
	"ABS":       _SecurityType_name[66:102],
	"AMENDED":   _SecurityType_name[102:131],
	"AN":        _SecurityType_name[131:168],
	"BA":        _SecurityType_name[168:199],
	"BDN":       _SecurityType_name[199:232],
	"BN":        _SecurityType_name[232:255],
	"BOX":       _SecurityType_name[255:285],
	"BRADY":     _SecurityType_name[285:308],
	"BRIDGE":    _SecurityType_name[308:332],
	"BUYSELL":   _SecurityType_name[332:357],
	"CAMM":      _SecurityType_name[357:392],
	"CAN":       _SecurityType_name[392:428],
	"CASH":      _SecurityType_name[428:445],
	"CB":        _SecurityType_name[445:474],
	"CD":        _SecurityType_name[474:509],
	"CDS":       _SecurityType_name[509:541],
	"CL":        _SecurityType_name[541:564],
	"CMB":       _SecurityType_name[564:600],
	"CMBS":      _SecurityType_name[600:644],
	"CMO":       _SecurityType_name[644:691],
	"COFO":      _SecurityType_name[691:729],
	"COFP":      _SecurityType_name[729:770],
	"CORP":      _SecurityType_name[770:797],
	"CP":        _SecurityType_name[797:826],
	"CPP":       _SecurityType_name[826:866],
	"CS":        _SecurityType_name[866:891],
	"CTB":       _SecurityType_name[891:927],
	"DEFLTED":   _SecurityType_name[927:949],
	"DINP":      _SecurityType_name[949:982],
	"DN":        _SecurityType_name[982:1008],
	"DUAL":      _SecurityType_name[1008:1034],
	"EUCD":      _SecurityType_name[1034:1074],
	"EUCORP":    _SecurityType_name[1074:1106],
	"EUCP":      _SecurityType_name[1106:1140],
	"EUFRN":     _SecurityType_name[1140:1187],
	"EUSOV":     _SecurityType_name[1187:1215],
	"EUSUPRA":   _SecurityType_name[1215:1254],
	"FAC":       _SecurityType_name[1254:1288],
	"FADN":      _SecurityType_name[1288:1329],
	"FHA":       _SecurityType_name[1329:1367],
	"FHL":       _SecurityType_name[1367:1397],
	"FN":        _SecurityType_name[1397:1447],
	"FOR":       _SecurityType_name[1447:1485],
	"FORWARD":   _SecurityType_name[1485:1505],
	"FRN":       _SecurityType_name[1505:1550],
	"FUT":       _SecurityType_name[1550:1569],
	"FXFWD":     _SecurityType_name[1569:1592],
	"FXNDF":     _SecurityType_name[1592:1628],
	"FXSPOT":    _SecurityType_name[1628:1648],
	"FXSWAP":    _SecurityType_name[1648:1668],
	"GN":        _SecurityType_name[1668:1721],
	"GO":        _SecurityType_name[1721:1758],
	"GOVT":      _SecurityType_name[1758:1803],
	"IET":       _SecurityType_name[1803:1831],
	"IRS":       _SecurityType_name[1831:1862],
	"LOFC":      _SecurityType_name[1862:1891],
	"LQN":       _SecurityType_name[1891:1918],
	"MATURED":   _SecurityType_name[1918:1938],
	"MBS":       _SecurityType_name[1938:1977],
	"MF":        _SecurityType_name[1977:2001],
	"MIO":       _SecurityType_name[2001:2036],
	"MLEG":      _SecurityType_name[2036:2068],
	"MPO":       _SecurityType_name[2068:2104],
	"MPP":       _SecurityType_name[2104:2143],
	"MPT":       _SecurityType_name[2143:2182],
	"MT":        _SecurityType_name[2182:2211],
	"MTN":       _SecurityType_name[2211:2241],
	"MUNI":      _SecurityType_name[2241:2268],
	"NONE":      _SecurityType_name[2268:2297],
	"ONITE":     _SecurityType_name[2297:2319],
	"OOC":       _SecurityType_name[2319:2348],
	"OOF":       _SecurityType_name[2348:2379],
	"OOP":       _SecurityType_name[2379:2411],
	"OPT":       _SecurityType_name[2411:2430],
	"PEF":       _SecurityType_name[2430:2465],
	"PFAND":     _SecurityType_name[2465:2489],
	"PN":        _SecurityType_name[2489:2517],
	"POOL":      _SecurityType_name[2517:2542],
	"PROV":      _SecurityType_name[2542:2580],
	"PS":        _SecurityType_name[2580:2608],
	"PZFJ":      _SecurityType_name[2608:2633],
	"RAN":       _SecurityType_name[2633:2671],
	"REPLACD":   _SecurityType_name[2671:2692],
	"REPO":      _SecurityType_name[2692:2715],
	"RETIRED":   _SecurityType_name[2715:2735],
	"REV":       _SecurityType_name[2735:2761],
	"RP":        _SecurityType_name[2761:2794],
	"RVLV":      _SecurityType_name[2794:2820],
	"RVLVTRM":   _SecurityType_name[2820:2851],
	"RVRP":      _SecurityType_name[2851:2892],
	"SECLOAN":   _SecurityType_name[2892:2920],
	"SECPLEDGE": _SecurityType_name[2920:2950],
	"SL":        _SecurityType_name[2950:2997],
	"SLQN":      _SecurityType_name[2997:3032],
	"SPCLA":     _SecurityType_name[3032:3063],
	"SPCLO":     _SecurityType_name[3063:3094],
	"SPCLT":     _SecurityType_name[3094:3118],
	"STN":       _SecurityType_name[3118:3151],
	"STRUCT":    _SecurityType_name[3151:3180],
	"SUPRA":     _SecurityType_name[3180:3218],
	"SWING":     _SecurityType_name[3218:3250],
	"TAN":       _SecurityType_name[3250:3284],
	"TAXA":      _SecurityType_name[3284:3311],
	"TB":        _SecurityType_name[3311:3337],
	"TBA":       _SecurityType_name[3337:3365],
	"TBILL":     _SecurityType_name[3365:3400],
	"TBOND":     _SecurityType_name[3400:3429],
	"TCAL":      _SecurityType_name[3429:3484],
	"TD":        _SecurityType_name[3484:3509],
	"TECP":      _SecurityType_name[3509:3549],
	"TERM":      _SecurityType_name[3549:3571],
	"TINT":      _SecurityType_name[3571:3620],
	"TIPS":      _SecurityType_name[3620:3672],
	"TLQN":      _SecurityType_name[3672:3704],
	"TMCP":      _SecurityType_name[3704:3737],
	"TNOTE":     _SecurityType_name[3737:3772],
	"TPRN":      _SecurityType_name[3772:3833],
	"TRAN":      _SecurityType_name[3833:3875],
	"UST":       _SecurityType_name[3875:3908],
	"USTB":      _SecurityType_name[3908:3942],
	"VRDN":      _SecurityType_name[3942:3980],
	"WAR":       _SecurityType_name[3980:4000],
	"WITHDRN":   _SecurityType_name[4000:4022],
	"WLD":       _SecurityType_name[4022:4049],
	"XCN":       _SecurityType_name[4049:4080],
	"XLINKD":    _SecurityType_name[4080:4107],
	"YANK":      _SecurityType_name[4107:4141],
	"YCD":       _SecurityType_name[4141:4183],
	"ZOO":       _SecurityType_name[4183:4213],
}

func (i SecurityType) String() string {
	if str, ok := _SecurityType_map[i]; ok {
		return str
	}
	return "SecurityType(" + i.String() + ")"
}

const _SecurityUpdateAction_name = "SecurityUpdateAction_ADDSecurityUpdateAction_DELETESecurityUpdateAction_MODIFY"

var _SecurityUpdateAction_map = map[SecurityUpdateAction]string{
	"A": _SecurityUpdateAction_name[0:24],
	"D": _SecurityUpdateAction_name[24:51],
	"M": _SecurityUpdateAction_name[51:78],
}

func (i SecurityUpdateAction) String() string {
	if str, ok := _SecurityUpdateAction_map[i]; ok {
		return str
	}
	return "SecurityUpdateAction(" + i.String() + ")"
}

const _Seniority_name = "Seniority_SUBORDINATEDSeniority_SENIOR_SECUREDSeniority_SENIOR"

var _Seniority_map = map[Seniority]string{
	"SB": _Seniority_name[0:22],
	"SD": _Seniority_name[22:46],
	"SR": _Seniority_name[46:62],
}

func (i Seniority) String() string {
	if str, ok := _Seniority_map[i]; ok {
		return str
	}
	return "Seniority(" + i.String() + ")"
}

const _SessionRejectReason_name = "SessionRejectReason_INVALID_TAG_NUMBERSessionRejectReason_REQUIRED_TAG_MISSINGSessionRejectReason_SENDINGTIME_ACCURACY_PROBLEMSessionRejectReason_INVALID_MSGTYPESessionRejectReason_XML_VALIDATION_ERRORSessionRejectReason_TAG_APPEARS_MORE_THAN_ONCESessionRejectReason_TAG_SPECIFIED_OUT_OF_REQUIRED_ORDERSessionRejectReason_REPEATING_GROUP_FIELDS_OUT_OF_ORDERSessionRejectReason_INCORRECT_NUMINGROUP_COUNT_FOR_REPEATING_GROUPSessionRejectReason_NON_DATA_VALUE_INCLUDES_FIELD_DELIMITERSessionRejectReason_INVALID_UNSUPPORTED_APPLICATION_VERSIONSessionRejectReason_TAG_NOT_DEFINED_FOR_THIS_MESSAGE_TYPESessionRejectReason_UNDEFINED_TAGSessionRejectReason_TAG_SPECIFIED_WITHOUT_A_VALUESessionRejectReason_VALUE_IS_INCORRECTSessionRejectReason_INCORRECT_DATA_FORMAT_FOR_VALUESessionRejectReason_DECRYPTION_PROBLEMSessionRejectReason_SIGNATURE_PROBLEMSessionRejectReason_COMPID_PROBLEMSessionRejectReason_OTHER"

var _SessionRejectReason_map = map[SessionRejectReason]string{
	"0":  _SessionRejectReason_name[0:38],
	"1":  _SessionRejectReason_name[38:78],
	"10": _SessionRejectReason_name[78:126],
	"11": _SessionRejectReason_name[126:161],
	"12": _SessionRejectReason_name[161:201],
	"13": _SessionRejectReason_name[201:247],
	"14": _SessionRejectReason_name[247:302],
	"15": _SessionRejectReason_name[302:357],
	"16": _SessionRejectReason_name[357:423],
	"17": _SessionRejectReason_name[423:482],
	"18": _SessionRejectReason_name[482:541],
	"2":  _SessionRejectReason_name[541:598],
	"3":  _SessionRejectReason_name[598:631],
	"4":  _SessionRejectReason_name[631:680],
	"5":  _SessionRejectReason_name[680:718],
	"6":  _SessionRejectReason_name[718:769],
	"7":  _SessionRejectReason_name[769:807],
	"8":  _SessionRejectReason_name[807:844],
	"9":  _SessionRejectReason_name[844:878],
	"99": _SessionRejectReason_name[878:903],
}

func (i SessionRejectReason) String() string {
	if str, ok := _SessionRejectReason_map[i]; ok {
		return str
	}
	return "SessionRejectReason(" + i.String() + ")"
}

const _SessionStatus_name = "SessionStatus_SESSION_ACTIVESessionStatus_SESSION_PASSWORD_CHANGEDSessionStatus_SESSION_PASSWORD_DUE_TO_EXPIRESessionStatus_NEW_SESSION_PASSWORD_DOES_NOT_COMPLY_WITH_POLICYSessionStatus_SESSION_LOGOUT_COMPLETESessionStatus_INVALID_USERNAME_OR_PASSWORDSessionStatus_ACCOUNT_LOCKEDSessionStatus_LOGONS_ARE_NOT_ALLOWED_AT_THIS_TIMESessionStatus_PASSWORD_EXPIRED"

var _SessionStatus_map = map[SessionStatus]string{
	"0": _SessionStatus_name[0:28],
	"1": _SessionStatus_name[28:66],
	"2": _SessionStatus_name[66:110],
	"3": _SessionStatus_name[110:172],
	"4": _SessionStatus_name[172:209],
	"5": _SessionStatus_name[209:251],
	"6": _SessionStatus_name[251:279],
	"7": _SessionStatus_name[279:328],
	"8": _SessionStatus_name[328:358],
}

func (i SessionStatus) String() string {
	if str, ok := _SessionStatus_map[i]; ok {
		return str
	}
	return "SessionStatus(" + i.String() + ")"
}

const _SettlCurrFxRateCalc_name = "SettlCurrFxRateCalc_DIVIDESettlCurrFxRateCalc_MULTIPLY"

var _SettlCurrFxRateCalc_map = map[SettlCurrFxRateCalc]string{
	"D": _SettlCurrFxRateCalc_name[0:26],
	"M": _SettlCurrFxRateCalc_name[26:54],
}

func (i SettlCurrFxRateCalc) String() string {
	if str, ok := _SettlCurrFxRateCalc_map[i]; ok {
		return str
	}
	return "SettlCurrFxRateCalc(" + i.String() + ")"
}

const _SettlDeliveryType_name = "SettlDeliveryType_VERSUS_PAYMENT_DELIVERSettlDeliveryType_FREE_DELIVERSettlDeliveryType_TRI_PARTYSettlDeliveryType_HOLD_IN_CUSTODY"

var _SettlDeliveryType_map = map[SettlDeliveryType]string{
	"0": _SettlDeliveryType_name[0:40],
	"1": _SettlDeliveryType_name[40:70],
	"2": _SettlDeliveryType_name[70:97],
	"3": _SettlDeliveryType_name[97:130],
}

func (i SettlDeliveryType) String() string {
	if str, ok := _SettlDeliveryType_map[i]; ok {
		return str
	}
	return "SettlDeliveryType(" + i.String() + ")"
}

const _SettlInstMode_name = "SettlInstMode_DEFAULTSettlInstMode_STANDING_INSTRUCTIONS_PROVIDEDSettlInstMode_SPECIFIC_ALLOCATION_ACCOUNT_OVERRIDINGSettlInstMode_SPECIFIC_ALLOCATION_ACCOUNT_STANDINGSettlInstMode_SPECIFIC_ORDER_FOR_A_SINGLE_ACCOUNTSettlInstMode_REQUEST_REJECT"

var _SettlInstMode_map = map[SettlInstMode]string{
	"0": _SettlInstMode_name[0:21],
	"1": _SettlInstMode_name[21:65],
	"2": _SettlInstMode_name[65:117],
	"3": _SettlInstMode_name[117:167],
	"4": _SettlInstMode_name[167:216],
	"5": _SettlInstMode_name[216:244],
}

func (i SettlInstMode) String() string {
	if str, ok := _SettlInstMode_map[i]; ok {
		return str
	}
	return "SettlInstMode(" + i.String() + ")"
}

const _SettlInstReqRejCode_name = "SettlInstReqRejCode_UNABLE_TO_PROCESS_REQUESTSettlInstReqRejCode_UNKNOWN_ACCOUNTSettlInstReqRejCode_NO_MATCHING_SETTLEMENT_INSTRUCTIONS_FOUNDSettlInstReqRejCode_OTHER"

var _SettlInstReqRejCode_map = map[SettlInstReqRejCode]string{
	"0":  _SettlInstReqRejCode_name[0:45],
	"1":  _SettlInstReqRejCode_name[45:80],
	"2":  _SettlInstReqRejCode_name[80:141],
	"99": _SettlInstReqRejCode_name[141:166],
}

func (i SettlInstReqRejCode) String() string {
	if str, ok := _SettlInstReqRejCode_map[i]; ok {
		return str
	}
	return "SettlInstReqRejCode(" + i.String() + ")"
}

const _SettlInstSource_name = "SettlInstSource_BROKERS_INSTRUCTIONSSettlInstSource_INSTITUTIONS_INSTRUCTIONSSettlInstSource_INVESTOR"

var _SettlInstSource_map = map[SettlInstSource]string{
	"1": _SettlInstSource_name[0:36],
	"2": _SettlInstSource_name[36:77],
	"3": _SettlInstSource_name[77:101],
}

func (i SettlInstSource) String() string {
	if str, ok := _SettlInstSource_map[i]; ok {
		return str
	}
	return "SettlInstSource(" + i.String() + ")"
}

const _SettlInstTransType_name = "SettlInstTransType_CANCELSettlInstTransType_NEWSettlInstTransType_REPLACESettlInstTransType_RESTATE"

var _SettlInstTransType_map = map[SettlInstTransType]string{
	"C": _SettlInstTransType_name[0:25],
	"N": _SettlInstTransType_name[25:47],
	"R": _SettlInstTransType_name[47:73],
	"T": _SettlInstTransType_name[73:99],
}

func (i SettlInstTransType) String() string {
	if str, ok := _SettlInstTransType_map[i]; ok {
		return str
	}
	return "SettlInstTransType(" + i.String() + ")"
}

const _SettlLocation_name = "SettlLocation_CEDELSettlLocation_DEPOSITORY_TRUST_COMPANYSettlLocation_EURO_CLEARSettlLocation_FEDERAL_BOOK_ENTRYSettlLocation_LOCAL_MARKET_SETTLE_LOCATIONSettlLocation_PHYSICALSettlLocation_PARTICIPANT_TRUST_COMPANY"

var _SettlLocation_map = map[SettlLocation]string{
	"CED":              _SettlLocation_name[0:19],
	"DTC":              _SettlLocation_name[19:57],
	"EUR":              _SettlLocation_name[57:81],
	"FED":              _SettlLocation_name[81:113],
	"ISO_Country_Code": _SettlLocation_name[113:155],
	"PNY":              _SettlLocation_name[155:177],
	"PTC":              _SettlLocation_name[177:216],
}

func (i SettlLocation) String() string {
	if str, ok := _SettlLocation_map[i]; ok {
		return str
	}
	return "SettlLocation(" + i.String() + ")"
}

const _SettlMethod_name = "SettlMethod_CASH_SETTLEMENT_REQUIREDSettlMethod_PHYSICAL_SETTLEMENT_REQUIRED"

var _SettlMethod_map = map[SettlMethod]string{
	"C": _SettlMethod_name[0:36],
	"P": _SettlMethod_name[36:76],
}

func (i SettlMethod) String() string {
	if str, ok := _SettlMethod_map[i]; ok {
		return str
	}
	return "SettlMethod(" + i.String() + ")"
}

const _SettlObligMode_name = "SettlObligMode_PRELIMINARYSettlObligMode_FINAL"

var _SettlObligMode_map = map[SettlObligMode]string{
	"1": _SettlObligMode_name[0:26],
	"2": _SettlObligMode_name[26:46],
}

func (i SettlObligMode) String() string {
	if str, ok := _SettlObligMode_map[i]; ok {
		return str
	}
	return "SettlObligMode(" + i.String() + ")"
}

const _SettlObligSource_name = "SettlObligSource_INSTRUCTIONS_OF_BROKERSettlObligSource_INSTRUCTIONS_FOR_INSTITUTIONSettlObligSource_INVESTOR"

var _SettlObligSource_map = map[SettlObligSource]string{
	"1": _SettlObligSource_name[0:39],
	"2": _SettlObligSource_name[39:84],
	"3": _SettlObligSource_name[84:109],
}

func (i SettlObligSource) String() string {
	if str, ok := _SettlObligSource_map[i]; ok {
		return str
	}
	return "SettlObligSource(" + i.String() + ")"
}

const _SettlObligTransType_name = "SettlObligTransType_CANCELSettlObligTransType_NEWSettlObligTransType_REPLACESettlObligTransType_RESTATE"

var _SettlObligTransType_map = map[SettlObligTransType]string{
	"C": _SettlObligTransType_name[0:26],
	"N": _SettlObligTransType_name[26:49],
	"R": _SettlObligTransType_name[49:76],
	"T": _SettlObligTransType_name[76:103],
}

func (i SettlObligTransType) String() string {
	if str, ok := _SettlObligTransType_map[i]; ok {
		return str
	}
	return "SettlObligTransType(" + i.String() + ")"
}

const _SettlPriceType_name = "SettlPriceType_FINALSettlPriceType_THEORETICAL"

var _SettlPriceType_map = map[SettlPriceType]string{
	"1": _SettlPriceType_name[0:20],
	"2": _SettlPriceType_name[20:46],
}

func (i SettlPriceType) String() string {
	if str, ok := _SettlPriceType_map[i]; ok {
		return str
	}
	return "SettlPriceType(" + i.String() + ")"
}

const _SettlSessID_name = "SettlSessID_END_OF_DAYSettlSessID_ELECTRONIC_TRADING_HOURSSettlSessID_INTRADAYSettlSessID_REGULAR_TRADING_HOURS"

var _SettlSessID_map = map[SettlSessID]string{
	"EOD": _SettlSessID_name[0:22],
	"ETH": _SettlSessID_name[22:58],
	"ITD": _SettlSessID_name[58:78],
	"RTH": _SettlSessID_name[78:111],
}

func (i SettlSessID) String() string {
	if str, ok := _SettlSessID_map[i]; ok {
		return str
	}
	return "SettlSessID(" + i.String() + ")"
}

const _SettlType_name = "SettlType_REGULARSettlType_CASHSettlType_NEXT_DAYSettlType_T_PLUS_2SettlType_T_PLUS_3SettlType_T_PLUS_4SettlType_FUTURESettlType_WHEN_AND_IF_ISSUEDSettlType_SELLERS_OPTIONSettlType_T_PLUS_5SettlType_BROKEN_DATESettlType_FX_SPOT_NEXT_SETTLEMENT"

var _SettlType_map = map[SettlType]string{
	"0": _SettlType_name[0:17],
	"1": _SettlType_name[17:31],
	"2": _SettlType_name[31:49],
	"3": _SettlType_name[49:67],
	"4": _SettlType_name[67:85],
	"5": _SettlType_name[85:103],
	"6": _SettlType_name[103:119],
	"7": _SettlType_name[119:147],
	"8": _SettlType_name[147:171],
	"9": _SettlType_name[171:189],
	"B": _SettlType_name[189:210],
	"C": _SettlType_name[210:243],
}

func (i SettlType) String() string {
	if str, ok := _SettlType_map[i]; ok {
		return str
	}
	return "SettlType(" + i.String() + ")"
}

const _SettlmntTyp_name = "SettlmntTyp_REGULARSettlmntTyp_CASHSettlmntTyp_NEXT_DAYSettlmntTyp_T_PLUS_2SettlmntTyp_T_PLUS_3SettlmntTyp_T_PLUS_4SettlmntTyp_FUTURESettlmntTyp_WHEN_AND_IF_ISSUEDSettlmntTyp_SELLERS_OPTIONSettlmntTyp_T_PLUS_5SettlmntTyp_T_PLUS_1"

var _SettlmntTyp_map = map[SettlmntTyp]string{
	"0": _SettlmntTyp_name[0:19],
	"1": _SettlmntTyp_name[19:35],
	"2": _SettlmntTyp_name[35:55],
	"3": _SettlmntTyp_name[55:75],
	"4": _SettlmntTyp_name[75:95],
	"5": _SettlmntTyp_name[95:115],
	"6": _SettlmntTyp_name[115:133],
	"7": _SettlmntTyp_name[133:163],
	"8": _SettlmntTyp_name[163:189],
	"9": _SettlmntTyp_name[189:209],
	"A": _SettlmntTyp_name[209:229],
}

func (i SettlmntTyp) String() string {
	if str, ok := _SettlmntTyp_map[i]; ok {
		return str
	}
	return "SettlmntTyp(" + i.String() + ")"
}

const _ShortSaleReason_name = "ShortSaleReason_DEALER_SOLD_SHORTShortSaleReason_DEALER_SOLD_SHORT_EXEMPTShortSaleReason_SELLING_CUSTOMER_SOLD_SHORTShortSaleReason_SELLING_CUSTOMER_SOLD_SHORT_EXEMPTShortSaleReason_QUALIFIED_SERVICE_REPRESENTATIVEShortSaleReason_QSR_OR_AGU_CONTRA_SIDE_SOLD_SHORT_EXEMPT"

var _ShortSaleReason_map = map[ShortSaleReason]string{
	"0": _ShortSaleReason_name[0:33],
	"1": _ShortSaleReason_name[33:73],
	"2": _ShortSaleReason_name[73:116],
	"3": _ShortSaleReason_name[116:166],
	"4": _ShortSaleReason_name[166:214],
	"5": _ShortSaleReason_name[214:270],
}

func (i ShortSaleReason) String() string {
	if str, ok := _ShortSaleReason_map[i]; ok {
		return str
	}
	return "ShortSaleReason(" + i.String() + ")"
}

const _Side_name = "Side_BUYSide_SELLSide_BUY_MINUSSide_SELL_PLUSSide_SELL_SHORTSide_SELL_SHORT_EXEMPTSide_UNDISCLOSEDSide_CROSSSide_CROSS_SHORTSide_CROSS_SHORT_EXEMPTSide_AS_DEFINEDSide_OPPOSITESide_SUBSCRIBESide_REDEEMSide_LENDSide_BORROW"

var _Side_map = map[Side]string{
	"1": _Side_name[0:8],
	"2": _Side_name[8:17],
	"3": _Side_name[17:31],
	"4": _Side_name[31:45],
	"5": _Side_name[45:60],
	"6": _Side_name[60:82],
	"7": _Side_name[82:98],
	"8": _Side_name[98:108],
	"9": _Side_name[108:124],
	"A": _Side_name[124:147],
	"B": _Side_name[147:162],
	"C": _Side_name[162:175],
	"D": _Side_name[175:189],
	"E": _Side_name[189:200],
	"F": _Side_name[200:209],
	"G": _Side_name[209:220],
}

func (i Side) String() string {
	if str, ok := _Side_map[i]; ok {
		return str
	}
	return "Side(" + i.String() + ")"
}

const _SideMultiLegReportingType_name = "SideMultiLegReportingType_SINGLE_SECURITYSideMultiLegReportingType_INDIVIDUAL_LEG_OF_A_MULTILEG_SECURITYSideMultiLegReportingType_MULTILEG_SECURITY"

var _SideMultiLegReportingType_map = map[SideMultiLegReportingType]string{
	"1": _SideMultiLegReportingType_name[0:41],
	"2": _SideMultiLegReportingType_name[41:104],
	"3": _SideMultiLegReportingType_name[104:147],
}

func (i SideMultiLegReportingType) String() string {
	if str, ok := _SideMultiLegReportingType_map[i]; ok {
		return str
	}
	return "SideMultiLegReportingType(" + i.String() + ")"
}

const _SideTrdSubTyp_name = "SideTrdSubTyp_CMTASideTrdSubTyp_INTERNAL_TRANSFERSideTrdSubTyp_TRANSACTION_FROM_ASSIGNMENTSideTrdSubTyp_EXTERNAL_TRANSFERSideTrdSubTyp_REJECT_FOR_SUBMITTING_TRADESideTrdSubTyp_ADVISORY_FOR_CONTRA_SIDESideTrdSubTyp_OFFSET_DUE_TO_AN_ALLOCATIONSideTrdSubTyp_ONSET_DUE_TO_AN_ALLOCATIONSideTrdSubTyp_DIFFERENTIAL_SPREADSideTrdSubTyp_IMPLIED_SPREAD_LEG_EXECUTED_AGAINST_AN_OUTRIGHTSideTrdSubTyp_TRANSACTION_FROM_EXERCISE"

var _SideTrdSubTyp_map = map[SideTrdSubTyp]string{
	"0":  _SideTrdSubTyp_name[0:18],
	"1":  _SideTrdSubTyp_name[18:49],
	"10": _SideTrdSubTyp_name[49:90],
	"2":  _SideTrdSubTyp_name[90:121],
	"3":  _SideTrdSubTyp_name[121:162],
	"4":  _SideTrdSubTyp_name[162:200],
	"5":  _SideTrdSubTyp_name[200:241],
	"6":  _SideTrdSubTyp_name[241:281],
	"7":  _SideTrdSubTyp_name[281:314],
	"8":  _SideTrdSubTyp_name[314:375],
	"9":  _SideTrdSubTyp_name[375:414],
}

func (i SideTrdSubTyp) String() string {
	if str, ok := _SideTrdSubTyp_map[i]; ok {
		return str
	}
	return "SideTrdSubTyp(" + i.String() + ")"
}

const _SideValueInd_name = "SideValueInd_SIDE_VALUE_1SideValueInd_SIDE_VALUE_2"

var _SideValueInd_map = map[SideValueInd]string{
	"1": _SideValueInd_name[0:25],
	"2": _SideValueInd_name[25:50],
}

func (i SideValueInd) String() string {
	if str, ok := _SideValueInd_map[i]; ok {
		return str
	}
	return "SideValueInd(" + i.String() + ")"
}

const _SolicitedFlag_name = "SolicitedFlag_NOSolicitedFlag_YES"

var _SolicitedFlag_map = map[SolicitedFlag]string{
	"N": _SolicitedFlag_name[0:16],
	"Y": _SolicitedFlag_name[16:33],
}

func (i SolicitedFlag) String() string {
	if str, ok := _SolicitedFlag_map[i]; ok {
		return str
	}
	return "SolicitedFlag(" + i.String() + ")"
}

const _StandInstDbType_name = "StandInstDbType_OTHERStandInstDbType_DTC_SIDStandInstDbType_THOMSON_ALERTStandInstDbType_A_GLOBAL_CUSTODIANStandInstDbType_ACCOUNTNET"

var _StandInstDbType_map = map[StandInstDbType]string{
	"0": _StandInstDbType_name[0:21],
	"1": _StandInstDbType_name[21:44],
	"2": _StandInstDbType_name[44:73],
	"3": _StandInstDbType_name[73:107],
	"4": _StandInstDbType_name[107:133],
}

func (i StandInstDbType) String() string {
	if str, ok := _StandInstDbType_map[i]; ok {
		return str
	}
	return "StandInstDbType(" + i.String() + ")"
}

const _StatsType_name = "StatsType_EXCHANGE_LASTStatsType_HIGHStatsType_AVERAGE_PRICEStatsType_TURNOVER"

var _StatsType_map = map[StatsType]string{
	"1": _StatsType_name[0:23],
	"2": _StatsType_name[23:37],
	"3": _StatsType_name[37:60],
	"4": _StatsType_name[60:78],
}

func (i StatsType) String() string {
	if str, ok := _StatsType_map[i]; ok {
		return str
	}
	return "StatsType(" + i.String() + ")"
}

const _StatusValue_name = "StatusValue_CONNECTEDStatusValue_NOT_CONNECTED_2StatusValue_NOT_CONNECTED_3StatusValue_IN_PROCESS"

var _StatusValue_map = map[StatusValue]string{
	"1": _StatusValue_name[0:21],
	"2": _StatusValue_name[21:48],
	"3": _StatusValue_name[48:75],
	"4": _StatusValue_name[75:97],
}

func (i StatusValue) String() string {
	if str, ok := _StatusValue_map[i]; ok {
		return str
	}
	return "StatusValue(" + i.String() + ")"
}

const _StipulationType_name = "StipulationType_ABSOLUTE_PREPAYMENT_SPEEDStipulationType_ALTERNATIVE_MINIMUM_TAXStipulationType_AUTO_REINVESTMENT_AT_RATE_OR_BETTERStipulationType_AVAILABLE_OFFER_QUANTITY_TO_BE_SHOWN_TO_THE_STREETStipulationType_AVERAGE_FICO_SCOREStipulationType_AVERAGE_LOAN_SIZEStipulationType_BANK_QUALIFIEDStipulationType_BARGAIN_CONDITIONSStipulationType_BROKERS_SALES_CREDITStipulationType_COUPON_RANGEStipulationType_CONSTANT_PREPAYMENT_PENALTYStipulationType_CONSTANT_PREPAYMENT_RATEStipulationType_CONSTANT_PREPAYMENT_YIELDStipulationType_ISO_CURRENCY_CODEStipulationType_CUSTOM_START_END_DATEStipulationType_DISCOUNT_RATEStipulationType_GEOGRAPHICS_AND_RANGEStipulationType_VALUATION_DISCOUNTStipulationType_FINAL_CPR_OF_HOME_EQUITY_PREPAYMENT_CURVEStipulationType_INSUREDStipulationType_OFFER_PRICE_TO_BE_SHOWN_TO_INTERNAL_BROKERSStipulationType_OFFER_QUANTITY_TO_BE_SHOWN_TO_INTERNAL_BROKERSStipulationType_YEAR_OR_YEAR_MONTH_OF_ISSUEStipulationType_ISSUERS_TICKERStipulationType_ISSUE_SIZE_RANGEStipulationType_THE_MINIMUM_RESIDUAL_OFFER_QUANTITYStipulationType_LOOKBACK_DAYSStipulationType_EXPLICIT_LOT_IDENTIFIERStipulationType_LOT_VARIANCEStipulationType_MATURITY_YEAR_AND_MONTHStipulationType_MATURITY_RANGEStipulationType_MAXIMUM_LOAN_BALANCEStipulationType_MAXIMUMDENOMINATIONStipulationType_MAXIMUM_ORDER_SIZEStipulationType_MAXIMUM_SUBSTITUTIONSStipulationType_PERCENT_OF_MANUFACTURED_HOUSING_PREPAYMENT_CURVEStipulationType_MINIMUM_DENOMINATIONStipulationType_MINIMUM_INCREMENTStipulationType_MINIMUM_QUANTITYStipulationType_MONTHLY_PREPAYMENT_RATEStipulationType_ORDER_QUANTITY_INCREMENTStipulationType_PAYMENT_FREQUENCY_CALENDARStipulationType_NUMBER_OF_PIECESStipulationType_POOLS_MAXIMUMStipulationType_POOLSMINIMUMStipulationType_POOL_IDENTIFIERStipulationType_PERCENT_OF_PROSPECTUS_PREPAYMENT_CURVEStipulationType_POOLS_PER_LOTStipulationType_POOLS_PER_MILLIONStipulationType_POOLS_PER_TRADEStipulationType_PRICE_RANGEStipulationType_PRICING_FREQUENCYStipulationType_PRIMARY_OR_SECONDARY_MARKET_INDICATORStipulationType_PRODUCTION_YEARStipulationType_CALL_PROTECTIONStipulationType_PERCENT_OF_BMA_PREPAYMENT_CURVEStipulationType_PURPOSEStipulationType_BENCHMARK_PRICE_SOURCEStipulationType_RATING_SOURCE_AND_RANGEStipulationType_TYPE_OF_REDEMPTIONStipulationType_INTEREST_OF_ROLLING_OR_CLOSING_TRADEStipulationType_PRINCIPAL_OF_ROLLING_OR_CLOSING_TRADEStipulationType_REFERENCE_TO_ROLLING_OR_CLOSING_TRADEStipulationType_RESTRICTEDStipulationType_TYPE_OF_ROLL_TRADEStipulationType_BROKER_SALES_CREDIT_OVERRIDEStipulationType_MARKET_SECTORStipulationType_SECURITY_TYPE_INCLUDED_OR_EXCLUDEDStipulationType_SINGLE_MONTHLY_MORTALITYStipulationType_STRUCTUREStipulationType_SUBSTITUTIONS_FREQUENCYStipulationType_SUBSTITUTIONS_LEFTStipulationType_FREEFORM_TEXTStipulationType_TRADERS_CREDITStipulationType_TRADE_VARIANCEStipulationType_WEIGHTED_AVERAGE_COUPONStipulationType_WEIGHTED_AVERAGE_LIFE_COUPONStipulationType_WEIGHTED_AVERAGE_LOAN_AGEStipulationType_WEIGHTED_AVERAGE_MATURITYStipulationType_WHOLE_POOLStipulationType_YIELD_RANGEStipulationType_YIELD_TO_MATURITY"

var _StipulationType_map = map[StipulationType]string{
	"ABS":            _StipulationType_name[0:41],
	"AMT":            _StipulationType_name[41:80],
	"AUTOREINV":      _StipulationType_name[80:131],
	"AVAILQTY":       _StipulationType_name[131:197],
	"AVFICO":         _StipulationType_name[197:231],
	"AVSIZE":         _StipulationType_name[231:264],
	"BANKQUAL":       _StipulationType_name[264:294],
	"BGNCON":         _StipulationType_name[294:328],
	"BROKERCREDIT":   _StipulationType_name[328:364],
	"COUPON":         _StipulationType_name[364:392],
	"CPP":            _StipulationType_name[392:435],
	"CPR":            _StipulationType_name[435:475],
	"CPY":            _StipulationType_name[475:516],
	"CURRENCY":       _StipulationType_name[516:549],
	"CUSTOMDATE":     _StipulationType_name[549:586],
	"DISCOUNT":       _StipulationType_name[586:615],
	"GEOG":           _StipulationType_name[615:652],
	"HAIRCUT":        _StipulationType_name[652:686],
	"HEP":            _StipulationType_name[686:743],
	"INSURED":        _StipulationType_name[743:766],
	"INTERNALPX":     _StipulationType_name[766:825],
	"INTERNALQTY":    _StipulationType_name[825:887],
	"ISSUE":          _StipulationType_name[887:930],
	"ISSUER":         _StipulationType_name[930:960],
	"ISSUESIZE":      _StipulationType_name[960:992],
	"LEAVEQTY":       _StipulationType_name[992:1043],
	"LOOKBACK":       _StipulationType_name[1043:1072],
	"LOT":            _StipulationType_name[1072:1111],
	"LOTVAR":         _StipulationType_name[1111:1139],
	"MAT":            _StipulationType_name[1139:1178],
	"MATURITY":       _StipulationType_name[1178:1208],
	"MAXBAL":         _StipulationType_name[1208:1244],
	"MAXDNOM":        _StipulationType_name[1244:1279],
	"MAXORDQTY":      _StipulationType_name[1279:1313],
	"MAXSUBS":        _StipulationType_name[1313:1350],
	"MHP":            _StipulationType_name[1350:1414],
	"MINDNOM":        _StipulationType_name[1414:1450],
	"MININCR":        _StipulationType_name[1450:1483],
	"MINQTY":         _StipulationType_name[1483:1515],
	"MPR":            _StipulationType_name[1515:1554],
	"ORDRINCR":       _StipulationType_name[1554:1594],
	"PAYFREQ":        _StipulationType_name[1594:1636],
	"PIECES":         _StipulationType_name[1636:1668],
	"PMAX":           _StipulationType_name[1668:1697],
	"PMIN":           _StipulationType_name[1697:1725],
	"POOL":           _StipulationType_name[1725:1756],
	"PPC":            _StipulationType_name[1756:1810],
	"PPL":            _StipulationType_name[1810:1839],
	"PPM":            _StipulationType_name[1839:1872],
	"PPT":            _StipulationType_name[1872:1903],
	"PRICE":          _StipulationType_name[1903:1930],
	"PRICEFREQ":      _StipulationType_name[1930:1963],
	"PRIMARY":        _StipulationType_name[1963:2016],
	"PROD":           _StipulationType_name[2016:2047],
	"PROTECT":        _StipulationType_name[2047:2078],
	"PSA":            _StipulationType_name[2078:2125],
	"PURPOSE":        _StipulationType_name[2125:2148],
	"PXSOURCE":       _StipulationType_name[2148:2186],
	"RATING":         _StipulationType_name[2186:2225],
	"REDEMPTION":     _StipulationType_name[2225:2259],
	"REFINT":         _StipulationType_name[2259:2311],
	"REFPRIN":        _StipulationType_name[2311:2364],
	"REFTRADE":       _StipulationType_name[2364:2417],
	"RESTRICTED":     _StipulationType_name[2417:2443],
	"ROLLTYPE":       _StipulationType_name[2443:2477],
	"SALESCREDITOVR": _StipulationType_name[2477:2521],
	"SECTOR":         _StipulationType_name[2521:2550],
	"SECTYPE":        _StipulationType_name[2550:2600],
	"SMM":            _StipulationType_name[2600:2640],
	"STRUCT":         _StipulationType_name[2640:2665],
	"SUBSFREQ":       _StipulationType_name[2665:2704],
	"SUBSLEFT":       _StipulationType_name[2704:2738],
	"TEXT":           _StipulationType_name[2738:2767],
	"TRADERCREDIT":   _StipulationType_name[2767:2797],
	"TRDVAR":         _StipulationType_name[2797:2827],
	"WAC":            _StipulationType_name[2827:2866],
	"WAL":            _StipulationType_name[2866:2910],
	"WALA":           _StipulationType_name[2910:2951],
	"WAM":            _StipulationType_name[2951:2992],
	"WHOLE":          _StipulationType_name[2992:3018],
	"YIELD":          _StipulationType_name[3018:3045],
	"YTM":            _StipulationType_name[3045:3078],
}

func (i StipulationType) String() string {
	if str, ok := _StipulationType_map[i]; ok {
		return str
	}
	return "StipulationType(" + i.String() + ")"
}

const _StrategyParameterType_name = "StrategyParameterType_INTStrategyParameterType_AMTStrategyParameterType_PERCENTAGEStrategyParameterType_CHARStrategyParameterType_BOOLEANStrategyParameterType_STRINGStrategyParameterType_MULTIPLECHARVALUEStrategyParameterType_CURRENCYStrategyParameterType_EXCHANGEStrategyParameterType_MONTHYEARStrategyParameterType_UTCTIMESTAMPStrategyParameterType_LENGTHStrategyParameterType_UTCTIMEONLYStrategyParameterType_LOCALMKTDATEStrategyParameterType_UTCDATEONLYStrategyParameterType_DATAStrategyParameterType_MULTIPLESTRINGVALUEStrategyParameterType_COUNTRYStrategyParameterType_LANGUAGEStrategyParameterType_TZTIMEONLYStrategyParameterType_TZTIMESTAMPStrategyParameterType_TENORStrategyParameterType_NUMINGROUPStrategyParameterType_SEQNUMStrategyParameterType_TAGNUMStrategyParameterType_FLOATStrategyParameterType_QTYStrategyParameterType_PRICEStrategyParameterType_PRICEOFFSET"

var _StrategyParameterType_map = map[StrategyParameterType]string{
	"1":  _StrategyParameterType_name[0:25],
	"10": _StrategyParameterType_name[25:50],
	"11": _StrategyParameterType_name[50:82],
	"12": _StrategyParameterType_name[82:108],
	"13": _StrategyParameterType_name[108:137],
	"14": _StrategyParameterType_name[137:165],
	"15": _StrategyParameterType_name[165:204],
	"16": _StrategyParameterType_name[204:234],
	"17": _StrategyParameterType_name[234:264],
	"18": _StrategyParameterType_name[264:295],
	"19": _StrategyParameterType_name[295:329],
	"2":  _StrategyParameterType_name[329:357],
	"20": _StrategyParameterType_name[357:390],
	"21": _StrategyParameterType_name[390:424],
	"22": _StrategyParameterType_name[424:457],
	"23": _StrategyParameterType_name[457:483],
	"24": _StrategyParameterType_name[483:524],
	"25": _StrategyParameterType_name[524:553],
	"26": _StrategyParameterType_name[553:583],
	"27": _StrategyParameterType_name[583:615],
	"28": _StrategyParameterType_name[615:648],
	"29": _StrategyParameterType_name[648:675],
	"3":  _StrategyParameterType_name[675:707],
	"4":  _StrategyParameterType_name[707:735],
	"5":  _StrategyParameterType_name[735:763],
	"6":  _StrategyParameterType_name[763:790],
	"7":  _StrategyParameterType_name[790:815],
	"8":  _StrategyParameterType_name[815:842],
	"9":  _StrategyParameterType_name[842:875],
}

func (i StrategyParameterType) String() string {
	if str, ok := _StrategyParameterType_map[i]; ok {
		return str
	}
	return "StrategyParameterType(" + i.String() + ")"
}

const _StreamAsgnAckType_name = "StreamAsgnAckType_ASSIGNMENT_ACCEPTEDStreamAsgnAckType_ASSIGNMENT_REJECTED"

var _StreamAsgnAckType_map = map[StreamAsgnAckType]string{
	"0": _StreamAsgnAckType_name[0:37],
	"1": _StreamAsgnAckType_name[37:74],
}

func (i StreamAsgnAckType) String() string {
	if str, ok := _StreamAsgnAckType_map[i]; ok {
		return str
	}
	return "StreamAsgnAckType(" + i.String() + ")"
}

const _StreamAsgnRejReason_name = "StreamAsgnRejReason_UNKNOWN_CLIENTStreamAsgnRejReason_EXCEEDS_MAXIMUM_SIZEStreamAsgnRejReason_UNKNOWN_OR_INVALID_CURRENCY_PAIRStreamAsgnRejReason_NO_AVAILABLE_STREAMStreamAsgnRejReason_OTHER"

var _StreamAsgnRejReason_map = map[StreamAsgnRejReason]string{
	"0":  _StreamAsgnRejReason_name[0:34],
	"1":  _StreamAsgnRejReason_name[34:74],
	"2":  _StreamAsgnRejReason_name[74:126],
	"3":  _StreamAsgnRejReason_name[126:165],
	"99": _StreamAsgnRejReason_name[165:190],
}

func (i StreamAsgnRejReason) String() string {
	if str, ok := _StreamAsgnRejReason_map[i]; ok {
		return str
	}
	return "StreamAsgnRejReason(" + i.String() + ")"
}

const _StreamAsgnReqType_name = "StreamAsgnReqType_STREAM_ASSIGNMENT_FOR_NEW_CUSTOMERStreamAsgnReqType_STREAM_ASSIGNMENT_FOR_EXISTING_CUSTOMER"

var _StreamAsgnReqType_map = map[StreamAsgnReqType]string{
	"1": _StreamAsgnReqType_name[0:52],
	"2": _StreamAsgnReqType_name[52:109],
}

func (i StreamAsgnReqType) String() string {
	if str, ok := _StreamAsgnReqType_map[i]; ok {
		return str
	}
	return "StreamAsgnReqType(" + i.String() + ")"
}

const _StreamAsgnType_name = "StreamAsgnType_ASSIGNMENTStreamAsgnType_REJECTEDStreamAsgnType_TERMINATE_UNASSIGN"

var _StreamAsgnType_map = map[StreamAsgnType]string{
	"1": _StreamAsgnType_name[0:25],
	"2": _StreamAsgnType_name[25:48],
	"3": _StreamAsgnType_name[48:81],
}

func (i StreamAsgnType) String() string {
	if str, ok := _StreamAsgnType_map[i]; ok {
		return str
	}
	return "StreamAsgnType(" + i.String() + ")"
}

const _StrikePriceBoundaryMethod_name = "StrikePriceBoundaryMethod_LESS_THAN_UNDERLYING_PRICE_IS_IN_THE_MONEYStrikePriceBoundaryMethod_LESS_THAN_OR_EQUAL_TO_THE_UNDERLYING_PRICE_IS_IN_THE_MONEYStrikePriceBoundaryMethod_EQUAL_TO_THE_UNDERLYING_PRICE_IS_IN_THE_MONEYStrikePriceBoundaryMethod_GREATER_THAN_OR_EQUAL_TO_UNDERLYING_PRICE_IS_IN_THE_MONEYStrikePriceBoundaryMethod_GREATER_THAN_UNDERLYING_IS_IN_THE_MONEY"

var _StrikePriceBoundaryMethod_map = map[StrikePriceBoundaryMethod]string{
	"1": _StrikePriceBoundaryMethod_name[0:68],
	"2": _StrikePriceBoundaryMethod_name[68:152],
	"3": _StrikePriceBoundaryMethod_name[152:223],
	"4": _StrikePriceBoundaryMethod_name[223:306],
	"5": _StrikePriceBoundaryMethod_name[306:371],
}

func (i StrikePriceBoundaryMethod) String() string {
	if str, ok := _StrikePriceBoundaryMethod_map[i]; ok {
		return str
	}
	return "StrikePriceBoundaryMethod(" + i.String() + ")"
}

const _StrikePriceDeterminationMethod_name = "StrikePriceDeterminationMethod_FIXED_STRIKEStrikePriceDeterminationMethod_STRIKE_SET_AT_EXPIRATION_TO_UNDERLYING_OR_OTHER_VALUEStrikePriceDeterminationMethod_STRIKE_SET_TO_AVERAGE_OF_UNDERLYING_SETTLEMENT_PRICE_ACROSS_THE_LIFE_OF_THE_OPTIONStrikePriceDeterminationMethod_STRIKE_SET_TO_OPTIMAL_VALUE"

var _StrikePriceDeterminationMethod_map = map[StrikePriceDeterminationMethod]string{
	"1": _StrikePriceDeterminationMethod_name[0:43],
	"2": _StrikePriceDeterminationMethod_name[43:127],
	"3": _StrikePriceDeterminationMethod_name[127:240],
	"4": _StrikePriceDeterminationMethod_name[240:298],
}

func (i StrikePriceDeterminationMethod) String() string {
	if str, ok := _StrikePriceDeterminationMethod_map[i]; ok {
		return str
	}
	return "StrikePriceDeterminationMethod(" + i.String() + ")"
}

const _SubscriptionRequestType_name = "SubscriptionRequestType_SNAPSHOTSubscriptionRequestType_SNAPSHOT_PLUS_UPDATESSubscriptionRequestType_DISABLE_PREVIOUS_SNAPSHOT_PLUS_UPDATE_REQUEST"

var _SubscriptionRequestType_map = map[SubscriptionRequestType]string{
	"0": _SubscriptionRequestType_name[0:32],
	"1": _SubscriptionRequestType_name[32:77],
	"2": _SubscriptionRequestType_name[77:146],
}

func (i SubscriptionRequestType) String() string {
	if str, ok := _SubscriptionRequestType_map[i]; ok {
		return str
	}
	return "SubscriptionRequestType(" + i.String() + ")"
}

const _SymbolSfx_name = "SymbolSfx_EUCP_WITH_LUMP_SUM_INTEREST_RATHER_THAN_DISCOUNT_PRICESymbolSfx_WHEN_ISSUED_FOR_A_SECURITY_TO_BE_REISSUED_UNDER_AN_OLD_CUSIP_OR_ISIN"

var _SymbolSfx_map = map[SymbolSfx]string{
	"CD": _SymbolSfx_name[0:64],
	"WI": _SymbolSfx_name[64:142],
}

func (i SymbolSfx) String() string {
	if str, ok := _SymbolSfx_map[i]; ok {
		return str
	}
	return "SymbolSfx(" + i.String() + ")"
}

const _TargetStrategy_name = "TargetStrategy_VWAPTargetStrategy_RESERVEDANDAVAILABLEFORBILATERALLYAGREEDUPONUSERDEFINEDVALUESTargetStrategy_PARTICIPATETargetStrategy_MININIZE_MARKET_IMPACT"

var _TargetStrategy_map = map[TargetStrategy]string{
	"1":    _TargetStrategy_name[0:19],
	"1000": _TargetStrategy_name[19:95],
	"2":    _TargetStrategy_name[95:121],
	"3":    _TargetStrategy_name[121:158],
}

func (i TargetStrategy) String() string {
	if str, ok := _TargetStrategy_map[i]; ok {
		return str
	}
	return "TargetStrategy(" + i.String() + ")"
}

const _TaxAdvantageType_name = "TaxAdvantageType_NONE_NOT_APPLICABLETaxAdvantageType_MAXI_ISATaxAdvantageType_EMPLOYEE_10TaxAdvantageType_EMPLOYER_11TaxAdvantageType_EMPLOYER_12TaxAdvantageType_NON_FUND_PROTOTYPE_IRATaxAdvantageType_NON_FUND_QUALIFIED_PLANTaxAdvantageType_DEFINED_CONTRIBUTION_PLANTaxAdvantageType_INDIVIDUAL_RETIREMENT_ACCOUNT_16TaxAdvantageType_INDIVIDUAL_RETIREMENT_ACCOUNT_17TaxAdvantageType_KEOGHTaxAdvantageType_PROFIT_SHARING_PLANTaxAdvantageType_TESSATaxAdvantageType_401TaxAdvantageType_SELF_DIRECTED_IRATaxAdvantageType_403TaxAdvantageType_457TaxAdvantageType_ROTH_IRA_24TaxAdvantageType_ROTH_IRA_25TaxAdvantageType_ROTH_CONVERSION_IRA_26TaxAdvantageType_ROTH_CONVERSION_IRA_27TaxAdvantageType_EDUCATION_IRA_28TaxAdvantageType_EDUCATION_IRA_29TaxAdvantageType_MINI_CASH_ISATaxAdvantageType_MINI_STOCKS_AND_SHARES_ISATaxAdvantageType_MINI_INSURANCE_ISATaxAdvantageType_CURRENT_YEAR_PAYMENTTaxAdvantageType_PRIOR_YEAR_PAYMENTTaxAdvantageType_ASSET_TRANSFERTaxAdvantageType_EMPLOYEE_9TaxAdvantageType_OTHER"

var _TaxAdvantageType_map = map[TaxAdvantageType]string{
	"0":   _TaxAdvantageType_name[0:36],
	"1":   _TaxAdvantageType_name[36:61],
	"10":  _TaxAdvantageType_name[61:89],
	"11":  _TaxAdvantageType_name[89:117],
	"12":  _TaxAdvantageType_name[117:145],
	"13":  _TaxAdvantageType_name[145:184],
	"14":  _TaxAdvantageType_name[184:224],
	"15":  _TaxAdvantageType_name[224:266],
	"16":  _TaxAdvantageType_name[266:315],
	"17":  _TaxAdvantageType_name[315:364],
	"18":  _TaxAdvantageType_name[364:386],
	"19":  _TaxAdvantageType_name[386:422],
	"2":   _TaxAdvantageType_name[422:444],
	"20":  _TaxAdvantageType_name[444:464],
	"21":  _TaxAdvantageType_name[464:498],
	"22":  _TaxAdvantageType_name[498:518],
	"23":  _TaxAdvantageType_name[518:538],
	"24":  _TaxAdvantageType_name[538:566],
	"25":  _TaxAdvantageType_name[566:594],
	"26":  _TaxAdvantageType_name[594:633],
	"27":  _TaxAdvantageType_name[633:672],
	"28":  _TaxAdvantageType_name[672:705],
	"29":  _TaxAdvantageType_name[705:738],
	"3":   _TaxAdvantageType_name[738:768],
	"4":   _TaxAdvantageType_name[768:811],
	"5":   _TaxAdvantageType_name[811:846],
	"6":   _TaxAdvantageType_name[846:883],
	"7":   _TaxAdvantageType_name[883:918],
	"8":   _TaxAdvantageType_name[918:949],
	"9":   _TaxAdvantageType_name[949:976],
	"999": _TaxAdvantageType_name[976:998],
}

func (i TaxAdvantageType) String() string {
	if str, ok := _TaxAdvantageType_map[i]; ok {
		return str
	}
	return "TaxAdvantageType(" + i.String() + ")"
}

const _TerminationType_name = "TerminationType_OVERNIGHTTerminationType_TERMTerminationType_FLEXIBLETerminationType_OPEN"

var _TerminationType_map = map[TerminationType]string{
	"1": _TerminationType_name[0:25],
	"2": _TerminationType_name[25:45],
	"3": _TerminationType_name[45:69],
	"4": _TerminationType_name[69:89],
}

func (i TerminationType) String() string {
	if str, ok := _TerminationType_map[i]; ok {
		return str
	}
	return "TerminationType(" + i.String() + ")"
}

const _TestMessageIndicator_name = "TestMessageIndicator_NOTestMessageIndicator_YES"

var _TestMessageIndicator_map = map[TestMessageIndicator]string{
	"N": _TestMessageIndicator_name[0:23],
	"Y": _TestMessageIndicator_name[23:47],
}

func (i TestMessageIndicator) String() string {
	if str, ok := _TestMessageIndicator_map[i]; ok {
		return str
	}
	return "TestMessageIndicator(" + i.String() + ")"
}

const _TickDirection_name = "TickDirection_PLUS_TICKTickDirection_ZERO_PLUS_TICKTickDirection_MINUS_TICKTickDirection_ZERO_MINUS_TICK"

var _TickDirection_map = map[TickDirection]string{
	"0": _TickDirection_name[0:23],
	"1": _TickDirection_name[23:51],
	"2": _TickDirection_name[51:75],
	"3": _TickDirection_name[75:104],
}

func (i TickDirection) String() string {
	if str, ok := _TickDirection_map[i]; ok {
		return str
	}
	return "TickDirection(" + i.String() + ")"
}

const _TickRuleType_name = "TickRuleType_REGULARTickRuleType_VARIABLETickRuleType_FIXEDTickRuleType_TRADED_AS_A_SPREAD_LEGTickRuleType_SETTLED_AS_A_SPREAD_LEG"

var _TickRuleType_map = map[TickRuleType]string{
	"0": _TickRuleType_name[0:20],
	"1": _TickRuleType_name[20:41],
	"2": _TickRuleType_name[41:59],
	"3": _TickRuleType_name[59:94],
	"4": _TickRuleType_name[94:130],
}

func (i TickRuleType) String() string {
	if str, ok := _TickRuleType_map[i]; ok {
		return str
	}
	return "TickRuleType(" + i.String() + ")"
}

const _TimeInForce_name = "TimeInForce_DAYTimeInForce_GOOD_TILL_CANCELTimeInForce_AT_THE_OPENINGTimeInForce_IMMEDIATE_OR_CANCELTimeInForce_FILL_OR_KILLTimeInForce_GOOD_TILL_CROSSINGTimeInForce_GOOD_TILL_DATETimeInForce_AT_THE_CLOSETimeInForce_GOOD_THROUGH_CROSSINGTimeInForce_AT_CROSSING"

var _TimeInForce_map = map[TimeInForce]string{
	"0": _TimeInForce_name[0:15],
	"1": _TimeInForce_name[15:43],
	"2": _TimeInForce_name[43:69],
	"3": _TimeInForce_name[69:100],
	"4": _TimeInForce_name[100:124],
	"5": _TimeInForce_name[124:154],
	"6": _TimeInForce_name[154:180],
	"7": _TimeInForce_name[180:204],
	"8": _TimeInForce_name[204:237],
	"9": _TimeInForce_name[237:260],
}

func (i TimeInForce) String() string {
	if str, ok := _TimeInForce_map[i]; ok {
		return str
	}
	return "TimeInForce(" + i.String() + ")"
}

const _TimeUnit_name = "TimeUnit_DAYTimeUnit_HOURTimeUnit_MINUTETimeUnit_MONTHTimeUnit_SECONDTimeUnit_WEEKTimeUnit_YEAR"

var _TimeUnit_map = map[TimeUnit]string{
	"D":   _TimeUnit_name[0:12],
	"H":   _TimeUnit_name[12:25],
	"Min": _TimeUnit_name[25:40],
	"Mo":  _TimeUnit_name[40:54],
	"S":   _TimeUnit_name[54:69],
	"Wk":  _TimeUnit_name[69:82],
	"Yr":  _TimeUnit_name[82:95],
}

func (i TimeUnit) String() string {
	if str, ok := _TimeUnit_map[i]; ok {
		return str
	}
	return "TimeUnit(" + i.String() + ")"
}

const _TradSesEvent_name = "TradSesEvent_TRADING_RESUMESTradSesEvent_CHANGE_OF_TRADING_SESSIONTradSesEvent_CHANGE_OF_TRADING_SUBSESSIONTradSesEvent_CHANGE_OF_TRADING_STATUS"

var _TradSesEvent_map = map[TradSesEvent]string{
	"0": _TradSesEvent_name[0:28],
	"1": _TradSesEvent_name[28:66],
	"2": _TradSesEvent_name[66:107],
	"3": _TradSesEvent_name[107:144],
}

func (i TradSesEvent) String() string {
	if str, ok := _TradSesEvent_map[i]; ok {
		return str
	}
	return "TradSesEvent(" + i.String() + ")"
}

const _TradSesMethod_name = "TradSesMethod_ELECTRONICTradSesMethod_OPEN_OUTCRYTradSesMethod_TWO_PARTY"

var _TradSesMethod_map = map[TradSesMethod]string{
	"1": _TradSesMethod_name[0:24],
	"2": _TradSesMethod_name[24:49],
	"3": _TradSesMethod_name[49:72],
}

func (i TradSesMethod) String() string {
	if str, ok := _TradSesMethod_map[i]; ok {
		return str
	}
	return "TradSesMethod(" + i.String() + ")"
}

const _TradSesMode_name = "TradSesMode_TESTINGTradSesMode_SIMULATEDTradSesMode_PRODUCTION"

var _TradSesMode_map = map[TradSesMode]string{
	"1": _TradSesMode_name[0:19],
	"2": _TradSesMode_name[19:40],
	"3": _TradSesMode_name[40:62],
}

func (i TradSesMode) String() string {
	if str, ok := _TradSesMode_map[i]; ok {
		return str
	}
	return "TradSesMode(" + i.String() + ")"
}

const _TradSesStatus_name = "TradSesStatus_UNKNOWNTradSesStatus_HALTEDTradSesStatus_OPENTradSesStatus_CLOSEDTradSesStatus_PRE_OPENTradSesStatus_PRE_CLOSETradSesStatus_REQUEST_REJECTED"

var _TradSesStatus_map = map[TradSesStatus]string{
	"0": _TradSesStatus_name[0:21],
	"1": _TradSesStatus_name[21:41],
	"2": _TradSesStatus_name[41:59],
	"3": _TradSesStatus_name[59:79],
	"4": _TradSesStatus_name[79:101],
	"5": _TradSesStatus_name[101:124],
	"6": _TradSesStatus_name[124:154],
}

func (i TradSesStatus) String() string {
	if str, ok := _TradSesStatus_map[i]; ok {
		return str
	}
	return "TradSesStatus(" + i.String() + ")"
}

const _TradSesStatusRejReason_name = "TradSesStatusRejReason_UNKNOWN_OR_INVALID_TRADINGSESSIONIDTradSesStatusRejReason_OTHER"

var _TradSesStatusRejReason_map = map[TradSesStatusRejReason]string{
	"1":  _TradSesStatusRejReason_name[0:58],
	"99": _TradSesStatusRejReason_name[58:86],
}

func (i TradSesStatusRejReason) String() string {
	if str, ok := _TradSesStatusRejReason_map[i]; ok {
		return str
	}
	return "TradSesStatusRejReason(" + i.String() + ")"
}

const _TradeAllocIndicator_name = "TradeAllocIndicator_ALLOCATION_NOT_REQUIREDTradeAllocIndicator_ALLOCATION_REQUIREDTradeAllocIndicator_USE_ALLOCATION_PROVIDED_WITH_THE_TRADETradeAllocIndicator_ALLOCATION_GIVE_UP_EXECUTORTradeAllocIndicator_ALLOCATION_FROM_EXECUTORTradeAllocIndicator_ALLOCATION_TO_CLAIM_ACCOUNT"

var _TradeAllocIndicator_map = map[TradeAllocIndicator]string{
	"0": _TradeAllocIndicator_name[0:43],
	"1": _TradeAllocIndicator_name[43:82],
	"2": _TradeAllocIndicator_name[82:140],
	"3": _TradeAllocIndicator_name[140:187],
	"4": _TradeAllocIndicator_name[187:231],
	"5": _TradeAllocIndicator_name[231:278],
}

func (i TradeAllocIndicator) String() string {
	if str, ok := _TradeAllocIndicator_map[i]; ok {
		return str
	}
	return "TradeAllocIndicator(" + i.String() + ")"
}

const _TradeCondition_name = "TradeCondition_CANCELTradeCondition_IMPLIED_TRADETradeCondition_MARKETPLACE_ENTERED_TRADETradeCondition_MULT_ASSET_CLASS_MULTILEG_TRADETradeCondition_MULTILEG_TO_MULTILEG_TRADETradeCondition_CASHTradeCondition_SPREADTradeCondition_SPREAD_ETHTradeCondition_STRADDLETradeCondition_STRADDLE_ETHTradeCondition_STOPPEDTradeCondition_STOPPED_ETHTradeCondition_REGULAR_ETHTradeCondition_COMBOTradeCondition_COMBO_ETHTradeCondition_OFFICIAL_CLOSING_PRICETradeCondition_PRIOR_REFERENCE_PRICETradeCondition_STOPPED_SOLD_LASTTradeCondition_STOPPED_OUT_OF_SEQUENCETradeCondition_OFFICAL_CLOSING_PRICETradeCondition_CROSSED_AOTradeCondition_FAST_MARKETTradeCondition_AUTOMATIC_EXECUTIONTradeCondition_FORM_TTradeCondition_BASKET_INDEXTradeCondition_BURST_BASKETTradeCondition_OUTSIDE_SPREADTradeCondition_AVERAGE_PRICE_TRADETradeCondition_CASH_TRADETradeCondition_NEXT_DAYTradeCondition_OPENING_REOPENING_TRADE_DETAILTradeCondition_INTRADAY_TRADE_DETAILTradeCondition_RULE_127_TRADETradeCondition_RULE_155_TRADETradeCondition_SOLD_LASTTradeCondition_NEXT_DAY_TRADETradeCondition_OPENEDTradeCondition_SELLERTradeCondition_SOLDTradeCondition_STOPPED_STOCKTradeCondition_IMBALANCE_MORE_BUYERSTradeCondition_IMBALANCE_MORE_SELLERSTradeCondition_OPENING_PRICETradeCondition_BARGAIN_CONDITIONTradeCondition_CONVERTED_PRICE_INDICATORTradeCondition_EXCHANGE_LASTTradeCondition_FINAL_PRICE_OF_SESSIONTradeCondition_EX_PITTradeCondition_CROSSED_XTradeCondition_TRADES_RESULTING_FROM_MANUAL_SLOW_QUOTETradeCondition_TRADES_RESULTING_FROM_INTERMARKET_SWEEPTradeCondition_VOLUME_ONLYTradeCondition_DIRECT_PLUSTradeCondition_ACQUISITIONTradeCondition_BUNCHEDTradeCondition_DISTRIBUTIONTradeCondition_BUNCHED_SALETradeCondition_SPLIT_TRADETradeCondition_CANCEL_STOPPEDTradeCondition_CANCEL_ETHTradeCondition_CANCEL_STOPPED_ETHTradeCondition_OUT_OF_SEQUENCE_ETHTradeCondition_CANCEL_LAST_ETHTradeCondition_SOLD_LAST_SALE_ETHTradeCondition_CANCEL_LASTTradeCondition_SOLD_LAST_SALETradeCondition_CANCEL_OPENTradeCondition_CANCEL_OPEN_ETHTradeCondition_OPENED_SALE_ETHTradeCondition_CANCEL_ONLYTradeCondition_CANCEL_ONLY_ETHTradeCondition_LATE_OPEN_ETHTradeCondition_AUTO_EXECUTION_ETHTradeCondition_REOPENTradeCondition_REOPEN_ETHTradeCondition_ADJUSTEDTradeCondition_ADJUSTED_ETH"

var _TradeCondition_map = map[TradeCondition]string{
	"0":  _TradeCondition_name[0:21],
	"1":  _TradeCondition_name[21:49],
	"2":  _TradeCondition_name[49:89],
	"3":  _TradeCondition_name[89:135],
	"4":  _TradeCondition_name[135:176],
	"A":  _TradeCondition_name[176:195],
	"AA": _TradeCondition_name[195:216],
	"AB": _TradeCondition_name[216:241],
	"AC": _TradeCondition_name[241:264],
	"AD": _TradeCondition_name[264:291],
	"AE": _TradeCondition_name[291:313],
	"AF": _TradeCondition_name[313:339],
	"AG": _TradeCondition_name[339:365],
	"AH": _TradeCondition_name[365:385],
	"AI": _TradeCondition_name[385:409],
	"AJ": _TradeCondition_name[409:446],
	"AK": _TradeCondition_name[446:482],
	"AL": _TradeCondition_name[482:514],
	"AM": _TradeCondition_name[514:552],
	"AN": _TradeCondition_name[552:588],
	"AO": _TradeCondition_name[588:613],
	"AP": _TradeCondition_name[613:639],
	"AQ": _TradeCondition_name[639:673],
	"AR": _TradeCondition_name[673:694],
	"AS": _TradeCondition_name[694:721],
	"AT": _TradeCondition_name[721:748],
	"AV": _TradeCondition_name[748:777],
	"B":  _TradeCondition_name[777:811],
	"C":  _TradeCondition_name[811:836],
	"D":  _TradeCondition_name[836:859],
	"E":  _TradeCondition_name[859:904],
	"F":  _TradeCondition_name[904:940],
	"G":  _TradeCondition_name[940:969],
	"H":  _TradeCondition_name[969:998],
	"I":  _TradeCondition_name[998:1022],
	"J":  _TradeCondition_name[1022:1051],
	"K":  _TradeCondition_name[1051:1072],
	"L":  _TradeCondition_name[1072:1093],
	"M":  _TradeCondition_name[1093:1112],
	"N":  _TradeCondition_name[1112:1140],
	"P":  _TradeCondition_name[1140:1176],
	"Q":  _TradeCondition_name[1176:1213],
	"R":  _TradeCondition_name[1213:1241],
	"S":  _TradeCondition_name[1241:1273],
	"T":  _TradeCondition_name[1273:1313],
	"U":  _TradeCondition_name[1313:1341],
	"V":  _TradeCondition_name[1341:1378],
	"W":  _TradeCondition_name[1378:1399],
	"X":  _TradeCondition_name[1399:1423],
	"Y":  _TradeCondition_name[1423:1477],
	"Z":  _TradeCondition_name[1477:1531],
	"a":  _TradeCondition_name[1531:1557],
	"b":  _TradeCondition_name[1557:1583],
	"c":  _TradeCondition_name[1583:1609],
	"d":  _TradeCondition_name[1609:1631],
	"e":  _TradeCondition_name[1631:1658],
	"f":  _TradeCondition_name[1658:1685],
	"g":  _TradeCondition_name[1685:1711],
	"h":  _TradeCondition_name[1711:1740],
	"i":  _TradeCondition_name[1740:1765],
	"j":  _TradeCondition_name[1765:1798],
	"k":  _TradeCondition_name[1798:1832],
	"l":  _TradeCondition_name[1832:1862],
	"m":  _TradeCondition_name[1862:1895],
	"n":  _TradeCondition_name[1895:1921],
	"o":  _TradeCondition_name[1921:1950],
	"p":  _TradeCondition_name[1950:1976],
	"q":  _TradeCondition_name[1976:2006],
	"r":  _TradeCondition_name[2006:2036],
	"s":  _TradeCondition_name[2036:2062],
	"t":  _TradeCondition_name[2062:2092],
	"u":  _TradeCondition_name[2092:2120],
	"v":  _TradeCondition_name[2120:2153],
	"w":  _TradeCondition_name[2153:2174],
	"x":  _TradeCondition_name[2174:2199],
	"y":  _TradeCondition_name[2199:2222],
	"z":  _TradeCondition_name[2222:2249],
}

func (i TradeCondition) String() string {
	if str, ok := _TradeCondition_map[i]; ok {
		return str
	}
	return "TradeCondition(" + i.String() + ")"
}

const _TradeHandlingInstr_name = "TradeHandlingInstr_TRADE_CONFIRMATIONTradeHandlingInstr_TWO_PARTY_REPORTTradeHandlingInstr_ONE_PARTY_REPORT_FOR_MATCHINGTradeHandlingInstr_ONE_PARTY_REPORT_FOR_PASS_THROUGHTradeHandlingInstr_AUTOMATED_FLOOR_ORDER_ROUTINGTradeHandlingInstr_TWO_PARTY_REPORT_FOR_CLAIM"

var _TradeHandlingInstr_map = map[TradeHandlingInstr]string{
	"0": _TradeHandlingInstr_name[0:37],
	"1": _TradeHandlingInstr_name[37:72],
	"2": _TradeHandlingInstr_name[72:120],
	"3": _TradeHandlingInstr_name[120:172],
	"4": _TradeHandlingInstr_name[172:220],
	"5": _TradeHandlingInstr_name[220:265],
}

func (i TradeHandlingInstr) String() string {
	if str, ok := _TradeHandlingInstr_map[i]; ok {
		return str
	}
	return "TradeHandlingInstr(" + i.String() + ")"
}

const _TradePublishIndicator_name = "TradePublishIndicator_DO_NOT_PUBLISH_TRADETradePublishIndicator_PUBLISH_TRADETradePublishIndicator_DEFERRED_PUBLICATION"

var _TradePublishIndicator_map = map[TradePublishIndicator]string{
	"0": _TradePublishIndicator_name[0:42],
	"1": _TradePublishIndicator_name[42:77],
	"2": _TradePublishIndicator_name[77:119],
}

func (i TradePublishIndicator) String() string {
	if str, ok := _TradePublishIndicator_map[i]; ok {
		return str
	}
	return "TradePublishIndicator(" + i.String() + ")"
}

const _TradeReportRejectReason_name = "TradeReportRejectReason_SUCCESSFULTradeReportRejectReason_INVALID_PARTY_ONFORMATIONTradeReportRejectReason_UNKNOWN_INSTRUMENTTradeReportRejectReason_UNAUTHORIZED_TO_REPORT_TRADESTradeReportRejectReason_INVALID_TRADE_TYPETradeReportRejectReason_OTHER"

var _TradeReportRejectReason_map = map[TradeReportRejectReason]string{
	"0":  _TradeReportRejectReason_name[0:34],
	"1":  _TradeReportRejectReason_name[34:83],
	"2":  _TradeReportRejectReason_name[83:125],
	"3":  _TradeReportRejectReason_name[125:178],
	"4":  _TradeReportRejectReason_name[178:220],
	"99": _TradeReportRejectReason_name[220:249],
}

func (i TradeReportRejectReason) String() string {
	if str, ok := _TradeReportRejectReason_map[i]; ok {
		return str
	}
	return "TradeReportRejectReason(" + i.String() + ")"
}

const _TradeReportTransType_name = "TradeReportTransType_NEWTradeReportTransType_CANCELTradeReportTransType_REPLACETradeReportTransType_RELEASETradeReportTransType_REVERSETradeReportTransType_CANCEL_DUE_TO_BACK_OUT_OF_TRADE"

var _TradeReportTransType_map = map[TradeReportTransType]string{
	"0": _TradeReportTransType_name[0:24],
	"1": _TradeReportTransType_name[24:51],
	"2": _TradeReportTransType_name[51:79],
	"3": _TradeReportTransType_name[79:107],
	"4": _TradeReportTransType_name[107:135],
	"5": _TradeReportTransType_name[135:187],
}

func (i TradeReportTransType) String() string {
	if str, ok := _TradeReportTransType_map[i]; ok {
		return str
	}
	return "TradeReportTransType(" + i.String() + ")"
}

const _TradeReportType_name = "TradeReportType_SUBMITTradeReportType_ALLEGED_1TradeReportType_PENDEDTradeReportType_ALLEGED_NEWTradeReportType_ALLEGED_ADDENDUMTradeReportType_ALLEGED_NO_WASTradeReportType_ALLEGED_TRADE_REPORT_CANCELTradeReportType_ALLEGED_15TradeReportType_ACCEPTTradeReportType_DECLINETradeReportType_ADDENDUMTradeReportType_NO_WASTradeReportType_TRADE_REPORT_CANCELTradeReportType_7TradeReportType_DEFAULTEDTradeReportType_INVALID_CMTA"

var _TradeReportType_map = map[TradeReportType]string{
	"0":  _TradeReportType_name[0:22],
	"1":  _TradeReportType_name[22:47],
	"10": _TradeReportType_name[47:69],
	"11": _TradeReportType_name[69:96],
	"12": _TradeReportType_name[96:128],
	"13": _TradeReportType_name[128:158],
	"14": _TradeReportType_name[158:201],
	"15": _TradeReportType_name[201:227],
	"2":  _TradeReportType_name[227:249],
	"3":  _TradeReportType_name[249:272],
	"4":  _TradeReportType_name[272:296],
	"5":  _TradeReportType_name[296:318],
	"6":  _TradeReportType_name[318:353],
	"7":  _TradeReportType_name[353:370],
	"8":  _TradeReportType_name[370:395],
	"9":  _TradeReportType_name[395:423],
}

func (i TradeReportType) String() string {
	if str, ok := _TradeReportType_map[i]; ok {
		return str
	}
	return "TradeReportType(" + i.String() + ")"
}

const _TradeRequestResult_name = "TradeRequestResult_SUCCESSFULTradeRequestResult_INVALID_OR_UNKNOWN_INSTRUMENTTradeRequestResult_INVALID_TYPE_OF_TRADE_REQUESTEDTradeRequestResult_INVALID_PARTIESTradeRequestResult_INVALID_TRANSPORT_TYPE_REQUESTEDTradeRequestResult_INVALID_DESTINATION_REQUESTEDTradeRequestResult_TRADEREQUESTTYPE_NOT_SUPPORTEDTradeRequestResult_NOT_AUTHORIZEDTradeRequestResult_OTHER"

var _TradeRequestResult_map = map[TradeRequestResult]string{
	"0":  _TradeRequestResult_name[0:29],
	"1":  _TradeRequestResult_name[29:77],
	"2":  _TradeRequestResult_name[77:127],
	"3":  _TradeRequestResult_name[127:161],
	"4":  _TradeRequestResult_name[161:212],
	"5":  _TradeRequestResult_name[212:260],
	"8":  _TradeRequestResult_name[260:309],
	"9":  _TradeRequestResult_name[309:342],
	"99": _TradeRequestResult_name[342:366],
}

func (i TradeRequestResult) String() string {
	if str, ok := _TradeRequestResult_map[i]; ok {
		return str
	}
	return "TradeRequestResult(" + i.String() + ")"
}

const _TradeRequestStatus_name = "TradeRequestStatus_ACCEPTEDTradeRequestStatus_COMPLETEDTradeRequestStatus_REJECTED"

var _TradeRequestStatus_map = map[TradeRequestStatus]string{
	"0": _TradeRequestStatus_name[0:27],
	"1": _TradeRequestStatus_name[27:55],
	"2": _TradeRequestStatus_name[55:82],
}

func (i TradeRequestStatus) String() string {
	if str, ok := _TradeRequestStatus_map[i]; ok {
		return str
	}
	return "TradeRequestStatus(" + i.String() + ")"
}

const _TradeRequestType_name = "TradeRequestType_ALL_TRADESTradeRequestType_MATCHED_TRADES_MATCHING_CRITERIA_PROVIDED_ON_REQUESTTradeRequestType_UNMATCHED_TRADES_THAT_MATCH_CRITERIATradeRequestType_UNREPORTED_TRADES_THAT_MATCH_CRITERIATradeRequestType_ADVISORIES_THAT_MATCH_CRITERIA"

var _TradeRequestType_map = map[TradeRequestType]string{
	"0": _TradeRequestType_name[0:27],
	"1": _TradeRequestType_name[27:96],
	"2": _TradeRequestType_name[96:149],
	"3": _TradeRequestType_name[149:203],
	"4": _TradeRequestType_name[203:250],
}

func (i TradeRequestType) String() string {
	if str, ok := _TradeRequestType_map[i]; ok {
		return str
	}
	return "TradeRequestType(" + i.String() + ")"
}

const _TradeType_name = "TradeType_AGENCYTradeType_VWAP_GUARANTEETradeType_GUARANTEED_CLOSETradeType_RISK_TRADE"

var _TradeType_map = map[TradeType]string{
	"A": _TradeType_name[0:16],
	"G": _TradeType_name[16:40],
	"J": _TradeType_name[40:66],
	"R": _TradeType_name[66:86],
}

func (i TradeType) String() string {
	if str, ok := _TradeType_map[i]; ok {
		return str
	}
	return "TradeType(" + i.String() + ")"
}

const _TradedFlatSwitch_name = "TradedFlatSwitch_NOTradedFlatSwitch_YES"

var _TradedFlatSwitch_map = map[TradedFlatSwitch]string{
	"N": _TradedFlatSwitch_name[0:19],
	"Y": _TradedFlatSwitch_name[19:39],
}

func (i TradedFlatSwitch) String() string {
	if str, ok := _TradedFlatSwitch_map[i]; ok {
		return str
	}
	return "TradedFlatSwitch(" + i.String() + ")"
}

const _TradingSessionID_name = "TradingSessionID_DAYTradingSessionID_HALFDAYTradingSessionID_MORNINGTradingSessionID_AFTERNOONTradingSessionID_EVENINGTradingSessionID_AFTER_HOURS"

var _TradingSessionID_map = map[TradingSessionID]string{
	"1": _TradingSessionID_name[0:20],
	"2": _TradingSessionID_name[20:44],
	"3": _TradingSessionID_name[44:68],
	"4": _TradingSessionID_name[68:94],
	"5": _TradingSessionID_name[94:118],
	"6": _TradingSessionID_name[118:146],
}

func (i TradingSessionID) String() string {
	if str, ok := _TradingSessionID_map[i]; ok {
		return str
	}
	return "TradingSessionID(" + i.String() + ")"
}

const _TradingSessionSubID_name = "TradingSessionSubID_PRE_TRADINGTradingSessionSubID_OPENING_OR_OPENING_AUCTIONTradingSessionSubID_3TradingSessionSubID_CLOSING_OR_CLOSING_AUCTIONTradingSessionSubID_POST_TRADINGTradingSessionSubID_INTRADAY_AUCTIONTradingSessionSubID_QUIESCENT"

var _TradingSessionSubID_map = map[TradingSessionSubID]string{
	"1": _TradingSessionSubID_name[0:31],
	"2": _TradingSessionSubID_name[31:77],
	"3": _TradingSessionSubID_name[77:98],
	"4": _TradingSessionSubID_name[98:144],
	"5": _TradingSessionSubID_name[144:176],
	"6": _TradingSessionSubID_name[176:212],
	"7": _TradingSessionSubID_name[212:241],
}

func (i TradingSessionSubID) String() string {
	if str, ok := _TradingSessionSubID_map[i]; ok {
		return str
	}
	return "TradingSessionSubID(" + i.String() + ")"
}

const _TrdRegTimestampType_name = "TrdRegTimestampType_EXECUTION_TIMETrdRegTimestampType_TIME_INTrdRegTimestampType_TIME_OUTTrdRegTimestampType_BROKER_RECEIPTTrdRegTimestampType_BROKER_EXECUTIONTrdRegTimestampType_DESK_RECEIPTTrdRegTimestampType_SUBMISSION_TO_CLEARING"

var _TrdRegTimestampType_map = map[TrdRegTimestampType]string{
	"1": _TrdRegTimestampType_name[0:34],
	"2": _TrdRegTimestampType_name[34:61],
	"3": _TrdRegTimestampType_name[61:89],
	"4": _TrdRegTimestampType_name[89:123],
	"5": _TrdRegTimestampType_name[123:159],
	"6": _TrdRegTimestampType_name[159:191],
	"7": _TrdRegTimestampType_name[191:233],
}

func (i TrdRegTimestampType) String() string {
	if str, ok := _TrdRegTimestampType_map[i]; ok {
		return str
	}
	return "TrdRegTimestampType(" + i.String() + ")"
}

const _TrdRptStatus_name = "TrdRptStatus_ACCEPTEDTrdRptStatus_REJECTEDTrdRptStatus_ACCEPTED_WITH_ERRORS"

var _TrdRptStatus_map = map[TrdRptStatus]string{
	"0": _TrdRptStatus_name[0:21],
	"1": _TrdRptStatus_name[21:42],
	"3": _TrdRptStatus_name[42:75],
}

func (i TrdRptStatus) String() string {
	if str, ok := _TrdRptStatus_map[i]; ok {
		return str
	}
	return "TrdRptStatus(" + i.String() + ")"
}

const _TrdSubType_name = "TrdSubType_CMTATrdSubType_INTERNAL_TRANSFER_OR_ADJUSTMENTTrdSubType_TRANSACTION_FROM_ASSIGNMENTTrdSubType_ACATSTrdSubType_AITrdSubType_BTrdSubType_KTrdSubType_LCTrdSubType_MTrdSubType_NTrdSubType_EXTERNAL_TRANSFER_OR_TRANSFER_OF_ACCOUNTTrdSubType_NMTrdSubType_NRTrdSubType_PTrdSubType_PATrdSubType_PCTrdSubType_PNTrdSubType_RTrdSubType_ROTrdSubType_RTTrdSubType_SWTrdSubType_REJECT_FOR_SUBMITTING_SIDETrdSubType_TTrdSubType_WNTrdSubType_WTTrdSubType_OFF_HOURS_TRADETrdSubType_ON_HOURS_TRADETrdSubType_OTC_QUOTETrdSubType_CONVERTED_SWAPTrdSubType_CROSSED_TRADETrdSubType_INTERIM_PROTECTED_TRADETrdSubType_LARGE_IN_SCALETrdSubType_ADVISORY_FOR_CONTRA_SIDETrdSubType_OFFSET_DUE_TO_AN_ALLOCATIONTrdSubType_ONSET_DUE_TO_AN_ALLOCATIONTrdSubType_DIFFERENTIAL_SPREADTrdSubType_IMPLIED_SPREAD_LEG_EXECUTED_AGAINST_AN_OUTRIGHTTrdSubType_TRANSACTION_FROM_EXERCISE"

var _TrdSubType_map = map[TrdSubType]string{
	"0":  _TrdSubType_name[0:15],
	"1":  _TrdSubType_name[15:57],
	"10": _TrdSubType_name[57:95],
	"11": _TrdSubType_name[95:111],
	"14": _TrdSubType_name[111:124],
	"15": _TrdSubType_name[124:136],
	"16": _TrdSubType_name[136:148],
	"17": _TrdSubType_name[148:161],
	"18": _TrdSubType_name[161:173],
	"19": _TrdSubType_name[173:185],
	"2":  _TrdSubType_name[185:236],
	"20": _TrdSubType_name[236:249],
	"21": _TrdSubType_name[249:262],
	"22": _TrdSubType_name[262:274],
	"23": _TrdSubType_name[274:287],
	"24": _TrdSubType_name[287:300],
	"25": _TrdSubType_name[300:313],
	"26": _TrdSubType_name[313:325],
	"27": _TrdSubType_name[325:338],
	"28": _TrdSubType_name[338:351],
	"29": _TrdSubType_name[351:364],
	"3":  _TrdSubType_name[364:401],
	"30": _TrdSubType_name[401:413],
	"31": _TrdSubType_name[413:426],
	"32": _TrdSubType_name[426:439],
	"33": _TrdSubType_name[439:465],
	"34": _TrdSubType_name[465:490],
	"35": _TrdSubType_name[490:510],
	"36": _TrdSubType_name[510:535],
	"37": _TrdSubType_name[535:559],
	"38": _TrdSubType_name[559:593],
	"39": _TrdSubType_name[593:618],
	"4":  _TrdSubType_name[618:653],
	"5":  _TrdSubType_name[653:691],
	"6":  _TrdSubType_name[691:728],
	"7":  _TrdSubType_name[728:758],
	"8":  _TrdSubType_name[758:816],
	"9":  _TrdSubType_name[816:852],
}

func (i TrdSubType) String() string {
	if str, ok := _TrdSubType_map[i]; ok {
		return str
	}
	return "TrdSubType(" + i.String() + ")"
}

const _TrdType_name = "TrdType_REGULAR_TRADETrdType_BLOCK_TRADE_1TrdType_AFTER_HOURS_TRADETrdType_EXCHANGE_FOR_RISKTrdType_EXCHANGE_FOR_SWAPTrdType_EXCHANGE_OF_FUTURES_FORTrdType_EXCHANGE_OF_OPTIONS_FOR_OPTIONSTrdType_TRADING_AT_SETTLEMENTTrdType_ALL_OR_NONETrdType_FUTURES_LARGE_ORDER_EXECUTIONTrdType_EXCHANGE_OF_FUTURES_FOR_FUTURESTrdType_OPTION_INTERIM_TRADETrdType_EFPTrdType_OPTION_CABINET_TRADETrdType_PRIVATELY_NEGOTIATED_TRADESTrdType_SUBSTITUTION_OF_FUTURES_FOR_FORWARDSTrdType_ERROR_TRADETrdType_SPECIAL_CUM_DIVIDENDTrdType_SPECIAL_EX_DIVIDENDTrdType_SPECIAL_CUM_COUPONTrdType_SPECIAL_EX_COUPONTrdType_CASH_SETTLEMENTTrdType_TRANSFERTrdType_SPECIAL_PRICETrdType_GUARANTEED_DELIVERYTrdType_SPECIAL_CUM_RIGHTSTrdType_SPECIAL_EX_RIGHTSTrdType_SPECIAL_CUM_CAPITAL_REPAYMENTSTrdType_SPECIAL_EX_CAPITAL_REPAYMENTSTrdType_SPECIAL_CUM_BONUSTrdType_SPECIAL_EX_BONUSTrdType_BLOCK_TRADE_38TrdType_WORKED_PRINCIPAL_TRADETrdType_LATE_TRADETrdType_BLOCK_TRADESTrdType_NAME_CHANGETrdType_PORTFOLIO_TRANSFERTrdType_PROROGATION_BUYTrdType_PROROGATION_SELLTrdType_OPTION_EXERCISETrdType_DELTA_NEUTRAL_TRANSACTIONTrdType_FINANCING_TRANSACTIONTrdType_NON_STANDARD_SETTLEMENTTrdType_DERIVATIVE_RELATED_TRANSACTIONTrdType_T_TRADETrdType_PORTFOLIO_TRADETrdType_VOLUME_WEIGHTED_AVERAGE_TRADETrdType_EXCHANGE_GRANTED_TRADETrdType_REPURCHASE_AGREEMENTTrdType_OTCTrdType_EXCHANGE_BASIS_FACILITYTrdType_WEIGHTED_AVERAGE_PRICE_TRADETrdType_BUNCHED_TRADETrdType_LATE_BUNCHED_TRADETrdType_PRIOR_REFERENCE_PRICE_TRADE"

var _TrdType_map = map[TrdType]string{
	"0":  _TrdType_name[0:21],
	"1":  _TrdType_name[21:42],
	"10": _TrdType_name[42:67],
	"11": _TrdType_name[67:92],
	"12": _TrdType_name[92:117],
	"13": _TrdType_name[117:148],
	"14": _TrdType_name[148:187],
	"15": _TrdType_name[187:216],
	"16": _TrdType_name[216:235],
	"17": _TrdType_name[235:272],
	"18": _TrdType_name[272:311],
	"19": _TrdType_name[311:339],
	"2":  _TrdType_name[339:350],
	"20": _TrdType_name[350:378],
	"22": _TrdType_name[378:413],
	"23": _TrdType_name[413:457],
	"24": _TrdType_name[457:476],
	"25": _TrdType_name[476:504],
	"26": _TrdType_name[504:531],
	"27": _TrdType_name[531:557],
	"28": _TrdType_name[557:582],
	"29": _TrdType_name[582:605],
	"3":  _TrdType_name[605:621],
	"30": _TrdType_name[621:642],
	"31": _TrdType_name[642:669],
	"32": _TrdType_name[669:695],
	"33": _TrdType_name[695:720],
	"34": _TrdType_name[720:758],
	"35": _TrdType_name[758:795],
	"36": _TrdType_name[795:820],
	"37": _TrdType_name[820:844],
	"38": _TrdType_name[844:866],
	"39": _TrdType_name[866:896],
	"4":  _TrdType_name[896:914],
	"40": _TrdType_name[914:934],
	"41": _TrdType_name[934:953],
	"42": _TrdType_name[953:979],
	"43": _TrdType_name[979:1002],
	"44": _TrdType_name[1002:1026],
	"45": _TrdType_name[1026:1049],
	"46": _TrdType_name[1049:1082],
	"47": _TrdType_name[1082:1111],
	"48": _TrdType_name[1111:1142],
	"49": _TrdType_name[1142:1180],
	"5":  _TrdType_name[1180:1195],
	"50": _TrdType_name[1195:1218],
	"51": _TrdType_name[1218:1255],
	"52": _TrdType_name[1255:1285],
	"53": _TrdType_name[1285:1313],
	"54": _TrdType_name[1313:1324],
	"55": _TrdType_name[1324:1355],
	"6":  _TrdType_name[1355:1391],
	"7":  _TrdType_name[1391:1412],
	"8":  _TrdType_name[1412:1438],
	"9":  _TrdType_name[1438:1473],
}

func (i TrdType) String() string {
	if str, ok := _TrdType_map[i]; ok {
		return str
	}
	return "TrdType(" + i.String() + ")"
}

const _TriggerAction_name = "TriggerAction_ACTIVATETriggerAction_MODIFYTriggerAction_CANCEL"

var _TriggerAction_map = map[TriggerAction]string{
	"1": _TriggerAction_name[0:22],
	"2": _TriggerAction_name[22:42],
	"3": _TriggerAction_name[42:62],
}

func (i TriggerAction) String() string {
	if str, ok := _TriggerAction_map[i]; ok {
		return str
	}
	return "TriggerAction(" + i.String() + ")"
}

const _TriggerOrderType_name = "TriggerOrderType_MARKETTriggerOrderType_LIMIT"

var _TriggerOrderType_map = map[TriggerOrderType]string{
	"1": _TriggerOrderType_name[0:23],
	"2": _TriggerOrderType_name[23:45],
}

func (i TriggerOrderType) String() string {
	if str, ok := _TriggerOrderType_map[i]; ok {
		return str
	}
	return "TriggerOrderType(" + i.String() + ")"
}

const _TriggerPriceDirection_name = "TriggerPriceDirection_TRIGGER_IF_THE_PRICE_OF_THE_SPECIFIED_TYPE_GOES_DOWN_TO_OR_THROUGH_THE_SPECIFIED_TRIGGER_PRICETriggerPriceDirection_TRIGGER_IF_THE_PRICE_OF_THE_SPECIFIED_TYPE_GOES_UP_TO_OR_THROUGH_THE_SPECIFIED_TRIGGER_PRICE"

var _TriggerPriceDirection_map = map[TriggerPriceDirection]string{
	"D": _TriggerPriceDirection_name[0:116],
	"U": _TriggerPriceDirection_name[116:230],
}

func (i TriggerPriceDirection) String() string {
	if str, ok := _TriggerPriceDirection_map[i]; ok {
		return str
	}
	return "TriggerPriceDirection(" + i.String() + ")"
}

const _TriggerPriceType_name = "TriggerPriceType_BEST_OFFERTriggerPriceType_LAST_TRADETriggerPriceType_BEST_BIDTriggerPriceType_BEST_BID_OR_LAST_TRADETriggerPriceType_BEST_OFFER_OR_LAST_TRADETriggerPriceType_BEST_MID"

var _TriggerPriceType_map = map[TriggerPriceType]string{
	"1": _TriggerPriceType_name[0:27],
	"2": _TriggerPriceType_name[27:54],
	"3": _TriggerPriceType_name[54:79],
	"4": _TriggerPriceType_name[79:118],
	"5": _TriggerPriceType_name[118:159],
	"6": _TriggerPriceType_name[159:184],
}

func (i TriggerPriceType) String() string {
	if str, ok := _TriggerPriceType_map[i]; ok {
		return str
	}
	return "TriggerPriceType(" + i.String() + ")"
}

const _TriggerPriceTypeScope_name = "TriggerPriceTypeScope_NONETriggerPriceTypeScope_LOCALTriggerPriceTypeScope_NATIONALTriggerPriceTypeScope_GLOBAL"

var _TriggerPriceTypeScope_map = map[TriggerPriceTypeScope]string{
	"0": _TriggerPriceTypeScope_name[0:26],
	"1": _TriggerPriceTypeScope_name[26:53],
	"2": _TriggerPriceTypeScope_name[53:83],
	"3": _TriggerPriceTypeScope_name[83:111],
}

func (i TriggerPriceTypeScope) String() string {
	if str, ok := _TriggerPriceTypeScope_map[i]; ok {
		return str
	}
	return "TriggerPriceTypeScope(" + i.String() + ")"
}

const _TriggerType_name = "TriggerType_PARTIAL_EXECUTIONTriggerType_SPECIFIED_TRADING_SESSIONTriggerType_NEXT_AUCTIONTriggerType_PRICE_MOVEMENT"

var _TriggerType_map = map[TriggerType]string{
	"1": _TriggerType_name[0:29],
	"2": _TriggerType_name[29:66],
	"3": _TriggerType_name[66:90],
	"4": _TriggerType_name[90:116],
}

func (i TriggerType) String() string {
	if str, ok := _TriggerType_map[i]; ok {
		return str
	}
	return "TriggerType(" + i.String() + ")"
}

const _UnderlyingCashType_name = "UnderlyingCashType_DIFFUnderlyingCashType_FIXED"

var _UnderlyingCashType_map = map[UnderlyingCashType]string{
	"DIFF":  _UnderlyingCashType_name[0:23],
	"FIXED": _UnderlyingCashType_name[23:47],
}

func (i UnderlyingCashType) String() string {
	if str, ok := _UnderlyingCashType_map[i]; ok {
		return str
	}
	return "UnderlyingCashType(" + i.String() + ")"
}

const _UnderlyingFXRateCalc_name = "UnderlyingFXRateCalc_DIVIDEUnderlyingFXRateCalc_MULTIPLY"

var _UnderlyingFXRateCalc_map = map[UnderlyingFXRateCalc]string{
	"D": _UnderlyingFXRateCalc_name[0:27],
	"M": _UnderlyingFXRateCalc_name[27:56],
}

func (i UnderlyingFXRateCalc) String() string {
	if str, ok := _UnderlyingFXRateCalc_map[i]; ok {
		return str
	}
	return "UnderlyingFXRateCalc(" + i.String() + ")"
}

const _UnderlyingPriceDeterminationMethod_name = "UnderlyingPriceDeterminationMethod_REGULARUnderlyingPriceDeterminationMethod_SPECIAL_REFERENCEUnderlyingPriceDeterminationMethod_OPTIMAL_VALUEUnderlyingPriceDeterminationMethod_AVERAGE_VALUE"

var _UnderlyingPriceDeterminationMethod_map = map[UnderlyingPriceDeterminationMethod]string{
	"1": _UnderlyingPriceDeterminationMethod_name[0:42],
	"2": _UnderlyingPriceDeterminationMethod_name[42:94],
	"3": _UnderlyingPriceDeterminationMethod_name[94:142],
	"4": _UnderlyingPriceDeterminationMethod_name[142:190],
}

func (i UnderlyingPriceDeterminationMethod) String() string {
	if str, ok := _UnderlyingPriceDeterminationMethod_map[i]; ok {
		return str
	}
	return "UnderlyingPriceDeterminationMethod(" + i.String() + ")"
}

const _UnderlyingSettlementType_name = "UnderlyingSettlementType_T_PLUS_1UnderlyingSettlementType_T_PLUS_3UnderlyingSettlementType_T_PLUS_4"

var _UnderlyingSettlementType_map = map[UnderlyingSettlementType]string{
	"2": _UnderlyingSettlementType_name[0:33],
	"4": _UnderlyingSettlementType_name[33:66],
	"5": _UnderlyingSettlementType_name[66:99],
}

func (i UnderlyingSettlementType) String() string {
	if str, ok := _UnderlyingSettlementType_map[i]; ok {
		return str
	}
	return "UnderlyingSettlementType(" + i.String() + ")"
}

const _UnitOfMeasure_name = "UnitOfMeasure_ALLOWANCESUnitOfMeasure_BARRELSUnitOfMeasure_BILLION_CUBIC_FEETUnitOfMeasure_BUSHELSUnitOfMeasure_GALLONSUnitOfMeasure_ONE_MILLION_BTUUnitOfMeasure_MILLION_BARRELSUnitOfMeasure_MEGAWATT_HOURSUnitOfMeasure_US_DOLLARSUnitOfMeasure_POUNDSUnitOfMeasure_TROY_OUNCESUnitOfMeasure_METRIC_TONSUnitOfMeasure_TONS"

var _UnitOfMeasure_map = map[UnitOfMeasure]string{
	"Alw":   _UnitOfMeasure_name[0:24],
	"Bbl":   _UnitOfMeasure_name[24:45],
	"Bcf":   _UnitOfMeasure_name[45:77],
	"Bu":    _UnitOfMeasure_name[77:98],
	"Gal":   _UnitOfMeasure_name[98:119],
	"MMBtu": _UnitOfMeasure_name[119:148],
	"MMbbl": _UnitOfMeasure_name[148:177],
	"MWh":   _UnitOfMeasure_name[177:205],
	"USD":   _UnitOfMeasure_name[205:229],
	"lbs":   _UnitOfMeasure_name[229:249],
	"oz_tr": _UnitOfMeasure_name[249:274],
	"t":     _UnitOfMeasure_name[274:299],
	"tn":    _UnitOfMeasure_name[299:317],
}

func (i UnitOfMeasure) String() string {
	if str, ok := _UnitOfMeasure_map[i]; ok {
		return str
	}
	return "UnitOfMeasure(" + i.String() + ")"
}

const _UnsolicitedIndicator_name = "UnsolicitedIndicator_NOUnsolicitedIndicator_YES"

var _UnsolicitedIndicator_map = map[UnsolicitedIndicator]string{
	"N": _UnsolicitedIndicator_name[0:23],
	"Y": _UnsolicitedIndicator_name[23:47],
}

func (i UnsolicitedIndicator) String() string {
	if str, ok := _UnsolicitedIndicator_map[i]; ok {
		return str
	}
	return "UnsolicitedIndicator(" + i.String() + ")"
}

const _Urgency_name = "Urgency_NORMALUrgency_FLASHUrgency_BACKGROUND"

var _Urgency_map = map[Urgency]string{
	"0": _Urgency_name[0:14],
	"1": _Urgency_name[14:27],
	"2": _Urgency_name[27:45],
}

func (i Urgency) String() string {
	if str, ok := _Urgency_map[i]; ok {
		return str
	}
	return "Urgency(" + i.String() + ")"
}

const _UserRequestType_name = "UserRequestType_LOG_ON_USERUserRequestType_LOG_OFF_USERUserRequestType_CHANGE_PASSWORD_FOR_USERUserRequestType_REQUEST_INDIVIDUAL_USER_STATUS"

var _UserRequestType_map = map[UserRequestType]string{
	"1": _UserRequestType_name[0:27],
	"2": _UserRequestType_name[27:55],
	"3": _UserRequestType_name[55:95],
	"4": _UserRequestType_name[95:141],
}

func (i UserRequestType) String() string {
	if str, ok := _UserRequestType_map[i]; ok {
		return str
	}
	return "UserRequestType(" + i.String() + ")"
}

const _UserStatus_name = "UserStatus_LOGGED_INUserStatus_NOT_LOGGED_INUserStatus_USER_NOT_RECOGNISEDUserStatus_PASSWORD_INCORRECTUserStatus_PASSWORD_CHANGEDUserStatus_OTHERUserStatus_FORCED_USER_LOGOUT_BY_EXCHANGEUserStatus_SESSION_SHUTDOWN_WARNING"

var _UserStatus_map = map[UserStatus]string{
	"1": _UserStatus_name[0:20],
	"2": _UserStatus_name[20:44],
	"3": _UserStatus_name[44:74],
	"4": _UserStatus_name[74:103],
	"5": _UserStatus_name[103:130],
	"6": _UserStatus_name[130:146],
	"7": _UserStatus_name[146:187],
	"8": _UserStatus_name[187:222],
}

func (i UserStatus) String() string {
	if str, ok := _UserStatus_map[i]; ok {
		return str
	}
	return "UserStatus(" + i.String() + ")"
}

const _ValuationMethod_name = "ValuationMethod_CDS_STYLE_COLLATERALIZATION_OF_MARKET_TO_MARKET_AND_COUPONValuationMethod_CDS_IN_DELIVERYValuationMethod_PREMIUM_STYLEValuationMethod_FUTURES_STYLE_MARK_TO_MARKETValuationMethod_FUTURES_STYLE_WITH_AN_ATTACHED_CASH_ADJUSTMENT"

var _ValuationMethod_map = map[ValuationMethod]string{
	"CDS":   _ValuationMethod_name[0:74],
	"CDSD":  _ValuationMethod_name[74:105],
	"EQTY":  _ValuationMethod_name[105:134],
	"FUT":   _ValuationMethod_name[134:178],
	"FUTDA": _ValuationMethod_name[178:240],
}

func (i ValuationMethod) String() string {
	if str, ok := _ValuationMethod_map[i]; ok {
		return str
	}
	return "ValuationMethod(" + i.String() + ")"
}

const _VenueType_name = "VenueType_ELECTRONICVenueType_PITVenueType_EX_PIT"

var _VenueType_map = map[VenueType]string{
	"E": _VenueType_name[0:20],
	"P": _VenueType_name[20:33],
	"X": _VenueType_name[33:49],
}

func (i VenueType) String() string {
	if str, ok := _VenueType_map[i]; ok {
		return str
	}
	return "VenueType(" + i.String() + ")"
}

const _WorkingIndicator_name = "WorkingIndicator_NOWorkingIndicator_YES"

var _WorkingIndicator_map = map[WorkingIndicator]string{
	"N": _WorkingIndicator_name[0:19],
	"Y": _WorkingIndicator_name[19:39],
}

func (i WorkingIndicator) String() string {
	if str, ok := _WorkingIndicator_map[i]; ok {
		return str
	}
	return "WorkingIndicator(" + i.String() + ")"
}

const _YieldType_name = "YieldType_AFTER_TAX_YIELDYieldType_ANNUAL_YIELDYieldType_YIELD_AT_ISSUEYieldType_YIELD_TO_AVERAGE_LIFE_THE_YIELD_ASSUMING_THAT_ALL_SINKSYieldType_YIELD_TO_AVG_MATURITYYieldType_BOOK_YIELDYieldType_YIELD_TO_NEXT_CALLYieldType_YIELD_CHANGE_SINCE_CLOSEYieldType_CLOSING_YIELDYieldType_COMPOUND_YIELDYieldType_CURRENT_YIELDYieldType_GVNT_EQUIVALENT_YIELDYieldType_TRUE_GROSS_YIELDYieldType_YIELD_WITH_INFLATION_ASSUMPTIONYieldType_INVERSE_FLOATER_BOND_YIELDYieldType_MOST_RECENT_CLOSING_YIELDYieldType_CLOSING_YIELD_MOST_RECENT_MONTHYieldType_CLOSING_YIELD_MOST_RECENT_QUARTERYieldType_CLOSING_YIELD_MOST_RECENT_YEARYieldType_YIELD_TO_LONGEST_AVERAGE_LIFEYieldType_YIELD_TO_LONGEST_AVERAGEYieldType_MARK_TO_MARKET_YIELDYieldType_YIELD_TO_MATURITYYieldType_YIELD_TO_NEXT_REFUNDYieldType_OPEN_AVERAGE_YIELDYieldType_PREVIOUS_CLOSE_YIELDYieldType_PROCEEDS_YIELDYieldType_YIELD_TO_NEXT_PUTYieldType_SEMI_ANNUAL_YIELDYieldType_YIELD_TO_SHORTEST_AVERAGE_LIFEYieldType_YIELD_TO_SHORTEST_AVERAGEYieldType_SIMPLE_YIELDYieldType_TAX_EQUIVALENT_YIELDYieldType_YIELD_TO_TENDER_DATEYieldType_TRUE_YIELDYieldType_YIELD_VALUE_OF_1_32_THE_AMOUNT_THAT_THE_YIELD_WILL_CHANGE_FOR_A_1_32ND_CHANGE_IN_PRICEYieldType_YIELD_VALUE_OF_1_32YieldType_YIELD_TO_WORST"

var _YieldType_map = map[YieldType]string{
	"AFTERTAX":       _YieldType_name[0:25],
	"ANNUAL":         _YieldType_name[25:47],
	"ATISSUE":        _YieldType_name[47:71],
	"AVGLIFE":        _YieldType_name[71:136],
	"AVGMATURITY":    _YieldType_name[136:167],
	"BOOK":           _YieldType_name[167:187],
	"CALL":           _YieldType_name[187:215],
	"CHANGE":         _YieldType_name[215:249],
	"CLOSE":          _YieldType_name[249:272],
	"COMPOUND":       _YieldType_name[272:296],
	"CURRENT":        _YieldType_name[296:319],
	"GOVTEQUIV":      _YieldType_name[319:350],
	"GROSS":          _YieldType_name[350:376],
	"INFLATION":      _YieldType_name[376:417],
	"INVERSEFLOATER": _YieldType_name[417:453],
	"LASTCLOSE":      _YieldType_name[453:488],
	"LASTMONTH":      _YieldType_name[488:529],
	"LASTQUARTER":    _YieldType_name[529:572],
	"LASTYEAR":       _YieldType_name[572:612],
	"LONGAVGLIFE":    _YieldType_name[612:651],
	"LONGEST":        _YieldType_name[651:685],
	"MARK":           _YieldType_name[685:715],
	"MATURITY":       _YieldType_name[715:742],
	"NEXTREFUND":     _YieldType_name[742:772],
	"OPENAVG":        _YieldType_name[772:800],
	"PREVCLOSE":      _YieldType_name[800:830],
	"PROCEEDS":       _YieldType_name[830:854],
	"PUT":            _YieldType_name[854:881],
	"SEMIANNUAL":     _YieldType_name[881:908],
	"SHORTAVGLIFE":   _YieldType_name[908:948],
	"SHORTEST":       _YieldType_name[948:983],
	"SIMPLE":         _YieldType_name[983:1005],
	"TAXEQUIV":       _YieldType_name[1005:1035],
	"TENDER":         _YieldType_name[1035:1065],
	"TRUE":           _YieldType_name[1065:1085],
	"VALUE1/32":      _YieldType_name[1085:1181],
	"VALUE1_32":      _YieldType_name[1181:1210],
	"WORST":          _YieldType_name[1210:1234],
}

func (i YieldType) String() string {
	if str, ok := _YieldType_map[i]; ok {
		return str
	}
	return "YieldType(" + i.String() + ")"
}
